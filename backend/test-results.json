[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
{"numTotalTestSuites":326,"numPassedTestSuites":313,"numFailedTestSuites":13,"numPendingTestSuites":0,"numTotalTests":735,"numPassedTests":726,"numFailedTests":9,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751614441253,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block basic path traversal with double dots","status":"failed","title":"should block basic path traversal with double dots","duration":37.946199999999976,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:94:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block URL encoded path traversal","status":"passed","title":"should block URL encoded path traversal","duration":22.19920000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block tilde-based path traversal","status":"passed","title":"should block tilde-based path traversal","duration":5.589399999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block Windows-style path traversal","status":"failed","title":"should block Windows-style path traversal","duration":7.765300000000025,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:138:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to dotfiles","status":"passed","title":"should block access to dotfiles","duration":10.945899999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to various dotfile types","status":"failed","title":"should block access to various dotfile types","duration":12.033599999999979,"failureMessages":["Error: expected 403 \"Forbidden\", got 400 \"Bad Request\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:171:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should serve legitimate files correctly","status":"failed","title":"should serve legitimate files correctly","duration":17.51800000000003,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:188:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should allow files with dots in names","status":"passed","title":"should allow files with dots in names","duration":8.346900000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":8.688600000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set appropriate Content-Disposition for different file types","status":"passed","title":"should set appropriate Content-Disposition for different file types","duration":48.47129999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set all required security headers","status":"passed","title":"should set all required security headers","duration":7.275700000000029,"failureMessages":[],"meta":{}}],"startTime":1751614448315,"endTime":1751614448503.2756,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with BASE_URL when provided","status":"passed","title":"should generate URL with BASE_URL when provided","duration":2.9875999999999863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with default localhost when no BASE_URL","status":"passed","title":"should generate URL with default localhost when no BASE_URL","duration":0.5435999999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should use custom PORT when provided","status":"passed","title":"should use custom PORT when provided","duration":0.4671999999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should handle special characters in filename","status":"passed","title":"should handle special characters in filename","duration":0.4878999999999678,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should generate unique filenames with UUID and timestamp","status":"passed","title":"should generate unique filenames with UUID and timestamp","duration":1.6117999999999597,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should handle files without extensions","status":"passed","title":"should handle files without extensions","duration":0.4726999999999748,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should preserve file extensions correctly","status":"passed","title":"should preserve file extensions correctly","duration":0.5541000000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","File Filter Logic"],"fullName":"Media Route Unit Tests File Filter Logic should accept all files when using passthrough filter","status":"passed","title":"should accept all files when using passthrough filter","duration":1.8215000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should generate consistent error responses","status":"passed","title":"should generate consistent error responses","duration":0.38900000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should handle multer error code mapping","status":"passed","title":"should handle multer error code mapping","duration":0.3697999999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should reject filenames with path traversal attempts","status":"passed","title":"should reject filenames with path traversal attempts","duration":0.24389999999999645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should accept safe filenames","status":"passed","title":"should accept safe filenames","duration":0.27369999999996253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","File Size Validation"],"fullName":"Security Unit Tests File Size Validation should validate file sizes correctly","status":"passed","title":"should validate file sizes correctly","duration":0.24129999999996699,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Unit Tests","Memory Usage"],"fullName":"Performance Unit Tests Memory Usage should handle large file metadata efficiently","status":"passed","title":"should handle large file metadata efficiently","duration":1.5880999999999972,"failureMessages":[],"meta":{}}],"startTime":1751614447361,"endTime":1751614447374.5881,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload valid image file successfully","status":"passed","title":"should upload valid image file successfully","duration":49.20719999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload file without alt text","status":"passed","title":"should upload file without alt text","duration":10.641399999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should handle all supported file types","status":"passed","title":"should handle all supported file types","duration":28.750800000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject requests with no file","status":"passed","title":"should reject requests with no file","duration":5.272699999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject unsupported file types","status":"passed","title":"should reject unsupported file types","duration":7.683200000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject files exceeding size limit","status":"passed","title":"should reject files exceeding size limit","duration":91.83190000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should validate alt text length","status":"passed","title":"should validate alt text length","duration":12.062600000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should create uploads directory if it does not exist","status":"passed","title":"should create uploads directory if it does not exist","duration":9.24090000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should handle directory creation failure","status":"passed","title":"should handle directory creation failure","duration":6.8496000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Error Recovery"],"fullName":"Media Upload Route Error Recovery should clean up uploaded file if processing fails","status":"passed","title":"should clean up uploaded file if processing fails","duration":14.64269999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files just under the size limit","status":"passed","title":"should handle files just under the size limit","duration":98.10440000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should reject files at exactly the size limit","status":"passed","title":"should reject files at exactly the size limit","duration":56.45779999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files with no extension","status":"passed","title":"should handle files with no extension","duration":4.636700000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle very small files","status":"passed","title":"should handle very small files","duration":5.350999999999885,"failureMessages":[],"meta":{}}],"startTime":1751614446760,"endTime":1751614447162.351,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with double dots (..)","status":"failed","title":"should block requests with double dots (..)","duration":41.548200000000065,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:105:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with tilde (~)","status":"passed","title":"should block requests with tilde (~)","duration":15.570400000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block complex path traversal attempts","status":"failed","title":"should block complex path traversal attempts","duration":5.789700000000039,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:147:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow legitimate file access","status":"failed","title":"should allow legitimate file access","duration":14.685899999999947,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:163:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow files with dots in names but not path traversal","status":"passed","title":"should allow files with dots in names but not path traversal","duration":11.653599999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Content-Type-Options header","status":"passed","title":"should set X-Content-Type-Options header","duration":10.292299999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Frame-Options header","status":"passed","title":"should set X-Frame-Options header","duration":12.24619999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for image files","status":"passed","title":"should set inline Content-Disposition for image files","duration":44.116300000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for video files","status":"passed","title":"should set inline Content-Disposition for video files","duration":21.274900000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set attachment Content-Disposition for other file types","status":"passed","title":"should set attachment Content-Disposition for other file types","duration":33.70940000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to dotfiles","status":"passed","title":"should deny access to dotfiles","duration":7.271099999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to files starting with dot","status":"failed","title":"should deny access to files starting with dot","duration":6.699299999999994,"failureMessages":["Error: expected 403 \"Forbidden\", got 400 \"Bad Request\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:293:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":9.016399999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for empty filename","status":"passed","title":"should return 404 for empty filename","duration":5.801600000000008,"failureMessages":[],"meta":{}}],"startTime":1751614448025,"endTime":1751614448266.8015,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":4.7531999999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":1.2128999999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":0.6883000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":0.6435999999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":0.6240999999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":0.6963000000000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":0.5468999999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":0.8422999999999661,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":1.255299999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":0.9257999999999811,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":0.7469999999999573,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":0.973700000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":1.447400000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":1.1062000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":0.7321000000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":0.5724999999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":1.0575999999999794,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":0.6841000000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.5844000000000165,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":2.1230999999999653,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":0.6330999999999563,"failureMessages":[],"meta":{}}],"startTime":1751614443068,"endTime":1751614443092.633,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":7.519299999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":2.423400000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":1.4341999999999757,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":1.3507000000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":2.8027999999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":0.8204999999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":0.7925999999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":0.8024999999999523,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":1.8681000000000267,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":0.9635000000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":0.6963000000000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":1.7381000000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":1.6573999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.7419999999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":0.9742999999999711,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":1.184500000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":1.238299999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":1.3081999999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.8338999999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.6299999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.4560000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.4311999999999898,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":1.647199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":7.05639999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":1.033900000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":0.574799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":0.8363000000000511,"failureMessages":[],"meta":{}}],"startTime":1751614442588,"endTime":1751614442634.8362,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.business.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully follow user with authenticated request","status":"passed","title":"should successfully follow user with authenticated request","duration":6.748899999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully handle ActivityPub external follow","status":"passed","title":"should successfully handle ActivityPub external follow","duration":0.815900000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when username is missing","status":"passed","title":"should reject when username is missing","duration":1.199799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when user to follow not found","status":"passed","title":"should reject when user to follow not found","duration":1.0350000000000819,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when no follower identity provided","status":"passed","title":"should reject when no follower identity provided","duration":0.4379000000000133,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle service errors correctly","status":"passed","title":"should handle service errors correctly","duration":0.4592000000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle unexpected exceptions","status":"passed","title":"should handle unexpected exceptions","duration":0.4859000000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should successfully unfollow user","status":"passed","title":"should successfully unfollow user","duration":0.6761999999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should reject when authentication is missing","status":"passed","title":"should reject when authentication is missing","duration":0.5859000000000378,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should handle service error for not following","status":"passed","title":"should handle service error for not following","duration":0.3889000000000351,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.7282999999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should handle custom pagination parameters","status":"passed","title":"should handle custom pagination parameters","duration":0.36200000000008004,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should ignore invalid pagination parameters","status":"passed","title":"should ignore invalid pagination parameters","duration":0.32819999999992433,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowStats()"],"fullName":"FollowController Unit Tests getUserFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.53550000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":1.0011999999999261,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle missing target username","status":"passed","title":"should handle missing target username","duration":0.4551999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle follower user not found","status":"passed","title":"should handle follower user not found","duration":0.3926999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":1.0161000000000513,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should reject invalid usernames format","status":"passed","title":"should reject invalid usernames format","duration":0.9682999999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should successfully get recent followers for own account","status":"passed","title":"should successfully get recent followers for own account","duration":0.7719000000000733,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should handle custom limit parameter","status":"passed","title":"should handle custom limit parameter","duration":0.3591999999999871,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when trying to view others recent followers","status":"passed","title":"should reject when trying to view others recent followers","duration":0.38179999999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when not authenticated","status":"passed","title":"should reject when not authenticated","duration":0.3768000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map validation errors to 400 status","status":"passed","title":"should map validation errors to 400 status","duration":0.37400000000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map authentication errors to 401 status","status":"passed","title":"should map authentication errors to 401 status","duration":0.5454999999999472,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map forbidden errors to 403 status","status":"passed","title":"should map forbidden errors to 403 status","duration":0.5211000000000467,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map not found errors to 404 status","status":"passed","title":"should map not found errors to 404 status","duration":0.47519999999997253,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map business rule conflicts to 409 status","status":"passed","title":"should map business rule conflicts to 409 status","duration":0.39380000000005566,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map unknown errors to 500 status","status":"passed","title":"should map unknown errors to 500 status","duration":1.0369999999999209,"failureMessages":[],"meta":{}}],"startTime":1751614442024,"endTime":1751614442050.037,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.test.ts"},{"assertionResults":[{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create a new post successfully","status":"passed","title":"should create a new post successfully","duration":4.505899999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create scheduled post successfully","status":"passed","title":"should create scheduled post successfully","duration":1.519800000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should handle content warning properly","status":"passed","title":"should handle content warning properly","duration":1.8143999999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with empty content","status":"passed","title":"should reject posts with empty content","duration":1.2130999999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with only whitespace content","status":"passed","title":"should reject posts with only whitespace content","duration":0.6888999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts exceeding character limit","status":"passed","title":"should reject posts exceeding character limit","duration":0.7690999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts without scheduledFor date","status":"passed","title":"should reject scheduled posts without scheduledFor date","duration":0.5485000000000468,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts with past dates","status":"passed","title":"should reject scheduled posts with past dates","duration":0.7937000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Server Errors"],"fullName":"PostController createPost Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.9508999999999901,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should return public posts with pagination","status":"passed","title":"should return public posts with pagination","duration":0.7982000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should filter out current user own posts when authenticated","status":"passed","title":"should filter out current user own posts when authenticated","duration":0.7375000000000114,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle pagination parameters correctly","status":"passed","title":"should handle pagination parameters correctly","duration":0.5964000000000169,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle invalid pagination parameters","status":"passed","title":"should handle invalid pagination parameters","duration":0.43350000000003774,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Server Errors"],"fullName":"PostController getPosts Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.5339999999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return post when found and published","status":"passed","title":"should return post when found and published","duration":0.6680000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return unpublished post when author is viewing","status":"passed","title":"should return unpublished post when author is viewing","duration":0.49169999999998026,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 for unpublished post when not the author","status":"passed","title":"should return 404 for unpublished post when not the author","duration":0.4831999999999539,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.4682999999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Input Validation"],"fullName":"PostController getPostById Input Validation should return 400 when post ID is missing","status":"passed","title":"should return 400 when post ID is missing","duration":0.5176999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Successful Post Deletion"],"fullName":"PostController deletePost Successful Post Deletion should delete own post successfully","status":"passed","title":"should delete own post successfully","duration":0.6163000000000238,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 403 when trying to delete another user post","status":"passed","title":"should return 403 when trying to delete another user post","duration":0.490099999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.46109999999998763,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return user posts with pagination","status":"passed","title":"should return user posts with pagination","duration":0.8164999999999623,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":1.6052999999999997,"failureMessages":[],"meta":{}}],"startTime":1751614444251,"endTime":1751614444275.6052,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/PostController.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should create follow relationship successfully","status":"passed","title":"should create follow relationship successfully","duration":177.15679999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent duplicate follow relationships","status":"passed","title":"should prevent duplicate follow relationships","duration":123.45370000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent self-following","status":"passed","title":"should prevent self-following","duration":94.90179999999998,"failureMessages":[],"meta":{}}],"startTime":1751614449467,"endTime":1751614449862.9019,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/Follow.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should create post associated with existing user","status":"passed","title":"should create post associated with existing user","duration":119.41859999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should enforce foreign key constraint for invalid user","status":"passed","title":"should enforce foreign key constraint for invalid user","duration":204.89440000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should cascade delete posts when user is deleted","status":"passed","title":"should cascade delete posts when user is deleted","duration":111.66429999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create published post with proper user attribution","status":"passed","title":"should create published post with proper user attribution","duration":94.08590000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create draft post for user","status":"passed","title":"should create draft post for user","duration":109.33130000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create scheduled post with user relationship","status":"passed","title":"should create scheduled post with user relationship","duration":111.62549999999987,"failureMessages":[],"meta":{}}],"startTime":1751614448734,"endTime":1751614449485.6255,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/PostUser.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":8.38760000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":2.4108999999999696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":1.4361000000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.7133000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":1.8179999999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.8146000000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.9309000000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.6363000000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":1.117400000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":0.8848999999999592,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.6853000000000407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.7228999999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":0.9590000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":1.3004999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":1.198099999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":1.4951999999999543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":0.9022999999999683,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.5297999999999661,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.39859999999998763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.4239000000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":0.5695999999999799,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.5499000000000365,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.5366999999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":0.4999000000000251,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.4526000000000181,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.5948000000000206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":0.5575999999999794,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":0.35810000000003583,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":0.4451999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":1.321899999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":0.8822999999999865,"failureMessages":[],"meta":{}}],"startTime":1751614442617,"endTime":1751614442654.8823,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/authMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid username and no actorId","status":"passed","title":"should pass validation with valid username and no actorId","duration":4.290499999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid ActivityPub actor ID","status":"passed","title":"should pass validation with valid ActivityPub actor ID","duration":1.286200000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.6189999999999145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid ActivityPub URLs","status":"passed","title":"should pass validation with various valid ActivityPub URLs","duration":2.4230999999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with null actorId","status":"passed","title":"should pass validation with null actorId","duration":0.4017000000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":10.012100000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid ActivityPub actor URLs","status":"passed","title":"should reject invalid ActivityPub actor URLs","duration":4.333500000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.7190999999999121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.1194000000000415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Invalid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Invalid Unfollow Requests should reject invalid usernames","status":"passed","title":"should reject invalid usernames","duration":3.320500000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":1.4616999999999507,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with valid pagination parameters","status":"passed","title":"should pass validation with valid pagination parameters","duration":0.7290000000000418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with includeInactive flag","status":"passed","title":"should pass validation with includeInactive flag","duration":2.8048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should handle includeInactive false correctly","status":"passed","title":"should handle includeInactive false correctly","duration":0.6666999999999916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject invalid username in params","status":"passed","title":"should reject invalid username in params","duration":0.7146000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.829900000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.7613000000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject zero or negative page numbers","status":"passed","title":"should reject zero or negative page numbers","duration":0.7950000000000728,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with acct: format","status":"passed","title":"should pass validation with acct: format","duration":0.8009999999999309,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with HTTPS URL format","status":"passed","title":"should pass validation with HTTPS URL format","duration":0.5461999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various acct: formats","status":"passed","title":"should pass validation with various acct: formats","duration":0.7595999999999776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various HTTPS URL formats","status":"passed","title":"should pass validation with various HTTPS URL formats","duration":0.8243999999999687,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject invalid resource formats","status":"passed","title":"should reject invalid resource formats","duration":5.807700000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject missing resource parameter","status":"passed","title":"should reject missing resource parameter","duration":1.365099999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with valid ActivityPub request","status":"passed","title":"should pass validation with valid ActivityPub request","duration":0.8143000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with extended ActivityPub content type","status":"passed","title":"should pass validation with extended ActivityPub content type","duration":0.49310000000002674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with all required ActivityPub fields","status":"passed","title":"should pass validation with all required ActivityPub fields","duration":0.8270999999999731,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-ActivityPub content type","status":"passed","title":"should reject non-ActivityPub content type","duration":1.7545000000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject missing content type","status":"passed","title":"should reject missing content type","duration":1.030300000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":0.7169000000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-object request body","status":"passed","title":"should reject non-object request body","duration":1.3682999999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject ActivityPub activities missing required fields","status":"passed","title":"should reject ActivityPub activities missing required fields","duration":1.7947000000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","Error Handling"],"fullName":"Follow Validation Middleware Error Handling should handle validation errors properly","status":"passed","title":"should handle validation errors properly","duration":3.2626999999999953,"failureMessages":[],"meta":{}}],"startTime":1751614442045,"endTime":1751614442108.2627,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/followValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with valid image file","status":"passed","title":"should pass validation with valid image file","duration":4.945699999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with all supported image types","status":"passed","title":"should pass validation with all supported image types","duration":0.9881000000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with supported video types","status":"passed","title":"should pass validation with supported video types","duration":0.4822000000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation without alt text","status":"passed","title":"should pass validation without alt text","duration":0.7334999999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with empty alt text","status":"passed","title":"should pass validation with empty alt text","duration":0.7980999999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject upload without file","status":"passed","title":"should reject upload without file","duration":2.518000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject unsupported file types","status":"failed","title":"should reject unsupported file types","duration":17.399400000000014,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  Array [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[32m-     \"error\": ObjectContaining {\u001b[90m\n\u001b[32m-       \"code\": \"VALIDATION_ERROR\",\u001b[90m\n\u001b[32m-       \"details\": ArrayContaining [\u001b[90m\n\u001b[32m-         ObjectContaining {\u001b[90m\n\u001b[32m-           \"field\": \"mimetype\",\u001b[90m\n\u001b[32m-           \"message\": \"File type not supported. Use JPEG, PNG, GIF, WEBP, MP4, or WEBM\",\u001b[90m\n\u001b[32m-         },\u001b[90m\n\u001b[32m-       ],\u001b[90m\n\u001b[31m+   Object {\u001b[90m\n\u001b[31m+     \"error\": Object {\u001b[90m\n\u001b[31m+       \"code\": \"INVALID_FILE_TYPE\",\u001b[90m\n\u001b[31m+       \"message\": \"File type text/plain is not supported. Allowed types: image/jpeg, image/jpg, image/png, image/gif, image/webp, video/mp4, video/webm, video/quicktime\",\u001b[90m\n\u001b[2m      },\u001b[22m\n\u001b[2m      \"success\": false,\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\__tests__\\middleware\\mediaModerationValidationMiddleware.test.ts:222:27\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\__tests__\\middleware\\mediaModerationValidationMiddleware.test.ts:202:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)"],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject files that are too large","status":"passed","title":"should reject files that are too large","duration":1.8500000000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject empty files","status":"passed","title":"should reject empty files","duration":1.6494000000000142,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject alt text that is too long","status":"passed","title":"should reject alt text that is too long","duration":1.2469999999999573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for user report","status":"passed","title":"should pass validation for user report","duration":1.376100000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for post report","status":"passed","title":"should pass validation for post report","duration":0.5641000000000531,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for all report types","status":"passed","title":"should pass validation for all report types","duration":1.4144000000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation with maximum length description","status":"passed","title":"should pass validation with maximum length description","duration":0.47640000000001237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject invalid report type","status":"passed","title":"should reject invalid report type","duration":1.574100000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too short","status":"passed","title":"should reject description that is too short","duration":0.9146999999999252,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too long","status":"passed","title":"should reject description that is too long","duration":1.9349999999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with both user and post IDs","status":"passed","title":"should reject report with both user and post IDs","duration":0.8776000000000295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.8377000000000407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with reason","status":"passed","title":"should pass validation with reason","duration":0.7164000000000215,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation without reason","status":"passed","title":"should pass validation without reason","duration":0.44690000000002783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with empty reason","status":"passed","title":"should pass validation with empty reason","duration":2.1560000000000628,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Invalid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Invalid User Blocking should reject reason that is too long","status":"passed","title":"should reject reason that is too long","duration":0.7503000000000384,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.6277999999999793,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with minimum length username","status":"passed","title":"should pass validation with minimum length username","duration":0.4452999999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with maximum length username","status":"passed","title":"should pass validation with maximum length username","duration":0.31770000000005894,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with underscores","status":"passed","title":"should pass validation with underscores","duration":0.2839000000000169,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too short","status":"passed","title":"should reject username that is too short","duration":0.6739999999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too long","status":"passed","title":"should reject username that is too long","duration":1.0131000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username with invalid characters","status":"passed","title":"should reject username with invalid characters","duration":5.425499999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","Error Handling"],"fullName":"Media & Moderation Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":1.048599999999965,"failureMessages":[],"meta":{}}],"startTime":1751614442044,"endTime":1751614442103.0486,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with minimal valid data","status":"passed","title":"should pass validation with minimal valid data","duration":5.557099999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with all optional fields","status":"passed","title":"should pass validation with all optional fields","duration":1.9313999999999396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with empty content warning","status":"passed","title":"should pass validation with empty content warning","duration":0.5905999999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should apply default values correctly","status":"passed","title":"should apply default values correctly","duration":0.5993000000000848,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject empty content","status":"passed","title":"should reject empty content","duration":4.641200000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":1.5991999999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content warning that is too long","status":"passed","title":"should reject content warning that is too long","duration":3.4904000000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled post without scheduled date","status":"passed","title":"should reject scheduled post without scheduled date","duration":1.551900000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled date in the past","status":"passed","title":"should reject scheduled date in the past","duration":1.8401999999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject invalid datetime format","status":"passed","title":"should reject invalid datetime format","duration":1.1858999999999469,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors","duration":1.3450000000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle missing request body","status":"passed","title":"should handle missing request body","duration":0.7203999999999269,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should trim content whitespace","status":"passed","title":"should trim content whitespace","duration":0.6071000000000595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle non-string content types","status":"passed","title":"should handle non-string content types","duration":0.7647000000000617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with partial update data","status":"passed","title":"should pass validation with partial update data","duration":0.7574000000000751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with all updatable fields","status":"passed","title":"should pass validation with all updatable fields","duration":0.4836999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with empty body","status":"passed","title":"should pass validation with empty body","duration":0.6023999999999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject empty content when provided","status":"passed","title":"should reject empty content when provided","duration":1.1247999999999365,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":0.6924999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":0.928000000000111,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with valid page and limit","status":"passed","title":"should pass validation with valid page and limit","duration":0.6672999999999547,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with userId filter","status":"passed","title":"should pass validation with userId filter","duration":2.1689999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.8126000000000886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject negative page number","status":"passed","title":"should reject negative page number","duration":0.6928000000000338,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.7151999999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject zero limit","status":"passed","title":"should reject zero limit","duration":0.8580999999999221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with valid post ID","status":"passed","title":"should pass validation with valid post ID","duration":0.6675999999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with alphanumeric ID","status":"passed","title":"should pass validation with alphanumeric ID","duration":0.463799999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject empty post ID","status":"passed","title":"should reject empty post ID","duration":0.9105999999999312,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject missing post ID","status":"passed","title":"should reject missing post ID","duration":0.6234000000000606,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":1.34699999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","Error Handling"],"fullName":"Post Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":0.7743000000000393,"failureMessages":[],"meta":{}}],"startTime":1751614442662,"endTime":1751614442706.7744,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/postValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should allow requests within the limit (5 per minute)","status":"passed","title":"should allow requests within the limit (5 per minute)","duration":154.86989999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should block requests exceeding the limit (6th request)","status":"passed","title":"should block requests exceeding the limit (6th request)","duration":483.93729999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should include rate limit headers","status":"passed","title":"should include rate limit headers","duration":116.15819999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should use IP address for rate limiting when user not authenticated","status":"passed","title":"should use IP address for rate limiting when user not authenticated","duration":480.64609999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should allow 10 posts per hour for authenticated users","status":"passed","title":"should allow 10 posts per hour for authenticated users","duration":150.67999999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should block 11th post creation request","status":"passed","title":"should block 11th post creation request","duration":800.9839999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should use user ID for rate limiting when authenticated","status":"passed","title":"should use user ID for rate limiting when authenticated","duration":115.37789999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should fall back to IP when user not authenticated","status":"passed","title":"should fall back to IP when user not authenticated","duration":107.6554000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should allow 20 follow operations per hour","status":"passed","title":"should allow 20 follow operations per hour","duration":181.7836000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should block 21st follow operation","status":"passed","title":"should block 21st follow operation","duration":1430.2866,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should allow 20 uploads per hour","status":"passed","title":"should allow 20 uploads per hour","duration":188.46309999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should block 21st media upload","status":"passed","title":"should block 21st media upload","duration":1427.8944999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should allow 100 requests per minute","status":"passed","title":"should allow 100 requests per minute","duration":549.4971999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should block 101st general API request","status":"passed","title":"should block 101st general API request","duration":419.0157999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should use IP address for general rate limiting","status":"passed","title":"should use IP address for general rate limiting","duration":105.1814000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should allow 3 password reset attempts per hour","status":"passed","title":"should allow 3 password reset attempts per hour","duration":116.25290000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should block 4th password reset attempt","status":"passed","title":"should block 4th password reset attempt","duration":357.1914999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should return consistent error format for all rate limits","status":"passed","title":"should return consistent error format for all rate limits","duration":431.6987999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should include retry after information","status":"passed","title":"should include retry after information","duration":426.6916000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should export correct configuration values","status":"passed","title":"should export correct configuration values","duration":109.18999999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should have descriptions for all rate limit types","status":"passed","title":"should have descriptions for all rate limit types","duration":112.81500000000051,"failureMessages":[],"meta":{}}],"startTime":1751614443373,"endTime":1751614451640.815,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should track rate limits by user ID for authenticated users","status":"passed","title":"should track rate limits by user ID for authenticated users","duration":334.5048999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should allow different users to have separate rate limits","status":"passed","title":"should allow different users to have separate rate limits","duration":307.64260000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should track rate limits by IP address for anonymous users","status":"passed","title":"should track rate limits by IP address for anonymous users","duration":308.27059999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should allow different IP addresses to have separate rate limits","status":"passed","title":"should allow different IP addresses to have separate rate limits","duration":299.65100000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should prioritize user ID over IP address when user is authenticated","status":"passed","title":"should prioritize user ID over IP address when user is authenticated","duration":108.23810000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should demonstrate same user from different IPs shares rate limit","status":"passed","title":"should demonstrate same user from different IPs shares rate limit","duration":442.05750000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Fallback Behavior"],"fullName":"Rate Limiting: User ID vs IP Address Fallback Behavior should fallback to IP when user ID is not available","status":"passed","title":"should fallback to IP when user ID is not available","duration":111.17920000000004,"failureMessages":[],"meta":{}}],"startTime":1751614443350,"endTime":1751614445262.1792,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitUserVsIP.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with valid alphanumeric ID","status":"passed","title":"should pass validation with valid alphanumeric ID","duration":3.7707999999999515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with hyphens and underscores","status":"passed","title":"should pass validation with hyphens and underscores","duration":0.5545999999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject empty ID","status":"passed","title":"should reject empty ID","duration":2.076999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject missing ID parameter","status":"passed","title":"should reject missing ID parameter","duration":0.6646999999999821,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID with invalid characters","status":"passed","title":"should reject ID with invalid characters","duration":1.8587999999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.7275999999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","setSecurityHeaders"],"fullName":"Security Validation Middleware setSecurityHeaders should set all required security headers","status":"passed","title":"should set all required security headers","duration":0.859800000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should sanitize control characters from strings","status":"passed","title":"should sanitize control characters from strings","duration":0.664100000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should handle nested objects and arrays","status":"passed","title":"should handle nested objects and arrays","duration":0.6924999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from connection.remoteAddress","status":"passed","title":"should extract IP from connection.remoteAddress","duration":0.7542000000000257,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from x-forwarded-for header","status":"passed","title":"should extract IP from x-forwarded-for header","duration":0.5330999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should handle missing IP gracefully","status":"passed","title":"should handle missing IP gracefully","duration":0.3340000000000032,"failureMessages":[],"meta":{}}],"startTime":1751614448953,"endTime":1751614448967.5332,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":1.4714999999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.40260000000000673,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.3254999999999768,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.2237999999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.2857000000000198,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.2676999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.2033999999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.16890000000000782,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.46839999999997417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":0.2687000000000239,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.19530000000003156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.2715000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.25710000000003674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.1985000000000241,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.16370000000000573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.15289999999998827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.31520000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.4460000000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.43170000000003483,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.5133999999999901,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.35370000000000346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.26670000000001437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.3406999999999698,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.30450000000001864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.20289999999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.15349999999995134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":0.8058000000000334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.19190000000003238,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.217899999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.9302000000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.262800000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.43479999999999563,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.2166000000000281,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.258199999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.15730000000002065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.16200000000003456,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.14800000000002456,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.2726000000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.3180000000000405,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.16329999999999245,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.16030000000000655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.287399999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.2078999999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.17149999999998045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.26400000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.3897999999999797,"failureMessages":[],"meta":{}}],"startTime":1751614443155,"endTime":1751614443171.39,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.businessLogic.test.ts"},{"assertionResults":[{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should transition from draft to published","status":"passed","title":"should transition from draft to published","duration":2.4354000000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should set publishedAt timestamp when transitioning to published","status":"passed","title":"should set publishedAt timestamp when transitioning to published","duration":1.0527999999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should allow editing content before publishing","status":"passed","title":"should allow editing content before publishing","duration":0.48570000000000846,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should preserve other fields during draft to published transition","status":"passed","title":"should preserve other fields during draft to published transition","duration":0.30239999999997735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from draft to scheduled","status":"passed","title":"should transition from draft to scheduled","duration":0.3947000000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should detect when scheduled post is ready to publish","status":"passed","title":"should detect when scheduled post is ready to publish","duration":0.32740000000001146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from expired scheduled to published","status":"passed","title":"should transition from expired scheduled to published","duration":0.32590000000004693,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should preserve scheduled metadata when publishing","status":"passed","title":"should preserve scheduled metadata when publishing","duration":0.26350000000002183,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should prevent transition from published back to draft","status":"passed","title":"should prevent transition from published back to draft","duration":0.40859999999997854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content updates on published posts","status":"passed","title":"should allow content updates on published posts","duration":0.28530000000000655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content warning updates on published posts","status":"passed","title":"should allow content warning updates on published posts","duration":0.20929999999998472,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle scheduling future posts","status":"passed","title":"should handle scheduling future posts","duration":0.2545999999999822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle rescheduling posts","status":"passed","title":"should handle rescheduling posts","duration":0.25319999999999254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle canceling scheduled posts (back to draft)","status":"passed","title":"should handle canceling scheduled posts (back to draft)","duration":0.2656999999999812,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with invalid scheduling state","status":"passed","title":"should handle posts with invalid scheduling state","duration":0.21790000000004284,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with past scheduled dates","status":"passed","title":"should handle posts with past scheduled dates","duration":0.25319999999999254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with inconsistent published state","status":"passed","title":"should handle posts with inconsistent published state","duration":1.0255999999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle empty content in state transitions","status":"passed","title":"should handle empty content in state transitions","duration":0.3310000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle boundary conditions for scheduling","status":"passed","title":"should handle boundary conditions for scheduling","duration":0.18819999999999482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle multiple rapid state changes","status":"passed","title":"should handle multiple rapid state changes","duration":0.4087999999999852,"failureMessages":[],"meta":{}}],"startTime":1751614444608,"endTime":1751614444618.4087,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.stateTransitions.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept valid content within character limits","status":"passed","title":"should accept valid content within character limits","duration":3.160199999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject empty content","status":"passed","title":"should reject empty content","duration":0.8850999999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content that is only whitespace","status":"passed","title":"should reject content that is only whitespace","duration":0.8159999999999741,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content exceeding 5000 characters","status":"passed","title":"should reject content exceeding 5000 characters","duration":1.1458000000000084,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept content exactly at 5000 character limit","status":"passed","title":"should accept content exactly at 5000 character limit","duration":0.9270000000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should trim whitespace from content","status":"passed","title":"should trim whitespace from content","duration":0.3312999999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept valid content warning","status":"passed","title":"should accept valid content warning","duration":0.2717000000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept empty string as content warning","status":"passed","title":"should accept empty string as content warning","duration":0.209699999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept missing content warning field","status":"passed","title":"should accept missing content warning field","duration":0.39109999999999445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should reject content warning exceeding 200 characters","status":"passed","title":"should reject content warning exceeding 200 characters","duration":1.0892000000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept content warning exactly at 200 character limit","status":"passed","title":"should accept content warning exactly at 200 character limit","duration":0.2598000000000411,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should trim whitespace from content warning","status":"passed","title":"should trim whitespace from content warning","duration":0.22229999999996153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept scheduled post with future date","status":"passed","title":"should accept scheduled post with future date","duration":1.4787000000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post without scheduledFor date","status":"passed","title":"should reject scheduled post without scheduledFor date","duration":0.4633000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with past date","status":"passed","title":"should reject scheduled post with past date","duration":0.44069999999999254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with invalid date format","status":"passed","title":"should reject scheduled post with invalid date format","duration":0.365099999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept non-scheduled post with scheduledFor date","status":"passed","title":"should accept non-scheduled post with scheduledFor date","duration":0.2699999999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isPublished to true","status":"passed","title":"should default isPublished to true","duration":0.20839999999998327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should accept explicit isPublished false for drafts","status":"passed","title":"should accept explicit isPublished false for drafts","duration":0.3135000000000332,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isScheduled to false","status":"passed","title":"should default isScheduled to false","duration":0.241800000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept draft scheduled post","status":"passed","title":"should accept draft scheduled post","duration":0.31520000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept maximum length content with maximum length warning","status":"passed","title":"should accept maximum length content with maximum length warning","duration":0.26269999999999527,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should handle null scheduledFor appropriately","status":"passed","title":"should handle null scheduledFor appropriately","duration":0.24259999999998172,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should create Post instance with valid data","status":"passed","title":"should create Post instance with valid data","duration":0.27359999999998763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should handle optional fields correctly","status":"passed","title":"should handle optional fields correctly","duration":0.1683999999999628,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should convert undefined optional fields to null","status":"passed","title":"should convert undefined optional fields to null","duration":0.23419999999998709,"failureMessages":[],"meta":{}}],"startTime":1751614445331,"endTime":1751614445348.2341,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with all provided data","status":"passed","title":"should create user with all provided data","duration":4.038099999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with minimal required data","status":"passed","title":"should create user with minimal required data","duration":0.7651000000000181,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle displayName defaulting to username when not provided","status":"passed","title":"should handle displayName defaulting to username when not provided","duration":0.29939999999999145,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should use provided displayName over username when both exist","status":"passed","title":"should use provided displayName over username when both exist","duration":0.34199999999998454,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle empty string values properly","status":"passed","title":"should handle empty string values properly","duration":0.4591000000000349,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle null values properly","status":"passed","title":"should handle null values properly","duration":0.5437999999999761,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle undefined values properly","status":"passed","title":"should handle undefined values properly","duration":0.4726999999999748,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile data excluding sensitive information","status":"passed","title":"should return public profile data excluding sensitive information","duration":3.2934999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile with default values","status":"passed","title":"should return public profile with default values","duration":1.0616999999999734,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should handle null values in public profile","status":"passed","title":"should handle null values in public profile","duration":0.6105999999999767,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile data including all information","status":"passed","title":"should return private profile data including all information","duration":2.0944000000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile with default values","status":"passed","title":"should return private profile with default values","duration":0.30709999999999127,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should include all fields from public profile","status":"passed","title":"should include all fields from public profile","duration":0.45270000000004984,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateRegistration static method","status":"passed","title":"should have validateRegistration static method","duration":1.6951999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateLogin static method","status":"passed","title":"should have validateLogin static method","duration":0.37199999999995725,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateProfileUpdate static method","status":"passed","title":"should have validateProfileUpdate static method","duration":0.5160000000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle data object with extra properties","status":"passed","title":"should handle data object with extra properties","duration":0.3552999999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.18029999999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle different verification tiers","status":"passed","title":"should handle different verification tiers","duration":0.14760000000001128,"failureMessages":[],"meta":{}}],"startTime":1751614444976,"endTime":1751614444995.1804,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.class.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should validate correct login credentials","status":"passed","title":"should validate correct login credentials","duration":3.0138000000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept any password length for login (no strength requirements)","status":"passed","title":"should accept any password length for login (no strength requirements)","duration":0.6312000000000353,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with special characters","status":"passed","title":"should accept password with special characters","duration":0.3398000000000252,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with spaces","status":"passed","title":"should accept password with spaces","duration":0.20620000000002392,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept very long passwords","status":"passed","title":"should accept very long passwords","duration":0.25720000000001164,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":0.9974000000000274,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.8666999999999803,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.6358000000000175,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without username part","status":"passed","title":"should reject email without username part","duration":0.7590000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with multiple @ symbols","status":"passed","title":"should reject email with multiple @ symbols","duration":0.6850999999999772,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.483099999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with only spaces","status":"passed","title":"should reject email with only spaces","duration":0.5025999999999726,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.5330000000000155,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject password with only spaces","status":"passed","title":"should reject password with only spaces","duration":0.3340000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with null value","status":"passed","title":"should handle password field with null value","duration":0.49869999999998527,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with undefined value","status":"passed","title":"should handle password field with undefined value","duration":0.25579999999996517,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing email","status":"passed","title":"should reject login data missing email","duration":0.24530000000004293,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing password","status":"passed","title":"should reject login data missing password","duration":0.23630000000002838,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing both email and password","status":"passed","title":"should reject login data missing both email and password","duration":1.0585000000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Extra Fields Handling"],"fullName":"User Model - Login Validation Extra Fields Handling should ignore extra fields not in login schema","status":"passed","title":"should ignore extra fields not in login schema","duration":0.9941000000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":0.44950000000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should handle completely invalid login data","status":"passed","title":"should handle completely invalid login data","duration":0.273900000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with numeric values converted to strings","status":"passed","title":"should handle login data with numeric values converted to strings","duration":0.2717000000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with boolean values","status":"passed","title":"should handle login data with boolean values","duration":0.2973999999999819,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with array values","status":"passed","title":"should handle login data with array values","duration":0.22629999999998063,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with object values","status":"passed","title":"should handle login data with object values","duration":0.2329000000000292,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Case Sensitivity"],"fullName":"User Model - Login Validation Case Sensitivity should accept email with mixed case (validation should not enforce case)","status":"passed","title":"should accept email with mixed case (validation should not enforce case)","duration":0.2033999999999878,"failureMessages":[],"meta":{}}],"startTime":1751614447635,"endTime":1751614447652.233,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.login.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with all optional fields provided","status":"passed","title":"should validate update with all optional fields provided","duration":3.1172000000000253,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only displayName","status":"passed","title":"should validate update with only displayName","duration":0.5453999999999724,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only bio","status":"passed","title":"should validate update with only bio","duration":0.37599999999997635,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only website","status":"passed","title":"should validate update with only website","duration":0.38369999999997617,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate empty update (no fields provided)","status":"passed","title":"should validate empty update (no fields provided)","duration":0.2817000000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.38299999999998136,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept bio at maximum length (500 characters)","status":"passed","title":"should accept bio at maximum length (500 characters)","duration":0.25090000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept empty string for website (to clear website)","status":"passed","title":"should accept empty string for website (to clear website)","duration":0.7238999999999578,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept https websites","status":"passed","title":"should accept https websites","duration":0.4843999999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept http websites","status":"passed","title":"should accept http websites","duration":0.3439999999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with paths","status":"passed","title":"should accept websites with paths","duration":0.24029999999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with query parameters","status":"passed","title":"should accept websites with query parameters","duration":0.2289000000000101,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with ports","status":"passed","title":"should accept websites with ports","duration":0.21530000000001337,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with subdomains","status":"passed","title":"should accept websites with subdomains","duration":0.18190000000004147,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.5663999999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with only spaces","status":"passed","title":"should reject displayName with only spaces","duration":0.23340000000001737,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.23629999999997153,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with null value","status":"passed","title":"should reject displayName with null value","duration":0.6882999999999697,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with non-string value","status":"passed","title":"should reject displayName with non-string value","duration":0.28530000000000655,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio longer than 500 characters","status":"passed","title":"should reject bio longer than 500 characters","duration":0.2995000000000232,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should accept empty bio","status":"passed","title":"should accept empty bio","duration":0.1633000000000493,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with null value","status":"passed","title":"should reject bio with null value","duration":0.24619999999998754,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with non-string value","status":"passed","title":"should reject bio with non-string value","duration":0.3598999999999819,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject invalid website URL format","status":"passed","title":"should reject invalid website URL format","duration":0.41100000000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website without protocol","status":"passed","title":"should reject website without protocol","duration":0.3675000000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with invalid protocol","status":"passed","title":"should reject website with invalid protocol","duration":0.25420000000002574,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with only protocol","status":"passed","title":"should reject website with only protocol","duration":0.26590000000004466,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with spaces","status":"passed","title":"should reject website with spaces","duration":0.4481999999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with null value","status":"passed","title":"should reject website with null value","duration":0.553100000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with non-string value","status":"passed","title":"should reject website with non-string value","duration":0.42660000000000764,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.2609999999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should handle combination of valid and invalid fields","status":"passed","title":"should handle combination of valid and invalid fields","duration":0.3334000000000401,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Extra Fields Handling"],"fullName":"User Model - Profile Update Validation Extra Fields Handling should ignore fields not in profile update schema","status":"passed","title":"should ignore fields not in profile update schema","duration":1.1444000000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle bio with special characters and unicode","status":"passed","title":"should handle bio with special characters and unicode","duration":0.1785000000000423,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with unicode characters","status":"passed","title":"should handle displayName with unicode characters","duration":0.16379999999998063,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle newlines in bio","status":"passed","title":"should handle newlines in bio","duration":0.15510000000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with numbers and symbols","status":"passed","title":"should handle displayName with numbers and symbols","duration":0.16900000000003956,"failureMessages":[],"meta":{}}],"startTime":1751614445647,"endTime":1751614445665.1785,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.profileUpdate.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate correct registration data with all fields","status":"passed","title":"should validate correct registration data with all fields","duration":5.117200000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate registration data without optional displayName","status":"passed","title":"should validate registration data without optional displayName","duration":0.8319999999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept username with underscores and numbers","status":"passed","title":"should accept username with underscores and numbers","duration":0.443300000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum length username (3 characters)","status":"passed","title":"should accept minimum length username (3 characters)","duration":0.3454999999999586,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept maximum length username (30 characters)","status":"passed","title":"should accept maximum length username (30 characters)","duration":0.44669999999996435,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum valid password requirements","status":"passed","title":"should accept minimum valid password requirements","duration":0.5012999999999579,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":1.0862999999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.5353000000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.6714999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.46999999999997044,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username shorter than 3 characters","status":"passed","title":"should reject username shorter than 3 characters","duration":0.5277999999999565,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username longer than 30 characters","status":"passed","title":"should reject username longer than 30 characters","duration":0.43039999999996326,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with special characters","status":"passed","title":"should reject username with special characters","duration":0.4177999999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with spaces","status":"passed","title":"should reject username with spaces","duration":0.5165000000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with hyphens","status":"passed","title":"should reject username with hyphens","duration":0.39229999999997744,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject empty username","status":"passed","title":"should reject empty username","duration":0.4701000000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password shorter than 8 characters","status":"passed","title":"should reject password shorter than 8 characters","duration":0.9225999999999885,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without uppercase letter","status":"passed","title":"should reject password without uppercase letter","duration":0.37360000000001037,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without lowercase letter","status":"passed","title":"should reject password without lowercase letter","duration":0.3538000000000352,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without number","status":"passed","title":"should reject password without number","duration":0.3734999999999786,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.5362999999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.5091999999999643,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.39680000000004156,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.28520000000003165,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing email","status":"passed","title":"should reject registration data missing email","duration":0.8900999999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing username","status":"passed","title":"should reject registration data missing username","duration":0.530399999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing password","status":"passed","title":"should reject registration data missing password","duration":0.4954999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Multiple Validation Errors"],"fullName":"User Model - Registration Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":2.275800000000004,"failureMessages":[],"meta":{}}],"startTime":1751614446050,"endTime":1751614446073.276,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":5.467099999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":1.1014999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":2.1130999999999744,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":0.8443000000000325,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":0.731899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":0.4263000000000261,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":0.9356999999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":0.4130000000000109,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":1.0622999999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":2.8227999999999724,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":0.7508000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":0.4649000000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":0.3240000000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":0.3260999999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":0.7855000000000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":0.3061000000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":0.7139999999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":0.5724999999999909,"failureMessages":[],"meta":{}}],"startTime":1751614443458,"endTime":1751614443480.5725,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/FollowRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a basic post with minimal data","status":"passed","title":"should create a basic post with minimal data","duration":6.062299999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with content warning","status":"passed","title":"should create a post with content warning","duration":2.076599999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":0.5106999999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with media attachments","status":"passed","title":"should create a post with media attachments","duration":0.37590000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should include author information in response","status":"passed","title":"should include author information in response","duration":1.0679000000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should handle different author verification states","status":"passed","title":"should handle different author verification states","duration":0.4230000000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with maximum content length","status":"passed","title":"should handle posts with maximum content length","duration":1.1102000000000203,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with special characters","status":"passed","title":"should handle posts with special characters","duration":0.42669999999998254,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with newlines and formatting","status":"passed","title":"should handle posts with newlines and formatting","duration":0.6123999999999796,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle null optional fields correctly","status":"passed","title":"should handle null optional fields correctly","duration":0.4626999999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should pass correct include parameters to Prisma","status":"passed","title":"should pass correct include parameters to Prisma","duration":0.8629999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should handle Prisma create response correctly","status":"passed","title":"should handle Prisma create response correctly","duration":0.5706000000000131,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate database connection errors","status":"passed","title":"should propagate database connection errors","duration":1.4635999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate unique constraint violations","status":"passed","title":"should propagate unique constraint violations","duration":0.47509999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate foreign key constraint violations","status":"passed","title":"should propagate foreign key constraint violations","duration":0.46069999999997435,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should handle invalid data type errors","status":"passed","title":"should handle invalid data type errors","duration":0.45150000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should call database create method exactly once","status":"passed","title":"should call database create method exactly once","duration":0.3498000000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should not make additional database calls after creation","status":"passed","title":"should not make additional database calls after creation","duration":0.4975000000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should handle concurrent post creation calls","status":"passed","title":"should handle concurrent post creation calls","duration":0.5416999999999916,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should preserve exact content without modification","status":"passed","title":"should preserve exact content without modification","duration":0.6757000000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle date objects correctly","status":"passed","title":"should handle date objects correctly","duration":0.3797000000000139,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.3990000000000009,"failureMessages":[],"meta":{}}],"startTime":1751614444562,"endTime":1751614444583.399,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.create.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a published post with default values","status":"passed","title":"should create a published post with default values","duration":7.172499999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a draft post when isPublished is false","status":"passed","title":"should create a draft post when isPublished is false","duration":3.8851999999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":2.0430999999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should handle content warning and activity ID","status":"passed","title":"should handle content warning and activity ID","duration":1.094099999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should find post by ID with full relations","status":"passed","title":"should find post by ID with full relations","duration":1.184599999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should return null if post not found","status":"passed","title":"should return null if post not found","duration":0.4655999999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should find posts by author with default pagination","status":"passed","title":"should find posts by author with default pagination","duration":0.9984999999999786,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should apply publishing status filter","status":"passed","title":"should apply publishing status filter","duration":1.0126000000000204,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should handle custom pagination and ordering","status":"passed","title":"should handle custom pagination and ordering","duration":1.9470999999999776,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should find published posts with default options","status":"passed","title":"should find published posts with default options","duration":1.336400000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by author ID","status":"passed","title":"should filter by author ID","duration":0.7173000000000229,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by content warning presence","status":"passed","title":"should filter by content warning presence","duration":1.1646000000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by date range","status":"passed","title":"should filter by date range","duration":0.6175000000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findReadyToPublish()"],"fullName":"PostRepository findReadyToPublish() should find expired scheduled posts","status":"passed","title":"should find expired scheduled posts","duration":0.7206000000000472,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should find future scheduled posts","status":"passed","title":"should find future scheduled posts","duration":0.8704999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should filter by author","status":"passed","title":"should filter by author","duration":0.6413000000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should update post content and set updatedAt","status":"passed","title":"should update post content and set updatedAt","duration":0.8291000000000395,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should set publishedAt when transitioning to published","status":"passed","title":"should set publishedAt when transitioning to published","duration":0.8168000000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should not set publishedAt if already published","status":"passed","title":"should not set publishedAt if already published","duration":0.7469000000000392,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","delete()"],"fullName":"PostRepository delete() should delete post and return deleted post with media info","status":"passed","title":"should delete post and return deleted post with media info","duration":0.835899999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return true if post exists and belongs to author","status":"passed","title":"should return true if post exists and belongs to author","duration":0.6750999999999863,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return false if post does not exist or belongs to different author","status":"passed","title":"should return false if post does not exist or belongs to different author","duration":0.43729999999999336,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","getAuthorStats()"],"fullName":"PostRepository getAuthorStats() should return comprehensive post statistics for author","status":"passed","title":"should return comprehensive post statistics for author","duration":1.559599999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByActivityId()"],"fullName":"PostRepository findByActivityId() should find post by ActivityPub activity ID","status":"passed","title":"should find post by ActivityPub activity ID","duration":0.7486000000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should batch publish expired scheduled posts","status":"passed","title":"should batch publish expired scheduled posts","duration":1.252900000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should return empty array if no expired posts","status":"passed","title":"should return empty array if no expired posts","duration":0.6365000000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should use default limit of 50","status":"passed","title":"should use default limit of 50","duration":0.490600000000029,"failureMessages":[],"meta":{}}],"startTime":1751614442560,"endTime":1751614442598.4905,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should successfully login user with valid credentials","status":"passed","title":"should successfully login user with valid credentials","duration":50.035799999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should handle user with different data successfully","status":"passed","title":"should handle user with different data successfully","duration":8.491800000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for non-existent user","status":"passed","title":"should return 401 for non-existent user","duration":5.376500000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for incorrect password","status":"passed","title":"should return 401 for incorrect password","duration":7.203000000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for invalid email format","status":"passed","title":"should return 400 for invalid email format","duration":7.853099999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":4.650900000000092,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":5.134799999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for empty request body","status":"passed","title":"should return 400 for empty request body","duration":6.132399999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":10.802000000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle AuthService errors gracefully","status":"passed","title":"should handle AuthService errors gracefully","duration":4.819099999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should return 500 for token generation errors","status":"passed","title":"should return 500 for token generation errors","duration":5.697300000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle case-sensitive email matching","status":"passed","title":"should handle case-sensitive email matching","duration":4.942399999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle very long email addresses","status":"passed","title":"should handle very long email addresses","duration":6.103900000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle user with null optional fields","status":"passed","title":"should handle user with null optional fields","duration":4.415700000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should require JSON content type","status":"passed","title":"should require JSON content type","duration":3.577299999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":8.700900000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should not reveal whether email exists in error messages","status":"passed","title":"should not reveal whether email exists in error messages","duration":6.619299999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should handle concurrent login attempts","status":"passed","title":"should handle concurrent login attempts","duration":15.669300000000021,"failureMessages":[],"meta":{}}],"startTime":1751614444071,"endTime":1751614444238.6692,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authLogin.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should successfully register a new user with valid data","status":"passed","title":"should successfully register a new user with valid data","duration":62.79650000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should register user with minimal required data (no bio or displayName)","status":"passed","title":"should register user with minimal required data (no bio or displayName)","duration":8.586500000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when username already exists","status":"passed","title":"should reject registration when username already exists","duration":6.697800000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when email already exists","status":"passed","title":"should reject registration when email already exists","duration":6.1580000000000155,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":8.257799999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle password hashing errors","status":"passed","title":"should handle password hashing errors","duration":7.330100000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle user creation errors in database","status":"passed","title":"should handle user creation errors in database","duration":7.840000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with invalid data","status":"passed","title":"should reject registration with invalid data","duration":5.519199999999955,"failureMessages":[],"meta":{}}],"startTime":1751614445963,"endTime":1751614446076.5193,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authRegistration.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":30.965900000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user as external ActivityPub actor","status":"passed","title":"should successfully follow a user as external ActivityPub actor","duration":18.70569999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":5.6551999999999225,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should allow follow without authentication if actorId provided","status":"passed","title":"should allow follow without authentication if actorId provided","duration":4.842499999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject follow without authentication and without actorId","status":"passed","title":"should reject follow without authentication and without actorId","duration":6.337400000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should require authentication for unfollow operations","status":"passed","title":"should require authentication for unfollow operations","duration":6.2608000000000175,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject invalid authentication tokens","status":"passed","title":"should reject invalid authentication tokens","duration":3.6883000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":5.203399999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when already following user","status":"passed","title":"should return 409 when already following user","duration":8.301300000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when trying to follow yourself","status":"passed","title":"should return 409 when trying to follow yourself","duration":5.67859999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 403 when user has blocked the follower","status":"passed","title":"should return 403 when user has blocked the follower","duration":3.338799999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should handle malformed username parameters","status":"passed","title":"should handle malformed username parameters","duration":5.112100000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass username parameter correctly to controller","status":"passed","title":"should pass username parameter correctly to controller","duration":4.8226000000000795,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass request body correctly to controller","status":"passed","title":"should pass request body correctly to controller","duration":5.495400000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should preserve user information from authentication middleware","status":"passed","title":"should preserve user information from authentication middleware","duration":3.8976000000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to followers endpoint","status":"passed","title":"should handle GET requests to followers endpoint","duration":4.972099999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to following endpoint","status":"passed","title":"should handle GET requests to following endpoint","duration":4.59069999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to stats endpoint","status":"passed","title":"should handle GET requests to stats endpoint","duration":3.3999000000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle very long usernames","status":"passed","title":"should handle very long usernames","duration":4.294200000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle special characters in usernames","status":"passed","title":"should handle special characters in usernames","duration":3.372100000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle concurrent follow requests gracefully","status":"passed","title":"should handle concurrent follow requests gracefully","duration":8.917699999999968,"failureMessages":[],"meta":{}}],"startTime":1751614443772,"endTime":1751614443921.9177,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/follow.requests.e2e.test.ts"},{"assertionResults":[{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should create router with all required dependencies","status":"passed","title":"should create router with all required dependencies","duration":7.437400000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should properly inject FollowController for follow operations","status":"passed","title":"should properly inject FollowController for follow operations","duration":29.192099999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for POST /users/:username/follow","status":"passed","title":"should use FollowController for POST /users/:username/follow","duration":8.265499999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for DELETE /users/:username/follow","status":"passed","title":"should use FollowController for DELETE /users/:username/follow","duration":4.657699999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/followers","status":"passed","title":"should use FollowController for GET /users/:username/followers","duration":6.817800000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/following","status":"passed","title":"should use FollowController for GET /users/:username/following","duration":8.47079999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/stats","status":"passed","title":"should use FollowController for GET /users/:username/stats","duration":6.797400000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for GET /users/:username","status":"passed","title":"should use UserController for GET /users/:username","duration":4.337800000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for POST /users/:username/block","status":"passed","title":"should use UserController for POST /users/:username/block","duration":4.442199999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for DELETE /users/:username/block","status":"passed","title":"should use UserController for DELETE /users/:username/block","duration":7.693300000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Post Operations - PostController Usage"],"fullName":"Users Router Refactoring Tests Post Operations - PostController Usage should use PostController for GET /users/:username/posts","status":"passed","title":"should use PostController for GET /users/:username/posts","duration":4.96690000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply optional auth middleware to follow operations","status":"passed","title":"should apply optional auth middleware to follow operations","duration":4.059500000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to unfollow operations","status":"passed","title":"should apply required auth middleware to unfollow operations","duration":5.246500000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to block operations","status":"passed","title":"should apply required auth middleware to block operations","duration":4.091499999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Parameter Handling"],"fullName":"Users Router Refactoring Tests Parameter Handling should pass username parameter to controllers","status":"passed","title":"should pass username parameter to controllers","duration":5.961099999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use UserController for follow operations","status":"passed","title":"should not use UserController for follow operations","duration":5.270799999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use FollowController for user management operations","status":"passed","title":"should not use FollowController for user management operations","duration":5.222499999999968,"failureMessages":[],"meta":{}}],"startTime":1751614446671,"endTime":1751614446796.2224,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/users.router.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with default expiration","status":"passed","title":"should create AuthService with default expiration","duration":3.899599999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with custom expiration","status":"passed","title":"should create AuthService with custom expiration","duration":0.48599999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should hash a password successfully","status":"passed","title":"should hash a password successfully","duration":234.05539999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should produce different hashes for the same password","status":"passed","title":"should produce different hashes for the same password","duration":489.90049999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle different password lengths","status":"passed","title":"should handle different password lengths","duration":492.55729999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle passwords with special characters","status":"passed","title":"should handle passwords with special characters","duration":240.2138,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle unicode characters in passwords","status":"passed","title":"should handle unicode characters in passwords","duration":246.31850000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":1.778099999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for undefined password","status":"passed","title":"should throw error for undefined password","duration":0.8229000000001179,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should verify correct password","status":"passed","title":"should verify correct password","duration":521.7084,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject incorrect password","status":"passed","title":"should reject incorrect password","duration":541.4178000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject password with different case","status":"passed","title":"should reject password with different case","duration":510.74440000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle empty string password verification","status":"passed","title":"should handle empty string password verification","duration":529.7080000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle special characters in verification","status":"passed","title":"should handle special characters in verification","duration":523.3275999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for invalid hash format","status":"passed","title":"should throw error for invalid hash format","duration":1.0189000000000306,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null hash","status":"passed","title":"should throw error for null hash","duration":0.9927999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":335.34909999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate a valid JWT token","status":"passed","title":"should generate a valid JWT token","duration":7.251999999999498,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate different tokens for different users","status":"passed","title":"should generate different tokens for different users","duration":4.297099999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should include user data in token payload","status":"passed","title":"should include user data in token payload","duration":5.733900000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":4.40059999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":1.2793000000001484,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for empty token","status":"passed","title":"should throw error for empty token","duration":0.9210999999995693,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for null token","status":"passed","title":"should throw error for null token","duration":0.8882000000003245,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should extract token from Bearer header","status":"passed","title":"should extract token from Bearer header","duration":1.0123999999996158,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for invalid header format","status":"passed","title":"should throw error for invalid header format","duration":1.3245999999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for undefined header","status":"passed","title":"should throw error for undefined header","duration":2.1148999999995794,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for empty header","status":"passed","title":"should throw error for empty header","duration":0.6319000000003143,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should validate correct registration data","status":"passed","title":"should validate correct registration data","duration":4.719299999999748,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject invalid email","status":"passed","title":"should reject invalid email","duration":5.963200000000143,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject short password","status":"passed","title":"should reject short password","duration":1.9786999999996624,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should validate correct login data","status":"passed","title":"should validate correct login data","duration":1.2231999999994514,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.9331999999994878,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject missing password","status":"passed","title":"should reject missing password","duration":1.6289999999999054,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full password hash and verify cycle","status":"passed","title":"should complete full password hash and verify cycle","duration":719.4126000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full token generation and verification cycle","status":"passed","title":"should complete full token generation and verification cycle","duration":1.9377999999996973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should work with different JWT expiration times","status":"passed","title":"should work with different JWT expiration times","duration":5.66610000000037,"failureMessages":[],"meta":{}}],"startTime":1751614445026,"endTime":1751614450476.666,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":7.125600000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.4050000000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.439799999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":0.8962999999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":0.6535999999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":0.8401999999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":1.273900000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":1.834600000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":1.6383999999999332,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":0.5952000000000908,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.47669999999993706,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.7619999999999436,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":0.8929000000000542,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.6784999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":0.9180000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.7572999999999865,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.264699999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.31560000000001764,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.265700000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.35400000000004184,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":0.3310000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":0.39619999999990796,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.7550999999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":0.5,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":0.3002999999999929,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":0.3730000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":0.31730000000004566,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":0.5531999999999471,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":0.5987999999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.7149000000000569,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.5973000000000184,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.5997999999999593,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":0.8357999999999493,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":0.6209999999999809,"failureMessages":[],"meta":{}}],"startTime":1751614442043,"endTime":1751614442077.621,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/FollowService.test.ts"}]}
