[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
{"numTotalTestSuites":326,"numPassedTestSuites":319,"numFailedTestSuites":7,"numPendingTestSuites":0,"numTotalTests":735,"numPassedTests":726,"numFailedTests":9,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751612084177,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block basic path traversal with double dots","status":"failed","title":"should block basic path traversal with double dots","duration":31.30989999999997,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:94:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block URL encoded path traversal","status":"failed","title":"should block URL encoded path traversal","duration":6.802500000000009,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:115:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block tilde-based path traversal","status":"failed","title":"should block tilde-based path traversal","duration":5.686800000000062,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:124:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block Windows-style path traversal","status":"failed","title":"should block Windows-style path traversal","duration":5.8636000000000195,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:138:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to dotfiles","status":"passed","title":"should block access to dotfiles","duration":10.627099999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to various dotfile types","status":"passed","title":"should block access to various dotfile types","duration":31.4298,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should serve legitimate files correctly","status":"failed","title":"should serve legitimate files correctly","duration":13.720500000000015,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:188:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should allow files with dots in names","status":"passed","title":"should allow files with dots in names","duration":6.817000000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":5.071900000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set appropriate Content-Disposition for different file types","status":"passed","title":"should set appropriate Content-Disposition for different file types","duration":43.60200000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set all required security headers","status":"passed","title":"should set all required security headers","duration":7.655499999999961,"failureMessages":[],"meta":{}}],"startTime":1751612090436,"endTime":1751612090605.6555,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with BASE_URL when provided","status":"passed","title":"should generate URL with BASE_URL when provided","duration":2.23580000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with default localhost when no BASE_URL","status":"passed","title":"should generate URL with default localhost when no BASE_URL","duration":0.2995000000000232,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should use custom PORT when provided","status":"passed","title":"should use custom PORT when provided","duration":0.25109999999995125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should handle special characters in filename","status":"passed","title":"should handle special characters in filename","duration":0.2358000000000402,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should generate unique filenames with UUID and timestamp","status":"passed","title":"should generate unique filenames with UUID and timestamp","duration":1.0392999999999688,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should handle files without extensions","status":"passed","title":"should handle files without extensions","duration":0.31960000000003674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should preserve file extensions correctly","status":"passed","title":"should preserve file extensions correctly","duration":0.3638000000000261,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","File Filter Logic"],"fullName":"Media Route Unit Tests File Filter Logic should accept all files when using passthrough filter","status":"passed","title":"should accept all files when using passthrough filter","duration":1.32589999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should generate consistent error responses","status":"passed","title":"should generate consistent error responses","duration":0.4060000000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should handle multer error code mapping","status":"passed","title":"should handle multer error code mapping","duration":0.3815000000000168,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should reject filenames with path traversal attempts","status":"passed","title":"should reject filenames with path traversal attempts","duration":0.28010000000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should accept safe filenames","status":"passed","title":"should accept safe filenames","duration":0.2937000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","File Size Validation"],"fullName":"Security Unit Tests File Size Validation should validate file sizes correctly","status":"passed","title":"should validate file sizes correctly","duration":0.8834999999999695,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Unit Tests","Memory Usage"],"fullName":"Performance Unit Tests Memory Usage should handle large file metadata efficiently","status":"passed","title":"should handle large file metadata efficiently","duration":1.240700000000004,"failureMessages":[],"meta":{}}],"startTime":1751612089694,"endTime":1751612089705.2407,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload valid image file successfully","status":"passed","title":"should upload valid image file successfully","duration":43.840599999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload file without alt text","status":"passed","title":"should upload file without alt text","duration":10.464399999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should handle all supported file types","status":"passed","title":"should handle all supported file types","duration":30.508000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject requests with no file","status":"passed","title":"should reject requests with no file","duration":4.127000000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject unsupported file types","status":"passed","title":"should reject unsupported file types","duration":5.323200000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject files exceeding size limit","status":"passed","title":"should reject files exceeding size limit","duration":63.676099999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should validate alt text length","status":"passed","title":"should validate alt text length","duration":9.528400000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should create uploads directory if it does not exist","status":"passed","title":"should create uploads directory if it does not exist","duration":7.864400000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should handle directory creation failure","status":"passed","title":"should handle directory creation failure","duration":5.736099999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Error Recovery"],"fullName":"Media Upload Route Error Recovery should clean up uploaded file if processing fails","status":"passed","title":"should clean up uploaded file if processing fails","duration":14.328899999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files just under the size limit","status":"passed","title":"should handle files just under the size limit","duration":50.75980000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should reject files at exactly the size limit","status":"passed","title":"should reject files at exactly the size limit","duration":56.116300000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files with no extension","status":"passed","title":"should handle files with no extension","duration":6.836599999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle very small files","status":"passed","title":"should handle very small files","duration":6.876099999999951,"failureMessages":[],"meta":{}}],"startTime":1751612089168,"endTime":1751612089485.8762,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with double dots (..)","status":"failed","title":"should block requests with double dots (..)","duration":37.629800000000046,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:105:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with tilde (~)","status":"failed","title":"should block requests with tilde (~)","duration":9.258699999999976,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:121:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block complex path traversal attempts","status":"failed","title":"should block complex path traversal attempts","duration":5.520599999999945,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:147:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow legitimate file access","status":"failed","title":"should allow legitimate file access","duration":13.831900000000019,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:163:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow files with dots in names but not path traversal","status":"passed","title":"should allow files with dots in names but not path traversal","duration":8.166500000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Content-Type-Options header","status":"passed","title":"should set X-Content-Type-Options header","duration":7.813099999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Frame-Options header","status":"passed","title":"should set X-Frame-Options header","duration":7.807299999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for image files","status":"passed","title":"should set inline Content-Disposition for image files","duration":34.312799999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for video files","status":"passed","title":"should set inline Content-Disposition for video files","duration":18.482899999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set attachment Content-Disposition for other file types","status":"passed","title":"should set attachment Content-Disposition for other file types","duration":29.928800000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to dotfiles","status":"passed","title":"should deny access to dotfiles","duration":10.06499999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to files starting with dot","status":"passed","title":"should deny access to files starting with dot","duration":20.5462,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":4.293900000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for empty filename","status":"passed","title":"should return 404 for empty filename","duration":4.2420000000000755,"failureMessages":[],"meta":{}}],"startTime":1751612090235,"endTime":1751612090448.242,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":4.863399999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":1.0396000000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":0.6709000000000174,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":0.6619999999999777,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":0.6193999999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":1.383299999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":1.0611000000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":1.366899999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":2.0249000000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":0.8428000000000111,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":0.5637000000000398,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":0.8331999999999766,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":0.7181000000000495,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":0.6091000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":0.7137000000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":0.5815999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":1.231300000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":0.8876999999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.9904999999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":2.8659999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":1.0092000000000212,"failureMessages":[],"meta":{}}],"startTime":1751612085784,"endTime":1751612085811.0093,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":4.729300000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":1.543200000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":0.8713999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":0.7062999999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":1.856300000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":0.6252000000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":0.5371000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":1.0994999999999777,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":1.9016000000000304,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":1.070600000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":1.094699999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":1.2649999999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":1.1169999999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.5271999999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":0.9238000000000284,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":1.0684999999999718,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":1.0441000000000145,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":0.9744999999999777,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.8115999999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.8134999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.7850999999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.7737000000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":0.8801000000000272,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":2.82710000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":0.9796999999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":0.8910999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":0.7228999999999814,"failureMessages":[],"meta":{}}],"startTime":1751612085298,"endTime":1751612085332.723,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.business.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully follow user with authenticated request","status":"passed","title":"should successfully follow user with authenticated request","duration":5.577199999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully handle ActivityPub external follow","status":"passed","title":"should successfully handle ActivityPub external follow","duration":0.6595999999999549,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when username is missing","status":"passed","title":"should reject when username is missing","duration":0.7613999999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when user to follow not found","status":"passed","title":"should reject when user to follow not found","duration":0.5783000000000129,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when no follower identity provided","status":"passed","title":"should reject when no follower identity provided","duration":0.3753000000000384,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle service errors correctly","status":"passed","title":"should handle service errors correctly","duration":0.436800000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle unexpected exceptions","status":"passed","title":"should handle unexpected exceptions","duration":0.5588999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should successfully unfollow user","status":"passed","title":"should successfully unfollow user","duration":0.9026000000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should reject when authentication is missing","status":"passed","title":"should reject when authentication is missing","duration":0.6464999999999463,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should handle service error for not following","status":"passed","title":"should handle service error for not following","duration":0.41459999999995034,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.7209000000000287,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should handle custom pagination parameters","status":"passed","title":"should handle custom pagination parameters","duration":0.38960000000008677,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should ignore invalid pagination parameters","status":"passed","title":"should ignore invalid pagination parameters","duration":0.32939999999996417,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowStats()"],"fullName":"FollowController Unit Tests getUserFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.5935000000000628,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.8392999999999802,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle missing target username","status":"passed","title":"should handle missing target username","duration":0.38619999999991705,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle follower user not found","status":"passed","title":"should handle follower user not found","duration":0.37000000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.6213999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should reject invalid usernames format","status":"passed","title":"should reject invalid usernames format","duration":0.36969999999996617,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should successfully get recent followers for own account","status":"passed","title":"should successfully get recent followers for own account","duration":0.5942999999999756,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should handle custom limit parameter","status":"passed","title":"should handle custom limit parameter","duration":0.3642000000000962,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when trying to view others recent followers","status":"passed","title":"should reject when trying to view others recent followers","duration":0.3908999999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when not authenticated","status":"passed","title":"should reject when not authenticated","duration":0.3774999999999409,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map validation errors to 400 status","status":"passed","title":"should map validation errors to 400 status","duration":0.36350000000004457,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map authentication errors to 401 status","status":"passed","title":"should map authentication errors to 401 status","duration":0.3288000000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map forbidden errors to 403 status","status":"passed","title":"should map forbidden errors to 403 status","duration":0.3201000000000249,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map not found errors to 404 status","status":"passed","title":"should map not found errors to 404 status","duration":0.3810000000000855,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map business rule conflicts to 409 status","status":"passed","title":"should map business rule conflicts to 409 status","duration":0.35389999999995325,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map unknown errors to 500 status","status":"passed","title":"should map unknown errors to 500 status","duration":0.3265999999999849,"failureMessages":[],"meta":{}}],"startTime":1751612084851,"endTime":1751612084872.3267,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.test.ts"},{"assertionResults":[{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create a new post successfully","status":"passed","title":"should create a new post successfully","duration":4.562899999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create scheduled post successfully","status":"passed","title":"should create scheduled post successfully","duration":1.4461000000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should handle content warning properly","status":"passed","title":"should handle content warning properly","duration":2.2927999999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with empty content","status":"passed","title":"should reject posts with empty content","duration":1.1929999999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with only whitespace content","status":"passed","title":"should reject posts with only whitespace content","duration":0.7898000000000138,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts exceeding character limit","status":"passed","title":"should reject posts exceeding character limit","duration":0.5177999999999656,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts without scheduledFor date","status":"passed","title":"should reject scheduled posts without scheduledFor date","duration":0.43600000000003547,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts with past dates","status":"passed","title":"should reject scheduled posts with past dates","duration":0.5116999999999621,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Server Errors"],"fullName":"PostController createPost Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.7611999999999739,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should return public posts with pagination","status":"passed","title":"should return public posts with pagination","duration":0.7379999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should filter out current user own posts when authenticated","status":"passed","title":"should filter out current user own posts when authenticated","duration":0.7227999999999497,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle pagination parameters correctly","status":"passed","title":"should handle pagination parameters correctly","duration":0.6075999999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle invalid pagination parameters","status":"passed","title":"should handle invalid pagination parameters","duration":0.43980000000004793,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Server Errors"],"fullName":"PostController getPosts Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.5047999999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return post when found and published","status":"passed","title":"should return post when found and published","duration":0.6083999999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return unpublished post when author is viewing","status":"passed","title":"should return unpublished post when author is viewing","duration":0.4966000000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 for unpublished post when not the author","status":"passed","title":"should return 404 for unpublished post when not the author","duration":0.47769999999997026,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.44680000000005293,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Input Validation"],"fullName":"PostController getPostById Input Validation should return 400 when post ID is missing","status":"passed","title":"should return 400 when post ID is missing","duration":0.4796999999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Successful Post Deletion"],"fullName":"PostController deletePost Successful Post Deletion should delete own post successfully","status":"passed","title":"should delete own post successfully","duration":0.5674999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 403 when trying to delete another user post","status":"passed","title":"should return 403 when trying to delete another user post","duration":0.5079000000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.5119000000000256,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return user posts with pagination","status":"passed","title":"should return user posts with pagination","duration":0.6918000000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.5068999999999733,"failureMessages":[],"meta":{}}],"startTime":1751612086936,"endTime":1751612086958.5068,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/PostController.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should create follow relationship successfully","status":"passed","title":"should create follow relationship successfully","duration":101.73569999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent duplicate follow relationships","status":"passed","title":"should prevent duplicate follow relationships","duration":95.4925,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent self-following","status":"passed","title":"should prevent self-following","duration":63.73200000000003,"failureMessages":[],"meta":{}}],"startTime":1751612091263,"endTime":1751612091524.732,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/Follow.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should create post associated with existing user","status":"passed","title":"should create post associated with existing user","duration":109.89010000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should enforce foreign key constraint for invalid user","status":"passed","title":"should enforce foreign key constraint for invalid user","duration":190.33479999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should cascade delete posts when user is deleted","status":"passed","title":"should cascade delete posts when user is deleted","duration":189.14639999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create published post with proper user attribution","status":"passed","title":"should create published post with proper user attribution","duration":79.5199,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create draft post for user","status":"passed","title":"should create draft post for user","duration":175.8383,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create scheduled post with user relationship","status":"passed","title":"should create scheduled post with user relationship","duration":78.95179999999982,"failureMessages":[],"meta":{}}],"startTime":1751612090827,"endTime":1751612091651.952,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/PostUser.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":6.75,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":1.335300000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":0.8956000000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.7364000000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":1.7041999999999575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.9721999999999866,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.8974000000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.6386999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":1.437599999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":1.133800000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.9797999999999547,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.9366999999999734,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":1.0174000000000092,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":1.036899999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":1.2302999999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":1.1779000000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":1.4385999999999513,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.9947999999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.7973999999999819,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.8963999999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":1.0079999999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.9567000000000121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.9204000000000292,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":0.9020999999999617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.7783000000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.627900000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":0.9175000000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":1.1825000000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":1.0638999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":3.6988000000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":1.9926999999999566,"failureMessages":[],"meta":{}}],"startTime":1751612085324,"endTime":1751612085367.9927,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/authMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid username and no actorId","status":"passed","title":"should pass validation with valid username and no actorId","duration":4.215199999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid ActivityPub actor ID","status":"passed","title":"should pass validation with valid ActivityPub actor ID","duration":1.5915999999999713,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.374400000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid ActivityPub URLs","status":"passed","title":"should pass validation with various valid ActivityPub URLs","duration":0.9790000000000418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with null actorId","status":"passed","title":"should pass validation with null actorId","duration":0.40980000000001837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":7.604900000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid ActivityPub actor URLs","status":"passed","title":"should reject invalid ActivityPub actor URLs","duration":2.6469000000000733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.5271000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":0.7122000000000526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Invalid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Invalid Unfollow Requests should reject invalid usernames","status":"passed","title":"should reject invalid usernames","duration":2.3875000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":1.2730999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with valid pagination parameters","status":"passed","title":"should pass validation with valid pagination parameters","duration":0.449799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with includeInactive flag","status":"passed","title":"should pass validation with includeInactive flag","duration":0.3565999999999576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should handle includeInactive false correctly","status":"passed","title":"should handle includeInactive false correctly","duration":1.24249999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject invalid username in params","status":"passed","title":"should reject invalid username in params","duration":0.370900000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.5874000000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.48670000000004165,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject zero or negative page numbers","status":"passed","title":"should reject zero or negative page numbers","duration":0.7250000000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with acct: format","status":"passed","title":"should pass validation with acct: format","duration":0.72849999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with HTTPS URL format","status":"passed","title":"should pass validation with HTTPS URL format","duration":0.5184000000000424,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various acct: formats","status":"passed","title":"should pass validation with various acct: formats","duration":0.7010999999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various HTTPS URL formats","status":"passed","title":"should pass validation with various HTTPS URL formats","duration":0.8071999999999662,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject invalid resource formats","status":"passed","title":"should reject invalid resource formats","duration":3.0528000000000475,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject missing resource parameter","status":"passed","title":"should reject missing resource parameter","duration":0.8209999999999127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with valid ActivityPub request","status":"passed","title":"should pass validation with valid ActivityPub request","duration":0.5258000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with extended ActivityPub content type","status":"passed","title":"should pass validation with extended ActivityPub content type","duration":0.5151000000000749,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with all required ActivityPub fields","status":"passed","title":"should pass validation with all required ActivityPub fields","duration":0.3808999999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-ActivityPub content type","status":"passed","title":"should reject non-ActivityPub content type","duration":1.384300000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject missing content type","status":"passed","title":"should reject missing content type","duration":1.4044000000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":0.9410000000000309,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-object request body","status":"passed","title":"should reject non-object request body","duration":2.264099999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject ActivityPub activities missing required fields","status":"passed","title":"should reject ActivityPub activities missing required fields","duration":3.850900000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","Error Handling"],"fullName":"Follow Validation Middleware Error Handling should handle validation errors properly","status":"passed","title":"should handle validation errors properly","duration":0.9670000000000982,"failureMessages":[],"meta":{}}],"startTime":1751612084871,"endTime":1751612084920.967,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/followValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with valid image file","status":"passed","title":"should pass validation with valid image file","duration":4.723299999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with all supported image types","status":"passed","title":"should pass validation with all supported image types","duration":1.3974999999999227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with supported video types","status":"passed","title":"should pass validation with supported video types","duration":0.6201999999999543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation without alt text","status":"passed","title":"should pass validation without alt text","duration":0.5633000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with empty alt text","status":"passed","title":"should pass validation with empty alt text","duration":0.5250999999999522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject upload without file","status":"passed","title":"should reject upload without file","duration":2.150199999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject unsupported file types","status":"passed","title":"should reject unsupported file types","duration":3.376299999999901,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject files that are too large","status":"passed","title":"should reject files that are too large","duration":0.7881999999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject empty files","status":"passed","title":"should reject empty files","duration":1.2057999999999538,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject alt text that is too long","status":"passed","title":"should reject alt text that is too long","duration":1.8003999999999678,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for user report","status":"passed","title":"should pass validation for user report","duration":1.8127999999999247,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for post report","status":"passed","title":"should pass validation for post report","duration":0.5860999999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for all report types","status":"passed","title":"should pass validation for all report types","duration":1.1649999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation with maximum length description","status":"passed","title":"should pass validation with maximum length description","duration":0.5413999999999533,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject invalid report type","status":"passed","title":"should reject invalid report type","duration":1.5761999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too short","status":"passed","title":"should reject description that is too short","duration":1.1870999999999867,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too long","status":"passed","title":"should reject description that is too long","duration":1.015299999999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with both user and post IDs","status":"passed","title":"should reject report with both user and post IDs","duration":1.0709000000000515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.8819999999999482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with reason","status":"passed","title":"should pass validation with reason","duration":0.8529999999999518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation without reason","status":"passed","title":"should pass validation without reason","duration":2.6222999999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with empty reason","status":"passed","title":"should pass validation with empty reason","duration":0.5101999999999407,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Invalid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Invalid User Blocking should reject reason that is too long","status":"passed","title":"should reject reason that is too long","duration":0.9376999999999498,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.5548000000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with minimum length username","status":"passed","title":"should pass validation with minimum length username","duration":0.3247000000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with maximum length username","status":"passed","title":"should pass validation with maximum length username","duration":0.2558999999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with underscores","status":"passed","title":"should pass validation with underscores","duration":0.2359000000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too short","status":"passed","title":"should reject username that is too short","duration":0.7221999999999298,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too long","status":"passed","title":"should reject username that is too long","duration":0.8618000000000166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username with invalid characters","status":"passed","title":"should reject username with invalid characters","duration":3.078899999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","Error Handling"],"fullName":"Media & Moderation Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":1.1554000000000997,"failureMessages":[],"meta":{}}],"startTime":1751612084872,"endTime":1751612084913.1555,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with minimal valid data","status":"passed","title":"should pass validation with minimal valid data","duration":7.4254999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with all optional fields","status":"passed","title":"should pass validation with all optional fields","duration":3.29849999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with empty content warning","status":"passed","title":"should pass validation with empty content warning","duration":1.1269000000000347,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should apply default values correctly","status":"passed","title":"should apply default values correctly","duration":1.123899999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject empty content","status":"passed","title":"should reject empty content","duration":5.510100000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":1.6802999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content warning that is too long","status":"passed","title":"should reject content warning that is too long","duration":3.7871000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled post without scheduled date","status":"passed","title":"should reject scheduled post without scheduled date","duration":1.9582999999999515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled date in the past","status":"passed","title":"should reject scheduled date in the past","duration":2.3489999999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject invalid datetime format","status":"passed","title":"should reject invalid datetime format","duration":1.4996000000000436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors","duration":1.3645999999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle missing request body","status":"passed","title":"should handle missing request body","duration":0.5269999999999868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should trim content whitespace","status":"passed","title":"should trim content whitespace","duration":0.4157999999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle non-string content types","status":"passed","title":"should handle non-string content types","duration":0.5980000000000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with partial update data","status":"passed","title":"should pass validation with partial update data","duration":0.5121000000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with all updatable fields","status":"passed","title":"should pass validation with all updatable fields","duration":0.3194000000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with empty body","status":"passed","title":"should pass validation with empty body","duration":0.2918000000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject empty content when provided","status":"passed","title":"should reject empty content when provided","duration":0.6950999999999681,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":0.6711999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":0.6868999999999801,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with valid page and limit","status":"passed","title":"should pass validation with valid page and limit","duration":0.7130000000000223,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with userId filter","status":"passed","title":"should pass validation with userId filter","duration":0.6308999999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.9198000000000093,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject negative page number","status":"passed","title":"should reject negative page number","duration":2.150299999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.7729999999999677,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject zero limit","status":"passed","title":"should reject zero limit","duration":0.6938999999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with valid post ID","status":"passed","title":"should pass validation with valid post ID","duration":0.7393999999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with alphanumeric ID","status":"passed","title":"should pass validation with alphanumeric ID","duration":0.5681999999999903,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject empty post ID","status":"passed","title":"should reject empty post ID","duration":1.1631999999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject missing post ID","status":"passed","title":"should reject missing post ID","duration":0.8233999999999924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.7986000000000217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","Error Handling"],"fullName":"Post Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":1.165300000000002,"failureMessages":[],"meta":{}}],"startTime":1751612085348,"endTime":1751612085398.1653,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/postValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should allow requests within the limit (5 per minute)","status":"passed","title":"should allow requests within the limit (5 per minute)","duration":159.9525,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should block requests exceeding the limit (6th request)","status":"passed","title":"should block requests exceeding the limit (6th request)","duration":479.47400000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should include rate limit headers","status":"passed","title":"should include rate limit headers","duration":112.35950000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should use IP address for rate limiting when user not authenticated","status":"passed","title":"should use IP address for rate limiting when user not authenticated","duration":480.92550000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should allow 10 posts per hour for authenticated users","status":"passed","title":"should allow 10 posts per hour for authenticated users","duration":141.07719999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should block 11th post creation request","status":"passed","title":"should block 11th post creation request","duration":807.3326999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should use user ID for rate limiting when authenticated","status":"passed","title":"should use user ID for rate limiting when authenticated","duration":114.65029999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should fall back to IP when user not authenticated","status":"passed","title":"should fall back to IP when user not authenticated","duration":111.48360000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should allow 20 follow operations per hour","status":"passed","title":"should allow 20 follow operations per hour","duration":160.59619999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should block 21st follow operation","status":"passed","title":"should block 21st follow operation","duration":1428.7711999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should allow 20 uploads per hour","status":"passed","title":"should allow 20 uploads per hour","duration":170.4953999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should block 21st media upload","status":"passed","title":"should block 21st media upload","duration":1439.4026000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should allow 100 requests per minute","status":"passed","title":"should allow 100 requests per minute","duration":330.9964999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should block 101st general API request","status":"passed","title":"should block 101st general API request","duration":298.34439999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should use IP address for general rate limiting","status":"passed","title":"should use IP address for general rate limiting","duration":105.48739999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should allow 3 password reset attempts per hour","status":"passed","title":"should allow 3 password reset attempts per hour","duration":115.93459999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should block 4th password reset attempt","status":"passed","title":"should block 4th password reset attempt","duration":358.59390000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should return consistent error format for all rate limits","status":"passed","title":"should return consistent error format for all rate limits","duration":431.3850999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should include retry after information","status":"passed","title":"should include retry after information","duration":432.6671000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should export correct configuration values","status":"passed","title":"should export correct configuration values","duration":108.28639999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should have descriptions for all rate limit types","status":"passed","title":"should have descriptions for all rate limit types","duration":109.60879999999997,"failureMessages":[],"meta":{}}],"startTime":1751612086107,"endTime":1751612094007.609,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should track rate limits by user ID for authenticated users","status":"passed","title":"should track rate limits by user ID for authenticated users","duration":326.59270000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should allow different users to have separate rate limits","status":"passed","title":"should allow different users to have separate rate limits","duration":298.34450000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should track rate limits by IP address for anonymous users","status":"passed","title":"should track rate limits by IP address for anonymous users","duration":306.96259999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should allow different IP addresses to have separate rate limits","status":"passed","title":"should allow different IP addresses to have separate rate limits","duration":300.26520000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should prioritize user ID over IP address when user is authenticated","status":"passed","title":"should prioritize user ID over IP address when user is authenticated","duration":109.92740000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should demonstrate same user from different IPs shares rate limit","status":"passed","title":"should demonstrate same user from different IPs shares rate limit","duration":441.1716999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Fallback Behavior"],"fullName":"Rate Limiting: User ID vs IP Address Fallback Behavior should fallback to IP when user ID is not available","status":"passed","title":"should fallback to IP when user ID is not available","duration":108.56980000000021,"failureMessages":[],"meta":{}}],"startTime":1751612086066,"endTime":1751612087958.5698,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitUserVsIP.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with valid alphanumeric ID","status":"passed","title":"should pass validation with valid alphanumeric ID","duration":5.254199999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with hyphens and underscores","status":"passed","title":"should pass validation with hyphens and underscores","duration":1.1046999999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject empty ID","status":"passed","title":"should reject empty ID","duration":3.203399999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject missing ID parameter","status":"passed","title":"should reject missing ID parameter","duration":0.9687999999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID with invalid characters","status":"passed","title":"should reject ID with invalid characters","duration":1.9710000000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.903699999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","setSecurityHeaders"],"fullName":"Security Validation Middleware setSecurityHeaders should set all required security headers","status":"passed","title":"should set all required security headers","duration":0.8715000000000259,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should sanitize control characters from strings","status":"passed","title":"should sanitize control characters from strings","duration":0.679300000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should handle nested objects and arrays","status":"passed","title":"should handle nested objects and arrays","duration":0.6990999999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from connection.remoteAddress","status":"passed","title":"should extract IP from connection.remoteAddress","duration":0.8137999999999579,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from x-forwarded-for header","status":"passed","title":"should extract IP from x-forwarded-for header","duration":0.5466000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should handle missing IP gracefully","status":"passed","title":"should handle missing IP gracefully","duration":0.3272999999999797,"failureMessages":[],"meta":{}}],"startTime":1751612090940,"endTime":1751612090958.5466,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":2.52679999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.4411999999999807,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.34449999999998226,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.31569999999999254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.4685000000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.41500000000002046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.22640000000001237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.174699999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.5812999999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":0.5494000000000483,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.41219999999998436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.2838999999999601,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.319500000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.428799999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.3191999999999666,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.29640000000000555,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.2878000000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.3499999999999659,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.35489999999998645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.5586999999999875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.46839999999997417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.35300000000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.39390000000003056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.3687999999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.3136000000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.291499999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":1.3670000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.3573999999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.3276000000000181,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":1.5802999999999656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.49569999999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.67349999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.37659999999999627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.4725999999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.33449999999999136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.3065000000000282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.30450000000001864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.5342000000000553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.6217000000000326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.3047000000000253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.31749999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.5454000000000292,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.41730000000001155,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.3392999999999802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.5326999999999771,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.7087999999999965,"failureMessages":[],"meta":{}}],"startTime":1751612085833,"endTime":1751612085858.7087,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.businessLogic.test.ts"},{"assertionResults":[{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should transition from draft to published","status":"passed","title":"should transition from draft to published","duration":2.751800000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should set publishedAt timestamp when transitioning to published","status":"passed","title":"should set publishedAt timestamp when transitioning to published","duration":0.9402999999999793,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should allow editing content before publishing","status":"passed","title":"should allow editing content before publishing","duration":0.4327000000000112,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should preserve other fields during draft to published transition","status":"passed","title":"should preserve other fields during draft to published transition","duration":0.29529999999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from draft to scheduled","status":"passed","title":"should transition from draft to scheduled","duration":0.5050999999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should detect when scheduled post is ready to publish","status":"passed","title":"should detect when scheduled post is ready to publish","duration":0.5461999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from expired scheduled to published","status":"passed","title":"should transition from expired scheduled to published","duration":0.38210000000003674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should preserve scheduled metadata when publishing","status":"passed","title":"should preserve scheduled metadata when publishing","duration":0.32960000000002765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should prevent transition from published back to draft","status":"passed","title":"should prevent transition from published back to draft","duration":0.43590000000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content updates on published posts","status":"passed","title":"should allow content updates on published posts","duration":0.2884000000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content warning updates on published posts","status":"passed","title":"should allow content warning updates on published posts","duration":0.223700000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle scheduling future posts","status":"passed","title":"should handle scheduling future posts","duration":0.248800000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle rescheduling posts","status":"passed","title":"should handle rescheduling posts","duration":0.2522000000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle canceling scheduled posts (back to draft)","status":"passed","title":"should handle canceling scheduled posts (back to draft)","duration":0.2711999999999648,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with invalid scheduling state","status":"passed","title":"should handle posts with invalid scheduling state","duration":0.21059999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with past scheduled dates","status":"passed","title":"should handle posts with past scheduled dates","duration":0.220799999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with inconsistent published state","status":"passed","title":"should handle posts with inconsistent published state","duration":0.9848999999999819,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle empty content in state transitions","status":"passed","title":"should handle empty content in state transitions","duration":0.295599999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle boundary conditions for scheduling","status":"passed","title":"should handle boundary conditions for scheduling","duration":0.18789999999995644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle multiple rapid state changes","status":"passed","title":"should handle multiple rapid state changes","duration":0.331799999999987,"failureMessages":[],"meta":{}}],"startTime":1751612087288,"endTime":1751612087299.3318,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.stateTransitions.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept valid content within character limits","status":"passed","title":"should accept valid content within character limits","duration":2.8611999999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject empty content","status":"passed","title":"should reject empty content","duration":0.7094999999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content that is only whitespace","status":"passed","title":"should reject content that is only whitespace","duration":0.5098000000000411,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content exceeding 5000 characters","status":"passed","title":"should reject content exceeding 5000 characters","duration":0.4239000000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept content exactly at 5000 character limit","status":"passed","title":"should accept content exactly at 5000 character limit","duration":0.39170000000001437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should trim whitespace from content","status":"passed","title":"should trim whitespace from content","duration":0.2891999999999939,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept valid content warning","status":"passed","title":"should accept valid content warning","duration":0.2515000000000214,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept empty string as content warning","status":"passed","title":"should accept empty string as content warning","duration":0.212600000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept missing content warning field","status":"passed","title":"should accept missing content warning field","duration":0.40819999999996526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should reject content warning exceeding 200 characters","status":"passed","title":"should reject content warning exceeding 200 characters","duration":0.6621000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept content warning exactly at 200 character limit","status":"passed","title":"should accept content warning exactly at 200 character limit","duration":0.25010000000003174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should trim whitespace from content warning","status":"passed","title":"should trim whitespace from content warning","duration":0.21519999999998163,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept scheduled post with future date","status":"passed","title":"should accept scheduled post with future date","duration":1.2316999999999894,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post without scheduledFor date","status":"passed","title":"should reject scheduled post without scheduledFor date","duration":0.41250000000002274,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with past date","status":"passed","title":"should reject scheduled post with past date","duration":0.407100000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with invalid date format","status":"passed","title":"should reject scheduled post with invalid date format","duration":0.29110000000002856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept non-scheduled post with scheduledFor date","status":"passed","title":"should accept non-scheduled post with scheduledFor date","duration":0.27080000000000837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isPublished to true","status":"passed","title":"should default isPublished to true","duration":0.20490000000000919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should accept explicit isPublished false for drafts","status":"passed","title":"should accept explicit isPublished false for drafts","duration":0.20589999999998554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isScheduled to false","status":"passed","title":"should default isScheduled to false","duration":0.19360000000000355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept draft scheduled post","status":"passed","title":"should accept draft scheduled post","duration":0.3009000000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept maximum length content with maximum length warning","status":"passed","title":"should accept maximum length content with maximum length warning","duration":0.23730000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should handle null scheduledFor appropriately","status":"passed","title":"should handle null scheduledFor appropriately","duration":0.22870000000000346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should create Post instance with valid data","status":"passed","title":"should create Post instance with valid data","duration":0.27689999999995507,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should handle optional fields correctly","status":"passed","title":"should handle optional fields correctly","duration":0.16589999999996508,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should convert undefined optional fields to null","status":"passed","title":"should convert undefined optional fields to null","duration":0.2074999999999818,"failureMessages":[],"meta":{}}],"startTime":1751612087939,"endTime":1751612087952.2075,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with all provided data","status":"passed","title":"should create user with all provided data","duration":2.6410999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with minimal required data","status":"passed","title":"should create user with minimal required data","duration":0.914799999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle displayName defaulting to username when not provided","status":"passed","title":"should handle displayName defaulting to username when not provided","duration":0.223700000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should use provided displayName over username when both exist","status":"passed","title":"should use provided displayName over username when both exist","duration":0.1804000000000201,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle empty string values properly","status":"passed","title":"should handle empty string values properly","duration":0.2189999999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle null values properly","status":"passed","title":"should handle null values properly","duration":0.2955000000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle undefined values properly","status":"passed","title":"should handle undefined values properly","duration":0.26799999999997226,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile data excluding sensitive information","status":"passed","title":"should return public profile data excluding sensitive information","duration":1.997700000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile with default values","status":"passed","title":"should return public profile with default values","duration":0.4925999999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should handle null values in public profile","status":"passed","title":"should handle null values in public profile","duration":0.2400000000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile data including all information","status":"passed","title":"should return private profile data including all information","duration":1.4662000000000148,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile with default values","status":"passed","title":"should return private profile with default values","duration":0.27830000000000155,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should include all fields from public profile","status":"passed","title":"should include all fields from public profile","duration":0.4352000000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateRegistration static method","status":"passed","title":"should have validateRegistration static method","duration":1.5767000000000166,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateLogin static method","status":"passed","title":"should have validateLogin static method","duration":0.34000000000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateProfileUpdate static method","status":"passed","title":"should have validateProfileUpdate static method","duration":0.4701000000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle data object with extra properties","status":"passed","title":"should handle data object with extra properties","duration":0.33850000000001046,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.18290000000001783,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle different verification tiers","status":"passed","title":"should handle different verification tiers","duration":0.14770000000004302,"failureMessages":[],"meta":{}}],"startTime":1751612087624,"endTime":1751612087638.1829,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.class.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should validate correct login credentials","status":"passed","title":"should validate correct login credentials","duration":4.2368999999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept any password length for login (no strength requirements)","status":"passed","title":"should accept any password length for login (no strength requirements)","duration":0.6401000000000181,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with special characters","status":"passed","title":"should accept password with special characters","duration":0.3686999999999898,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with spaces","status":"passed","title":"should accept password with spaces","duration":0.2847000000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept very long passwords","status":"passed","title":"should accept very long passwords","duration":0.3491999999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":0.8079999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.366800000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.25519999999994525,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without username part","status":"passed","title":"should reject email without username part","duration":0.39030000000002474,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with multiple @ symbols","status":"passed","title":"should reject email with multiple @ symbols","duration":0.25139999999998963,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.21069999999997435,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with only spaces","status":"passed","title":"should reject email with only spaces","duration":0.19020000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.2670999999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject password with only spaces","status":"passed","title":"should reject password with only spaces","duration":0.30059999999997444,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with null value","status":"passed","title":"should handle password field with null value","duration":0.49320000000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with undefined value","status":"passed","title":"should handle password field with undefined value","duration":0.24879999999996016,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing email","status":"passed","title":"should reject login data missing email","duration":0.25099999999997635,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing password","status":"passed","title":"should reject login data missing password","duration":0.23750000000001137,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing both email and password","status":"passed","title":"should reject login data missing both email and password","duration":1.102800000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Extra Fields Handling"],"fullName":"User Model - Login Validation Extra Fields Handling should ignore extra fields not in login schema","status":"passed","title":"should ignore extra fields not in login schema","duration":0.9828999999999724,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":0.43189999999998463,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should handle completely invalid login data","status":"passed","title":"should handle completely invalid login data","duration":0.26139999999998054,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with numeric values converted to strings","status":"passed","title":"should handle login data with numeric values converted to strings","duration":0.4823999999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with boolean values","status":"passed","title":"should handle login data with boolean values","duration":0.7048999999999523,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with array values","status":"passed","title":"should handle login data with array values","duration":0.5181999999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with object values","status":"passed","title":"should handle login data with object values","duration":0.47800000000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Case Sensitivity"],"fullName":"User Model - Login Validation Case Sensitivity should accept email with mixed case (validation should not enforce case)","status":"passed","title":"should accept email with mixed case (validation should not enforce case)","duration":0.4042999999999779,"failureMessages":[],"meta":{}}],"startTime":1751612089862,"endTime":1751612089879.4043,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.login.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with all optional fields provided","status":"passed","title":"should validate update with all optional fields provided","duration":3.20780000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only displayName","status":"passed","title":"should validate update with only displayName","duration":0.5391999999999939,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only bio","status":"passed","title":"should validate update with only bio","duration":0.35000000000002274,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only website","status":"passed","title":"should validate update with only website","duration":0.3564999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate empty update (no fields provided)","status":"passed","title":"should validate empty update (no fields provided)","duration":0.2536000000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.33260000000001355,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept bio at maximum length (500 characters)","status":"passed","title":"should accept bio at maximum length (500 characters)","duration":0.21870000000001255,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept empty string for website (to clear website)","status":"passed","title":"should accept empty string for website (to clear website)","duration":0.5452999999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept https websites","status":"passed","title":"should accept https websites","duration":0.39459999999996853,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept http websites","status":"passed","title":"should accept http websites","duration":0.32159999999998945,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with paths","status":"passed","title":"should accept websites with paths","duration":0.20650000000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with query parameters","status":"passed","title":"should accept websites with query parameters","duration":0.17879999999996699,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with ports","status":"passed","title":"should accept websites with ports","duration":0.17500000000001137,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with subdomains","status":"passed","title":"should accept websites with subdomains","duration":0.16950000000002774,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.4913999999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with only spaces","status":"passed","title":"should reject displayName with only spaces","duration":0.22639999999995553,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.23460000000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with null value","status":"passed","title":"should reject displayName with null value","duration":0.4678000000000111,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with non-string value","status":"passed","title":"should reject displayName with non-string value","duration":0.25039999999995644,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio longer than 500 characters","status":"passed","title":"should reject bio longer than 500 characters","duration":0.34459999999995716,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should accept empty bio","status":"passed","title":"should accept empty bio","duration":0.1782000000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with null value","status":"passed","title":"should reject bio with null value","duration":0.248800000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with non-string value","status":"passed","title":"should reject bio with non-string value","duration":0.3125,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject invalid website URL format","status":"passed","title":"should reject invalid website URL format","duration":0.40299999999996317,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website without protocol","status":"passed","title":"should reject website without protocol","duration":0.29009999999999536,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with invalid protocol","status":"passed","title":"should reject website with invalid protocol","duration":0.25090000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with only protocol","status":"passed","title":"should reject website with only protocol","duration":0.25509999999997035,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with spaces","status":"passed","title":"should reject website with spaces","duration":0.40250000000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with null value","status":"passed","title":"should reject website with null value","duration":0.3815999999999917,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with non-string value","status":"passed","title":"should reject website with non-string value","duration":0.26619999999996935,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.2941000000000145,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should handle combination of valid and invalid fields","status":"passed","title":"should handle combination of valid and invalid fields","duration":0.3146000000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Extra Fields Handling"],"fullName":"User Model - Profile Update Validation Extra Fields Handling should ignore fields not in profile update schema","status":"passed","title":"should ignore fields not in profile update schema","duration":0.9334999999999809,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle bio with special characters and unicode","status":"passed","title":"should handle bio with special characters and unicode","duration":0.17479999999994789,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with unicode characters","status":"passed","title":"should handle displayName with unicode characters","duration":0.15430000000003474,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle newlines in bio","status":"passed","title":"should handle newlines in bio","duration":0.155900000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with numbers and symbols","status":"passed","title":"should handle displayName with numbers and symbols","duration":0.15800000000001546,"failureMessages":[],"meta":{}}],"startTime":1751612088263,"endTime":1751612088279.1748,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.profileUpdate.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate correct registration data with all fields","status":"passed","title":"should validate correct registration data with all fields","duration":3.5539999999999736,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate registration data without optional displayName","status":"passed","title":"should validate registration data without optional displayName","duration":0.5437000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept username with underscores and numbers","status":"passed","title":"should accept username with underscores and numbers","duration":0.289100000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum length username (3 characters)","status":"passed","title":"should accept minimum length username (3 characters)","duration":0.19810000000001082,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept maximum length username (30 characters)","status":"passed","title":"should accept maximum length username (30 characters)","duration":0.19720000000000937,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum valid password requirements","status":"passed","title":"should accept minimum valid password requirements","duration":0.30299999999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":0.6576000000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.3421999999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.41849999999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.266399999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username shorter than 3 characters","status":"passed","title":"should reject username shorter than 3 characters","duration":0.28069999999996753,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username longer than 30 characters","status":"passed","title":"should reject username longer than 30 characters","duration":0.22769999999997026,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with special characters","status":"passed","title":"should reject username with special characters","duration":0.2115999999999758,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with spaces","status":"passed","title":"should reject username with spaces","duration":0.27499999999997726,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with hyphens","status":"passed","title":"should reject username with hyphens","duration":0.22739999999998872,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject empty username","status":"passed","title":"should reject empty username","duration":0.25370000000003756,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password shorter than 8 characters","status":"passed","title":"should reject password shorter than 8 characters","duration":0.3853000000000293,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without uppercase letter","status":"passed","title":"should reject password without uppercase letter","duration":0.220799999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without lowercase letter","status":"passed","title":"should reject password without lowercase letter","duration":0.21409999999997353,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without number","status":"passed","title":"should reject password without number","duration":0.2844000000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.43980000000004793,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.28829999999999245,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.23090000000001965,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.16579999999999018,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing email","status":"passed","title":"should reject registration data missing email","duration":0.4952000000000112,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing username","status":"passed","title":"should reject registration data missing username","duration":0.25549999999998363,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing password","status":"passed","title":"should reject registration data missing password","duration":0.2366999999999848,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Multiple Validation Errors"],"fullName":"User Model - Registration Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.156000000000006,"failureMessages":[],"meta":{}}],"startTime":1751612088593,"endTime":1751612088606.156,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with default expiration","status":"passed","title":"should create AuthService with default expiration","duration":2.6637000000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with custom expiration","status":"passed","title":"should create AuthService with custom expiration","duration":0.5111999999999739,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should hash a password successfully","status":"passed","title":"should hash a password successfully","duration":228.02329999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should produce different hashes for the same password","status":"passed","title":"should produce different hashes for the same password","duration":457.8891,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle different password lengths","status":"passed","title":"should handle different password lengths","duration":467.5700999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle passwords with special characters","status":"passed","title":"should handle passwords with special characters","duration":229.6956,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle unicode characters in passwords","status":"passed","title":"should handle unicode characters in passwords","duration":237.64149999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":2.9018999999998414,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for undefined password","status":"passed","title":"should throw error for undefined password","duration":1.0339000000001306,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should verify correct password","status":"passed","title":"should verify correct password","duration":477.2653,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject incorrect password","status":"passed","title":"should reject incorrect password","duration":464.8696,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject password with different case","status":"passed","title":"should reject password with different case","duration":481.82439999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle empty string password verification","status":"passed","title":"should handle empty string password verification","duration":462.89599999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle special characters in verification","status":"passed","title":"should handle special characters in verification","duration":461.2752999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for invalid hash format","status":"passed","title":"should throw error for invalid hash format","duration":0.36740000000008877,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null hash","status":"passed","title":"should throw error for null hash","duration":0.4735000000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":239.88979999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate a valid JWT token","status":"passed","title":"should generate a valid JWT token","duration":5.871099999999387,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate different tokens for different users","status":"passed","title":"should generate different tokens for different users","duration":4.108700000000681,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should include user data in token payload","status":"passed","title":"should include user data in token payload","duration":4.102399999999761,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":2.555699999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.6721999999999753,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for empty token","status":"passed","title":"should throw error for empty token","duration":0.4701999999997497,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for null token","status":"passed","title":"should throw error for null token","duration":0.3985999999995329,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should extract token from Bearer header","status":"passed","title":"should extract token from Bearer header","duration":0.32259999999951106,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for invalid header format","status":"passed","title":"should throw error for invalid header format","duration":1.0880999999999403,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for undefined header","status":"passed","title":"should throw error for undefined header","duration":0.37849999999980355,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for empty header","status":"passed","title":"should throw error for empty header","duration":0.3105999999997948,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should validate correct registration data","status":"passed","title":"should validate correct registration data","duration":2.240299999999479,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.8712999999997919,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject short password","status":"passed","title":"should reject short password","duration":0.5014999999993961,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should validate correct login data","status":"passed","title":"should validate correct login data","duration":0.50879999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.35010000000056607,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject missing password","status":"passed","title":"should reject missing password","duration":0.6127999999998792,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full password hash and verify cycle","status":"passed","title":"should complete full password hash and verify cycle","duration":707.2341999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full token generation and verification cycle","status":"passed","title":"should complete full token generation and verification cycle","duration":1.889299999999821,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should work with different JWT expiration times","status":"passed","title":"should work with different JWT expiration times","duration":4.3937000000005355,"failureMessages":[],"meta":{}}],"startTime":1751612087664,"endTime":1751612092621.3938,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":6.821000000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.754099999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.0833000000000084,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":0.5964999999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":0.8023000000000593,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":0.7181000000000495,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":0.7278999999999769,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.7455999999999676,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":0.9750999999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":0.524599999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.44820000000004256,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.7341000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":0.7679000000000542,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.3911999999999125,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":0.5427000000000817,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.3629000000000815,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.5237000000000762,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.3102000000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.31520000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.4660999999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":0.34000000000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":0.42419999999992797,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.8150000000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":0.7914000000000669,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":0.5954000000000406,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":0.564899999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":0.5181999999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":0.7250999999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":0.5429000000000315,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.4837999999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.49479999999994106,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.579599999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":0.7169999999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":0.5887000000000171,"failureMessages":[],"meta":{}}],"startTime":1751612084870,"endTime":1751612084900.5886,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/FollowService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":4.0487999999999715,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":1.1333000000000197,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":1.4841000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":0.5083999999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":0.4689999999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":0.25679999999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":0.6116000000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":0.4130000000000109,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":0.7533999999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.8462000000000103,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":0.48109999999996944,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":0.19690000000002783,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":0.179300000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":0.277499999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":0.8598999999999819,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":0.2360999999999649,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":0.43489999999997053,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":0.32380000000000564,"failureMessages":[],"meta":{}}],"startTime":1751612086180,"endTime":1751612086196.3237,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/FollowRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a basic post with minimal data","status":"passed","title":"should create a basic post with minimal data","duration":4.537399999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with content warning","status":"passed","title":"should create a post with content warning","duration":2.067299999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":0.5184999999999604,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with media attachments","status":"passed","title":"should create a post with media attachments","duration":0.38330000000001974,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should include author information in response","status":"passed","title":"should include author information in response","duration":1.0387000000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should handle different author verification states","status":"passed","title":"should handle different author verification states","duration":0.42070000000001073,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with maximum content length","status":"passed","title":"should handle posts with maximum content length","duration":1.1599999999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with special characters","status":"passed","title":"should handle posts with special characters","duration":0.3702000000000112,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with newlines and formatting","status":"passed","title":"should handle posts with newlines and formatting","duration":0.5708999999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle null optional fields correctly","status":"passed","title":"should handle null optional fields correctly","duration":0.4590000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should pass correct include parameters to Prisma","status":"passed","title":"should pass correct include parameters to Prisma","duration":0.6197999999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should handle Prisma create response correctly","status":"passed","title":"should handle Prisma create response correctly","duration":0.4870999999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate database connection errors","status":"passed","title":"should propagate database connection errors","duration":1.4531000000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate unique constraint violations","status":"passed","title":"should propagate unique constraint violations","duration":0.5135000000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate foreign key constraint violations","status":"passed","title":"should propagate foreign key constraint violations","duration":0.5373000000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should handle invalid data type errors","status":"passed","title":"should handle invalid data type errors","duration":0.6319000000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should call database create method exactly once","status":"passed","title":"should call database create method exactly once","duration":0.370399999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should not make additional database calls after creation","status":"passed","title":"should not make additional database calls after creation","duration":0.5036999999999807,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should handle concurrent post creation calls","status":"passed","title":"should handle concurrent post creation calls","duration":0.5733999999999924,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should preserve exact content without modification","status":"passed","title":"should preserve exact content without modification","duration":0.7525999999999726,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle date objects correctly","status":"passed","title":"should handle date objects correctly","duration":0.4235999999999649,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.40250000000003183,"failureMessages":[],"meta":{}}],"startTime":1751612087250,"endTime":1751612087269.4236,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.create.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a published post with default values","status":"passed","title":"should create a published post with default values","duration":4.905700000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a draft post when isPublished is false","status":"passed","title":"should create a draft post when isPublished is false","duration":1.6798000000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":1.2601999999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should handle content warning and activity ID","status":"passed","title":"should handle content warning and activity ID","duration":0.4954999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should find post by ID with full relations","status":"passed","title":"should find post by ID with full relations","duration":0.6387000000000285,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should return null if post not found","status":"passed","title":"should return null if post not found","duration":0.2674999999999841,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should find posts by author with default pagination","status":"passed","title":"should find posts by author with default pagination","duration":0.6240999999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should apply publishing status filter","status":"passed","title":"should apply publishing status filter","duration":0.6227000000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should handle custom pagination and ordering","status":"passed","title":"should handle custom pagination and ordering","duration":0.865600000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should find published posts with default options","status":"passed","title":"should find published posts with default options","duration":0.8454999999999586,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by author ID","status":"passed","title":"should filter by author ID","duration":0.4078000000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by content warning presence","status":"passed","title":"should filter by content warning presence","duration":0.5577999999999861,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by date range","status":"passed","title":"should filter by date range","duration":0.5067999999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findReadyToPublish()"],"fullName":"PostRepository findReadyToPublish() should find expired scheduled posts","status":"passed","title":"should find expired scheduled posts","duration":0.6582000000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should find future scheduled posts","status":"passed","title":"should find future scheduled posts","duration":0.7812000000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should filter by author","status":"passed","title":"should filter by author","duration":0.5368000000000279,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should update post content and set updatedAt","status":"passed","title":"should update post content and set updatedAt","duration":0.7533000000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should set publishedAt when transitioning to published","status":"passed","title":"should set publishedAt when transitioning to published","duration":0.8610000000000468,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should not set publishedAt if already published","status":"passed","title":"should not set publishedAt if already published","duration":0.5279999999999632,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","delete()"],"fullName":"PostRepository delete() should delete post and return deleted post with media info","status":"passed","title":"should delete post and return deleted post with media info","duration":0.6265999999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return true if post exists and belongs to author","status":"passed","title":"should return true if post exists and belongs to author","duration":0.6782000000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return false if post does not exist or belongs to different author","status":"passed","title":"should return false if post does not exist or belongs to different author","duration":0.3879000000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","getAuthorStats()"],"fullName":"PostRepository getAuthorStats() should return comprehensive post statistics for author","status":"passed","title":"should return comprehensive post statistics for author","duration":1.309500000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByActivityId()"],"fullName":"PostRepository findByActivityId() should find post by ActivityPub activity ID","status":"passed","title":"should find post by ActivityPub activity ID","duration":0.7250000000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should batch publish expired scheduled posts","status":"passed","title":"should batch publish expired scheduled posts","duration":1.1970000000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should return empty array if no expired posts","status":"passed","title":"should return empty array if no expired posts","duration":0.666499999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should use default limit of 50","status":"passed","title":"should use default limit of 50","duration":0.5296000000000163,"failureMessages":[],"meta":{}}],"startTime":1751612085291,"endTime":1751612085317.5295,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should successfully login user with valid credentials","status":"passed","title":"should successfully login user with valid credentials","duration":48.27359999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should handle user with different data successfully","status":"passed","title":"should handle user with different data successfully","duration":6.296900000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for non-existent user","status":"passed","title":"should return 401 for non-existent user","duration":5.71670000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for incorrect password","status":"passed","title":"should return 401 for incorrect password","duration":6.897199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for invalid email format","status":"passed","title":"should return 400 for invalid email format","duration":4.836700000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":4.133699999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":5.319399999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for empty request body","status":"passed","title":"should return 400 for empty request body","duration":4.877899999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":11.485399999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle AuthService errors gracefully","status":"passed","title":"should handle AuthService errors gracefully","duration":5.4605999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should return 500 for token generation errors","status":"passed","title":"should return 500 for token generation errors","duration":6.266200000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle case-sensitive email matching","status":"passed","title":"should handle case-sensitive email matching","duration":4.873900000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle very long email addresses","status":"passed","title":"should handle very long email addresses","duration":3.8904999999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle user with null optional fields","status":"passed","title":"should handle user with null optional fields","duration":4.070799999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should require JSON content type","status":"passed","title":"should require JSON content type","duration":3.4424999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":7.8098999999999705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should not reveal whether email exists in error messages","status":"passed","title":"should not reveal whether email exists in error messages","duration":7.179399999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should handle concurrent login attempts","status":"passed","title":"should handle concurrent login attempts","duration":14.487899999999968,"failureMessages":[],"meta":{}}],"startTime":1751612086764,"endTime":1751612086920.4878,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authLogin.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should successfully register a new user with valid data","status":"passed","title":"should successfully register a new user with valid data","duration":46.12719999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should register user with minimal required data (no bio or displayName)","status":"passed","title":"should register user with minimal required data (no bio or displayName)","duration":6.866700000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when username already exists","status":"passed","title":"should reject registration when username already exists","duration":6.218200000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when email already exists","status":"passed","title":"should reject registration when email already exists","duration":6.207700000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":7.474699999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle password hashing errors","status":"passed","title":"should handle password hashing errors","duration":5.423099999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle user creation errors in database","status":"passed","title":"should handle user creation errors in database","duration":5.424800000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with invalid data","status":"passed","title":"should reject registration with invalid data","duration":5.060100000000034,"failureMessages":[],"meta":{}}],"startTime":1751612088475,"endTime":1751612088565.06,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authRegistration.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":26.2106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user as external ActivityPub actor","status":"passed","title":"should successfully follow a user as external ActivityPub actor","duration":19.46169999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":7.180599999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should allow follow without authentication if actorId provided","status":"passed","title":"should allow follow without authentication if actorId provided","duration":6.2350999999999885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject follow without authentication and without actorId","status":"passed","title":"should reject follow without authentication and without actorId","duration":5.098799999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should require authentication for unfollow operations","status":"passed","title":"should require authentication for unfollow operations","duration":5.495400000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject invalid authentication tokens","status":"passed","title":"should reject invalid authentication tokens","duration":3.9897000000000844,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":3.8677999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when already following user","status":"passed","title":"should return 409 when already following user","duration":7.763599999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when trying to follow yourself","status":"passed","title":"should return 409 when trying to follow yourself","duration":4.114000000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 403 when user has blocked the follower","status":"passed","title":"should return 403 when user has blocked the follower","duration":3.319599999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should handle malformed username parameters","status":"passed","title":"should handle malformed username parameters","duration":3.2794000000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass username parameter correctly to controller","status":"passed","title":"should pass username parameter correctly to controller","duration":5.83280000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass request body correctly to controller","status":"passed","title":"should pass request body correctly to controller","duration":6.7631000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should preserve user information from authentication middleware","status":"passed","title":"should preserve user information from authentication middleware","duration":3.7834000000000287,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to followers endpoint","status":"passed","title":"should handle GET requests to followers endpoint","duration":6.2058000000000675,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to following endpoint","status":"passed","title":"should handle GET requests to following endpoint","duration":4.9558000000000675,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to stats endpoint","status":"passed","title":"should handle GET requests to stats endpoint","duration":4.611999999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle very long usernames","status":"passed","title":"should handle very long usernames","duration":3.706299999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle special characters in usernames","status":"passed","title":"should handle special characters in usernames","duration":4.805100000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle concurrent follow requests gracefully","status":"passed","title":"should handle concurrent follow requests gracefully","duration":9.791100000000029,"failureMessages":[],"meta":{}}],"startTime":1751612086459,"endTime":1751612086606.791,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/follow.requests.e2e.test.ts"},{"assertionResults":[{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should create router with all required dependencies","status":"passed","title":"should create router with all required dependencies","duration":5.497299999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should properly inject FollowController for follow operations","status":"passed","title":"should properly inject FollowController for follow operations","duration":26.75739999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for POST /users/:username/follow","status":"passed","title":"should use FollowController for POST /users/:username/follow","duration":5.948700000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for DELETE /users/:username/follow","status":"passed","title":"should use FollowController for DELETE /users/:username/follow","duration":4.742500000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/followers","status":"passed","title":"should use FollowController for GET /users/:username/followers","duration":4.723899999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/following","status":"passed","title":"should use FollowController for GET /users/:username/following","duration":6.408500000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/stats","status":"passed","title":"should use FollowController for GET /users/:username/stats","duration":4.4039000000000215,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for GET /users/:username","status":"passed","title":"should use UserController for GET /users/:username","duration":4.210000000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for POST /users/:username/block","status":"passed","title":"should use UserController for POST /users/:username/block","duration":5.64650000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for DELETE /users/:username/block","status":"passed","title":"should use UserController for DELETE /users/:username/block","duration":6.2946000000000595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Post Operations - PostController Usage"],"fullName":"Users Router Refactoring Tests Post Operations - PostController Usage should use PostController for GET /users/:username/posts","status":"passed","title":"should use PostController for GET /users/:username/posts","duration":5.4809999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply optional auth middleware to follow operations","status":"passed","title":"should apply optional auth middleware to follow operations","duration":5.233799999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to unfollow operations","status":"passed","title":"should apply required auth middleware to unfollow operations","duration":5.496899999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to block operations","status":"passed","title":"should apply required auth middleware to block operations","duration":6.145899999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Parameter Handling"],"fullName":"Users Router Refactoring Tests Parameter Handling should pass username parameter to controllers","status":"passed","title":"should pass username parameter to controllers","duration":5.609300000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use UserController for follow operations","status":"passed","title":"should not use UserController for follow operations","duration":5.780699999999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use FollowController for user management operations","status":"passed","title":"should not use FollowController for user management operations","duration":5.220900000000029,"failureMessages":[],"meta":{}}],"startTime":1751612089125,"endTime":1751612089240.221,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/users.router.test.ts"}]}
