[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
{"numTotalTestSuites":237,"numPassedTestSuites":211,"numFailedTestSuites":26,"numPendingTestSuites":0,"numTotalTests":427,"numPassedTests":413,"numFailedTests":14,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751858924360,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":1.7273999999997613,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":1.2101999999999862,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":0.8813000000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":0.9787999999998647,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":0.840900000000147,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":0.9889000000002852,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":0.9151999999999134,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":0.9257000000002336,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":1.4425999999998567,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":0.9992999999999483,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":0.7931000000003223,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":1.116399999999885,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":1.0304000000000997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":1.2031000000001768,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":0.9653000000002976,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":0.8285999999998239,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":1.6230000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":1.0634000000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.8797999999997046,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":1.0126000000000204,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":0.8517000000001644,"failureMessages":[],"meta":{}}],"startTime":1751858927739,"endTime":1751858927775.8518,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":1.2920000000001437,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":1.5243000000000393,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":0.5454999999999472,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":0.6403999999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":1.7796000000000731,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":0.5329999999999018,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":0.5219999999999345,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":0.4674999999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":0.6224000000001979,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":0.5211000000001604,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":0.4355000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":0.5340000000001055,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":0.5228000000001884,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.8535000000001673,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":0.5408999999999651,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":0.4673000000000229,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":0.3912000000000262,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":0.4540999999999258,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.7891999999999371,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.6147000000000844,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.4513999999999214,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.7590000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":0.699500000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":1.4911999999999352,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":0.6277000000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":0.5425999999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":0.48020000000019536,"failureMessages":[],"meta":{}}],"startTime":1751858925366,"endTime":1751858925389.4802,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/FollowController.business.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/controllers/FollowController (resolved id: ../../src/controllers/FollowController) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/controllers/__tests__/FollowController.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/FollowController.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/controllers/PostController.js (resolved id: ../../src/controllers/PostController.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/controllers/__tests__/PostController.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/PostController.test.ts"},{"assertionResults":[{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create user report successfully","status":"passed","title":"should create user report successfully","duration":1.1367999999984022,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create post report successfully","status":"passed","title":"should create post report successfully","duration":0.6574000000000524,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create anonymous report (no auth)","status":"passed","title":"should create anonymous report (no auth)","duration":0.9886999999998807,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.5665999999982887,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with both user and post ID","status":"passed","title":"should reject report with both user and post ID","duration":0.4346000000005006,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent user","status":"passed","title":"should reject report of non-existent user","duration":0.422099999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent post","status":"passed","title":"should reject report of non-existent post","duration":0.4021999999986292,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting user","status":"passed","title":"should reject self-reporting user","duration":0.3639000000002852,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting post","status":"passed","title":"should reject self-reporting post","duration":0.6256000000012136,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Error Handling"],"fullName":"ReportController createReport Error Handling should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":1.6106999999992695,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should return paginated reports","status":"passed","title":"should return paginated reports","duration":0.6085000000002765,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should handle filter parameters","status":"passed","title":"should handle filter parameters","duration":0.35450000000128057,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should update report status successfully","status":"passed","title":"should update report status successfully","duration":0.5143000000007305,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should reject invalid status","status":"passed","title":"should reject invalid status","duration":0.3282999999992171,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReportById"],"fullName":"ReportController getReportById should return specific report","status":"passed","title":"should return specific report","duration":0.4344999999993888,"failureMessages":[],"meta":{}}],"startTime":1751858932956,"endTime":1751858932973.4346,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/ReportController.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":0.35179999999991196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.18509999999969295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.1651000000001659,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.15770000000020445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.17309999999997672,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.165599999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.1748000000002321,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.1536999999998443,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.2373000000002321,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":0.20040000000017244,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.16330000000016298,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.18890000000010332,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.14780000000018845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.28769999999985885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.15359999999964202,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.13409999999976208,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.1329000000000633,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.17399999999997817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.13639999999986685,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.20339999999987413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.2078999999998814,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.31179999999994834,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.2357999999999265,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.2116000000000895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.22040000000015425,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.1516999999998916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":0.5985000000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.15810000000010405,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.17039999999997235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":1.1171999999996842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.2603999999996631,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.24179999999978463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.15059999999994034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.20859999999993306,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.12379999999984648,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.1228000000000975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.11799999999993815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.24159999999983484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.3228999999996631,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.14170000000012806,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.18820000000005166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.35379999999986467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.23469999999997526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.16570000000001528,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.2355000000002292,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.2191000000002532,"failureMessages":[],"meta":{}}],"startTime":1751858927832,"endTime":1751858927864.2356,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/Post.businessLogic.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/Post (resolved id: ../../src/models/Post) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.stateTransitions.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/Post.stateTransitions.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/Post (resolved id: ../../src/models/Post) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.stateTransitions.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/Post.validation.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/User.js (resolved id: ../../src/models/User.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/User.class.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/User.class.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/User.js (resolved id: ../../src/models/User.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/User.class.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/User.login.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/User.js (resolved id: ../../src/models/User.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/User.class.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/User.profileUpdate.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/models/User.js (resolved id: ../../src/models/User.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/models/__tests__/User.class.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/models/__tests__/User.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":0.8423000000000229,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":0.3977999999999611,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":0.3188999999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.28319999999985157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":0.4639999999999418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.46109999999998763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.383199999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.32219999999983884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":0.6493000000000393,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":0.5110000000001946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.46640000000002146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.48279999999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":0.4752000000000862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":0.47659999999996217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":0.5473000000001775,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":0.46879999999987376,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":0.4173000000000684,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.43029999999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.3505999999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.38589999999999236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":0.554300000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.3992000000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.3992000000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":0.38570000000004256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.27150000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.2576000000001386,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":1.61850000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":0.3421000000000731,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":0.30740000000014334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":0.2704000000001088,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":0.6701000000000477,"failureMessages":[],"meta":{}}],"startTime":1751858925417,"endTime":1751858925438.6702,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/authMiddleware.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/middleware/followValidationMiddleware (resolved id: ../../src/middleware/followValidationMiddleware) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/middleware/__tests__/followValidationMiddleware.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/followValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Global Error Handler"],"fullName":"Global Error Handler should handle success route correctly","status":"passed","title":"should handle success route correctly","duration":2.968700000001263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Global Error Handler"],"fullName":"Global Error Handler should handle errors with global error handler","status":"passed","title":"should handle errors with global error handler","duration":2.625800000001618,"failureMessages":[],"meta":{}}],"startTime":1751858938149,"endTime":1751858938155.6257,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/globalError.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should pass valid image files","status":"failed","title":"should pass valid image files","duration":1.7069999999985157,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:149:24\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject files with invalid MIME types","status":"failed","title":"should reject files with invalid MIME types","duration":1.3294000000005326,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ 400 ]\u001b[90m\n\nReceived: \n\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m0\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:166:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject files that are too large","status":"failed","title":"should reject files that are too large","duration":0.7795999999998457,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ 400 ]\u001b[90m\n\nReceived: \n\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m0\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:189:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject requests with no file","status":"failed","title":"should reject requests with no file","duration":0.6455999999998312,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ 400 ]\u001b[90m\n\nReceived: \n\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m0\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:206:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept JPG files","status":"failed","title":"should accept JPG files","duration":0.6674999999995634,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:239:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept PNG files","status":"failed","title":"should accept PNG files","duration":0.5681000000004133,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:239:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept GIF files","status":"failed","title":"should accept GIF files","duration":0.6198000000003958,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:239:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept WEBP files","status":"failed","title":"should accept WEBP files","duration":0.5794999999998254,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:239:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should accept files at the size limit","status":"failed","title":"should accept files at the size limit","duration":0.7768999999989319,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:258:24\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should reject files just over the size limit","status":"failed","title":"should reject files just over the size limit","duration":0.6768000000010943,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ 400 ]\u001b[90m\n\nReceived: \n\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m0\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:274:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Edge Cases"],"fullName":"Media Moderation Validation Middleware Edge Cases should handle files with unusual but valid names","status":"failed","title":"should handle files with unusual but valid names","duration":0.6323000000011234,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:299:24\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Edge Cases"],"fullName":"Media Moderation Validation Middleware Edge Cases should handle empty files","status":"failed","title":"should handle empty files","duration":0.60740000000078,"failureMessages":["AssertionError: expected \"spy\" to be called 1 times, but got 0 times\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\mediaModerationValidationMiddleware.test.ts:315:24\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}}],"startTime":1751858934461,"endTime":1751858934477.6074,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Path Traversal Detection Fix","URL Encoded Path Traversal Detection"],"fullName":"Path Traversal Detection Fix URL Encoded Path Traversal Detection should block URL encoded double dots","status":"passed","title":"should block URL encoded double dots","duration":3.2462000000014086,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","URL Encoded Path Traversal Detection"],"fullName":"Path Traversal Detection Fix URL Encoded Path Traversal Detection should block mixed URL encoding","status":"passed","title":"should block mixed URL encoding","duration":2.5216999999993277,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","URL Encoded Path Traversal Detection"],"fullName":"Path Traversal Detection Fix URL Encoded Path Traversal Detection should block URL encoded backslashes","status":"passed","title":"should block URL encoded backslashes","duration":2.449300000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Tilde Path Detection"],"fullName":"Path Traversal Detection Fix Tilde Path Detection should block tilde home directory access","status":"passed","title":"should block tilde home directory access","duration":2.7423999999991793,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Tilde Path Detection"],"fullName":"Path Traversal Detection Fix Tilde Path Detection should block various tilde patterns","status":"passed","title":"should block various tilde patterns","duration":5.149800000001051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Null Byte Detection"],"fullName":"Path Traversal Detection Fix Null Byte Detection should block null byte injection","status":"passed","title":"should block null byte injection","duration":2.753600000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Legitimate Paths Should Pass"],"fullName":"Path Traversal Detection Fix Legitimate Paths Should Pass should allow normal file paths","status":"passed","title":"should allow normal file paths","duration":4.927100000000792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Legitimate Paths Should Pass"],"fullName":"Path Traversal Detection Fix Legitimate Paths Should Pass should allow files with single dots in names","status":"passed","title":"should allow files with single dots in names","duration":2.915500000000975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Path Traversal Detection Fix","Legitimate Paths Should Pass"],"fullName":"Path Traversal Detection Fix Legitimate Paths Should Pass should allow subdirectory access","status":"passed","title":"should allow subdirectory access","duration":2.519399999999223,"failureMessages":[],"meta":{}}],"startTime":1751858938099,"endTime":1751858938138.5193,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/pathTraversalFix.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/middleware/postValidationMiddleware (resolved id: ../../src/middleware/postValidationMiddleware) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/middleware/__tests__/postValidationMiddleware.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/postValidationMiddleware.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/middleware/rateLimitMiddleware (resolved id: ../../src/middleware/rateLimitMiddleware) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rateLimitMiddleware.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/rateLimitMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should track rate limits by user ID for authenticated users","status":"passed","title":"should track rate limits by user ID for authenticated users","duration":321.4359999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should allow different users to have separate rate limits","status":"passed","title":"should allow different users to have separate rate limits","duration":337.4656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should track rate limits by IP address for anonymous users","status":"passed","title":"should track rate limits by IP address for anonymous users","duration":294.4991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should allow different IP addresses to have separate rate limits","status":"passed","title":"should allow different IP addresses to have separate rate limits","duration":310.0045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should prioritize user ID over IP address when user is authenticated","status":"passed","title":"should prioritize user ID over IP address when user is authenticated","duration":107.6265000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should demonstrate same user from different IPs shares rate limit","status":"passed","title":"should demonstrate same user from different IPs shares rate limit","duration":468.1635000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Fallback Behavior"],"fullName":"Rate Limiting: User ID vs IP Address Fallback Behavior should fallback to IP when user ID is not available","status":"passed","title":"should fallback to IP when user ID is not available","duration":124.6310999999996,"failureMessages":[],"meta":{}}],"startTime":1751858925701,"endTime":1751858927671.631,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/rateLimitUserVsIP.test.ts"},{"assertionResults":[{"ancestorTitles":["Raw URL Security Test"],"fullName":"Raw URL Security Test should show what URLs Express actually receives","status":"passed","title":"should show what URLs Express actually receives","duration":4.912800000000061,"failureMessages":[],"meta":{}}],"startTime":1751858938182,"endTime":1751858938186.9128,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/rawUrlTest.test.ts"},{"assertionResults":[{"ancestorTitles":["Realistic Security Tests - Actual Threats","URL Encoded Path Traversal (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats URL Encoded Path Traversal (Real Threat) should block URL encoded double dots","status":"passed","title":"should block URL encoded double dots","duration":2.976199999999153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","URL Encoded Path Traversal (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats URL Encoded Path Traversal (Real Threat) should block mixed URL encoding attacks","status":"passed","title":"should block mixed URL encoding attacks","duration":7.011300000000119,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should block tilde home directory access","status":"passed","title":"should block tilde home directory access","duration":2.3601999999991676,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should block various tilde patterns","status":"passed","title":"should block various tilde patterns","duration":4.649100000000544,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should show Express normalization behavior for complex tilde patterns","status":"passed","title":"should show Express normalization behavior for complex tilde patterns","duration":2.677300000001196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Dotfile Protection (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Dotfile Protection (Real Threat) should block access to dotfiles","status":"passed","title":"should block access to dotfiles","duration":3.5756000000001222,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Legitimate Access (Should Work)"],"fullName":"Realistic Security Tests - Actual Threats Legitimate Access (Should Work) should allow normal file access","status":"passed","title":"should allow normal file access","duration":2.6005000000004657,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Legitimate Access (Should Work)"],"fullName":"Realistic Security Tests - Actual Threats Legitimate Access (Should Work) should allow files with dots in names","status":"passed","title":"should allow files with dots in names","duration":3.0825000000004366,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Express Auto-Fixed Attacks (Informational)"],"fullName":"Realistic Security Tests - Actual Threats Express Auto-Fixed Attacks (Informational) should show that basic path traversal is auto-fixed by Express","status":"passed","title":"should show that basic path traversal is auto-fixed by Express","duration":3.1876000000011118,"failureMessages":[],"meta":{}}],"startTime":1751858938043,"endTime":1751858938085.1875,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/realisticSecurityTests.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/middleware/securityValidationMiddleware (resolved id: ../../src/middleware/securityValidationMiddleware) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/middleware/__tests__/securityValidationMiddleware.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Security Middleware","URL Encoded Path Traversal Protection"],"fullName":"Static File Security Middleware URL Encoded Path Traversal Protection should block URL encoded path traversal","status":"passed","title":"should block URL encoded path traversal","duration":0.7947999999996682,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","URL Encoded Path Traversal Protection"],"fullName":"Static File Security Middleware URL Encoded Path Traversal Protection should block URL encoded backslashes","status":"passed","title":"should block URL encoded backslashes","duration":0.3522999999986496,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Tilde Path Protection"],"fullName":"Static File Security Middleware Tilde Path Protection should block tilde-based path traversal","status":"passed","title":"should block tilde-based path traversal","duration":0.33539999999993597,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should allow legitimate file names","status":"passed","title":"should allow legitimate file names","duration":0.49060000000099535,"failureMessages":[],"meta":{}}],"startTime":1751858938167,"endTime":1751858938170.4905,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should create follow relationship successfully","status":"passed","title":"should create follow relationship successfully","duration":96.34859999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent duplicate follow relationships","status":"passed","title":"should prevent duplicate follow relationships","duration":213.81460000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent self-following","status":"passed","title":"should prevent self-following","duration":76.47240000000056,"failureMessages":[],"meta":{}}],"startTime":1751858937582,"endTime":1751858937971.4724,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/repositories/__tests__/Follow.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":0.8560999999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":0.5124999999998181,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":0.7105000000001382,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":0.6581999999998516,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":0.5462000000002263,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":0.3290999999999258,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":0.6494000000002416,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":0.39740000000028886,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":0.6764000000002852,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":0.9097000000001572,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":0.7411999999999352,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":1.6965000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":0.32999999999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":0.2603999999996631,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":0.5369000000000597,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":0.29140000000006694,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":0.4387000000001535,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":0.3714999999997417,"failureMessages":[],"meta":{}}],"startTime":1751858927890,"endTime":1751858927909.3716,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/repositories/__tests__/FollowRepository.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/repositories/PostRepository.js (resolved id: ../../src/repositories/PostRepository.js) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.create.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/repositories/__tests__/PostRepository.create.test.ts"},{"assertionResults":[],"startTime":1751858924360,"endTime":1751858924360,"status":"failed","message":"Failed to load url ../../src/repositories/PostRepository (resolved id: ../../src/repositories/PostRepository) in C:/Users/Et Al/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.test.ts. Does the file exist?","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/repositories/__tests__/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should create post associated with existing user","status":"passed","title":"should create post associated with existing user","duration":85.13010000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should enforce foreign key constraint for invalid user","status":"passed","title":"should enforce foreign key constraint for invalid user","duration":109.40769999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should cascade delete posts when user is deleted","status":"passed","title":"should cascade delete posts when user is deleted","duration":76.52399999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create published post with proper user attribution","status":"passed","title":"should create published post with proper user attribution","duration":76.80409999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create draft post for user","status":"passed","title":"should create draft post for user","duration":74.61059999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create scheduled post with user relationship","status":"passed","title":"should create scheduled post with user relationship","duration":76.6232,"failureMessages":[],"meta":{}}],"startTime":1751858934528,"endTime":1751858935036.6233,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/repositories/__tests__/PostUser.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Auth Routes Rate Limiting","Authentication Rate Limiting (5 per minute)"],"fullName":"Auth Routes Rate Limiting Authentication Rate Limiting (5 per minute) should allow requests within the limit (5 per minute)","status":"passed","title":"should allow requests within the limit (5 per minute)","duration":422.8050000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Authentication Rate Limiting (5 per minute)"],"fullName":"Auth Routes Rate Limiting Authentication Rate Limiting (5 per minute) should block requests exceeding the limit (6th request)","status":"passed","title":"should block requests exceeding the limit (6th request)","duration":482.8632999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Authentication Rate Limiting (5 per minute)"],"fullName":"Auth Routes Rate Limiting Authentication Rate Limiting (5 per minute) should include rate limit headers","status":"passed","title":"should include rate limit headers","duration":112.33040000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Authentication Rate Limiting (5 per minute)"],"fullName":"Auth Routes Rate Limiting Authentication Rate Limiting (5 per minute) should use IP address for rate limiting","status":"passed","title":"should use IP address for rate limiting","duration":464.7332999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Rate Limit Error Response Format"],"fullName":"Auth Routes Rate Limiting Rate Limit Error Response Format should return consistent error format for authentication rate limits","status":"passed","title":"should return consistent error format for authentication rate limits","duration":427.3081000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Rate Limit Error Response Format"],"fullName":"Auth Routes Rate Limiting Rate Limit Error Response Format should include retry after information","status":"passed","title":"should include retry after information","duration":419.67169999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Auth Routes Rate Limiting","Rate Limit Configuration"],"fullName":"Auth Routes Rate Limiting Rate Limit Configuration should have correct authentication rate limit values","status":"passed","title":"should have correct authentication rate limit values","duration":103.98500000000058,"failureMessages":[],"meta":{}}],"startTime":1751858935051,"endTime":1751858937492.985,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/auth.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Login"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Login should login user successfully with valid credentials","status":"passed","title":"should login user successfully with valid credentials","duration":3.025000000001455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Login"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Login should return user data and token on successful login","status":"passed","title":"should return user data and token on successful login","duration":2.582399999999325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for non-existent user","status":"passed","title":"should return 401 for non-existent user","duration":2.6133000000008906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for incorrect password","status":"passed","title":"should return 401 for incorrect password","duration":2.3923999999988155,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should not reveal whether email exists in error messages","status":"passed","title":"should not reveal whether email exists in error messages","duration":4.754899999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for invalid email format","status":"passed","title":"should return 400 for invalid email format","duration":2.558100000000195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":2.34900000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":2.5159999999996217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for empty request body","status":"passed","title":"should return 400 for empty request body","duration":2.7000000000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":3.423399999999674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should require JSON content type","status":"passed","title":"should require JSON content type","duration":2.6451000000015483,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":2.4459999999999127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle AuthService errors gracefully","status":"passed","title":"should handle AuthService errors gracefully","duration":2.8126999999985856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should handle concurrent login attempts","status":"passed","title":"should handle concurrent login attempts","duration":6.531800000000658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Response Format Validation"],"fullName":"Authentication Routes - User Login Response Format Validation should return consistent success response format","status":"passed","title":"should return consistent success response format","duration":2.6071000000010827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Response Format Validation"],"fullName":"Authentication Routes - User Login Response Format Validation should return consistent error response format","status":"passed","title":"should return consistent error response format","duration":2.6482000000014523,"failureMessages":[],"meta":{}}],"startTime":1751858934081,"endTime":1751858934147.6482,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/authLogin.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should successfully register a new user with valid data","status":"passed","title":"should successfully register a new user with valid data","duration":13.872899999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should register user with minimal required data (no bio or displayName)","status":"passed","title":"should register user with minimal required data (no bio or displayName)","duration":4.057300000000396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should return user data without password in response","status":"passed","title":"should return user data without password in response","duration":2.7588999999998123,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when username already exists","status":"passed","title":"should reject registration when username already exists","duration":3.0761999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when email already exists","status":"passed","title":"should reject registration when email already exists","duration":2.916500000000269,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should handle case-insensitive email conflicts","status":"passed","title":"should handle case-insensitive email conflicts","duration":2.826600000000326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should handle case-insensitive username conflicts","status":"passed","title":"should handle case-insensitive username conflicts","duration":2.91800000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with invalid data","status":"passed","title":"should reject registration with invalid data","duration":3.0174000000001797,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with missing required fields","status":"passed","title":"should reject registration with missing required fields","duration":3.1421000000000276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with empty request body","status":"passed","title":"should reject registration with empty request body","duration":3.008600000000115,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject username with invalid characters","status":"passed","title":"should reject username with invalid characters","duration":2.5839999999998327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject weak passwords","status":"passed","title":"should reject weak passwords","duration":3.347899999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":2.782799999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Errors should handle password hashing errors","status":"passed","title":"should handle password hashing errors","duration":2.6728000000002794,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Content Type Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Content Type Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":5.01299999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Content Type Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Content Type Handling should require JSON content type","status":"passed","title":"should require JSON content type","duration":2.5228000000001884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","Response Format Validation"],"fullName":"Authentication Routes - User Registration Response Format Validation should return consistent success response format","status":"passed","title":"should return consistent success response format","duration":3.3840000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","Response Format Validation"],"fullName":"Authentication Routes - User Registration Response Format Validation should return consistent error response format","status":"passed","title":"should return consistent error response format","duration":2.8659999999995307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","Security Considerations"],"fullName":"Authentication Routes - User Registration Security Considerations should not return password in any response","status":"passed","title":"should not return password in any response","duration":3.7923000000000684,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","Security Considerations"],"fullName":"Authentication Routes - User Registration Security Considerations should handle concurrent registration attempts","status":"passed","title":"should handle concurrent registration attempts","duration":6.76050000000032,"failureMessages":[],"meta":{}}],"startTime":1751858927956,"endTime":1751858928048.7605,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/authRegistration.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":4.482200000000375,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user as external ActivityPub actor","status":"passed","title":"should successfully follow a user as external ActivityPub actor","duration":3.373300000001109,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":2.9320999999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should allow follow without authentication if actorId provided","status":"passed","title":"should allow follow without authentication if actorId provided","duration":4.125500000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject follow without authentication and without actorId","status":"passed","title":"should reject follow without authentication and without actorId","duration":3.9020000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should handle authenticated user following","status":"passed","title":"should handle authenticated user following","duration":10.824399999999514,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","User Relationships Retrieval"],"fullName":"Follow Requests End-to-End Tests User Relationships Retrieval should retrieve user followers list","status":"passed","title":"should retrieve user followers list","duration":9.232200000000375,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","User Relationships Retrieval"],"fullName":"Follow Requests End-to-End Tests User Relationships Retrieval should retrieve user following list","status":"passed","title":"should retrieve user following list","duration":4.000699999998687,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Handling"],"fullName":"Follow Requests End-to-End Tests Error Handling should handle follow operation errors gracefully","status":"failed","title":"should handle follow operation errors gracefully","duration":8.199300000000221,"failureMessages":["AssertionError: expected 201 to be 500 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\follow.requests.e2e.test.ts:284:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Handling"],"fullName":"Follow Requests End-to-End Tests Error Handling should handle invalid username parameters","status":"passed","title":"should handle invalid username parameters","duration":3.5345999999990454,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Request Validation"],"fullName":"Follow Requests End-to-End Tests Request Validation should handle malformed request bodies","status":"passed","title":"should handle malformed request bodies","duration":5.2039999999997235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Request Validation"],"fullName":"Follow Requests End-to-End Tests Request Validation should handle requests with extra data","status":"passed","title":"should handle requests with extra data","duration":3.344600000000355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Performance and Concurrency"],"fullName":"Follow Requests End-to-End Tests Performance and Concurrency should handle multiple concurrent follow requests","status":"passed","title":"should handle multiple concurrent follow requests","duration":8.668799999999464,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Performance and Concurrency"],"fullName":"Follow Requests End-to-End Tests Performance and Concurrency should handle rapid follow/unfollow operations","status":"passed","title":"should handle rapid follow/unfollow operations","duration":5.42529999999897,"failureMessages":[],"meta":{}}],"startTime":1751858933383,"endTime":1751858933474.4253,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/follow.requests.e2e.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should allow uploads within the limit (first 10 uploads)","status":"passed","title":"should allow uploads within the limit (first 10 uploads)","duration":31.73699999999917,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should include rate limit headers in response","status":"passed","title":"should include rate limit headers in response","duration":4.466399999999339,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should block uploads after hitting the limit","status":"passed","title":"should block uploads after hitting the limit","duration":46.344599999998536,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should track rate limits by user ID when authenticated","status":"passed","title":"should track rate limits by user ID when authenticated","duration":7.7784000000010565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle multiple files in single request within rate limit","status":"passed","title":"should handle multiple files in single request within rate limit","duration":4.343400000001566,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle different file types within rate limit","status":"passed","title":"should handle different file types within rate limit","duration":9.50170000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle large files within rate limit","status":"passed","title":"should handle large files within rate limit","duration":3.7699999999986176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Upload Request Validation with Rate Limiting"],"fullName":"Media Upload Rate Limiting Upload Request Validation with Rate Limiting should apply rate limiting before file validation","status":"passed","title":"should apply rate limiting before file validation","duration":42.79780000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Upload Request Validation with Rate Limiting"],"fullName":"Media Upload Rate Limiting Upload Request Validation with Rate Limiting should not count failed uploads against rate limit","status":"passed","title":"should not count failed uploads against rate limit","duration":3.3989000000001397,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Non-Rate-Limited Media Operations"],"fullName":"Media Upload Rate Limiting Non-Rate-Limited Media Operations should not apply rate limiting to GET /media/info/:fileId","status":"passed","title":"should not apply rate limiting to GET /media/info/:fileId","duration":48.89300000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Non-Rate-Limited Media Operations"],"fullName":"Media Upload Rate Limiting Non-Rate-Limited Media Operations should not apply rate limiting to DELETE /media/:fileId","status":"passed","title":"should not apply rate limiting to DELETE /media/:fileId","duration":35.71669999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Rate Limit Error Response Format"],"fullName":"Media Upload Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"passed","title":"should return consistent error format when rate limited","duration":55.27269999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should handle rapid concurrent upload attempts","status":"passed","title":"should handle rapid concurrent upload attempts","duration":14.978399999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should handle uploads with metadata within rate limit","status":"passed","title":"should handle uploads with metadata within rate limit","duration":5.454299999999421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should reset rate limit after time window","status":"failed","title":"should reset rate limit after time window","duration":4.598500000000058,"failureMessages":["AssertionError: expected 3600 to be greater than 1751858933\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:411:25\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}}],"startTime":1751858932993,"endTime":1751858933325.5984,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/media.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with BASE_URL when provided","status":"passed","title":"should generate URL with BASE_URL when provided","duration":0.6486000000004424,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with default localhost when no BASE_URL","status":"passed","title":"should generate URL with default localhost when no BASE_URL","duration":0.22380000000157452,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should use custom PORT when provided","status":"passed","title":"should use custom PORT when provided","duration":0.23040000000037253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should handle special characters in filename","status":"passed","title":"should handle special characters in filename","duration":0.22559999999975844,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should generate unique filenames with UUID and timestamp","status":"passed","title":"should generate unique filenames with UUID and timestamp","duration":1.324800000000323,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should handle files without extensions","status":"passed","title":"should handle files without extensions","duration":2.1759000000001834,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should preserve file extensions correctly","status":"passed","title":"should preserve file extensions correctly","duration":0.33330000000023574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","File Filter Logic"],"fullName":"Media Route Unit Tests File Filter Logic should accept all files when using passthrough filter","status":"passed","title":"should accept all files when using passthrough filter","duration":0.3070000000006985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should generate consistent error responses","status":"passed","title":"should generate consistent error responses","duration":0.23539999999957217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should handle multer error code mapping","status":"passed","title":"should handle multer error code mapping","duration":0.2213000000010652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should reject filenames with path traversal attempts","status":"passed","title":"should reject filenames with path traversal attempts","duration":0.2209999999995489,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should accept safe filenames","status":"passed","title":"should accept safe filenames","duration":0.2655000000013388,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","File Size Validation"],"fullName":"Security Unit Tests File Size Validation should validate file sizes correctly","status":"passed","title":"should validate file sizes correctly","duration":0.20360000000073342,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Unit Tests","Memory Usage"],"fullName":"Performance Unit Tests Memory Usage should handle large file metadata efficiently","status":"passed","title":"should handle large file metadata efficiently","duration":0.31630000000041036,"failureMessages":[],"meta":{}}],"startTime":1751858933824,"endTime":1751858933844.3164,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Error Handling","File Upload Errors"],"fullName":"Media Upload Error Handling File Upload Errors should handle file size limit exceeded","status":"passed","title":"should handle file size limit exceeded","duration":2.029399999999441,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Error Handling","File Upload Errors"],"fullName":"Media Upload Error Handling File Upload Errors should handle authentication errors","status":"passed","title":"should handle authentication errors","duration":0.8885000000009313,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Error Handling","Request Mock Validation"],"fullName":"Media Upload Error Handling Request Mock Validation should properly mock request.get() method","status":"passed","title":"should properly mock request.get() method","duration":0.6105999999999767,"failureMessages":[],"meta":{}}],"startTime":1751858938023,"endTime":1751858938028.6106,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should allow post creation within the limit (first 5 posts)","status":"passed","title":"should allow post creation within the limit (first 5 posts)","duration":16.65689999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should include rate limit headers in response","status":"passed","title":"should include rate limit headers in response","duration":3.7889999999988504,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should block post creation after hitting the limit","status":"passed","title":"should block post creation after hitting the limit","duration":28.855899999998655,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should track rate limits by user ID when authenticated","status":"passed","title":"should track rate limits by user ID when authenticated","duration":6.9614999999994325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should allow different post content without affecting rate limit","status":"passed","title":"should allow different post content without affecting rate limit","duration":7.787000000000262,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to GET /posts (reading posts)","status":"passed","title":"should not apply rate limiting to GET /posts (reading posts)","duration":33.766200000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to GET /posts/:id (reading individual posts)","status":"passed","title":"should not apply rate limiting to GET /posts/:id (reading individual posts)","duration":29.88169999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to DELETE /posts/:id (deleting posts)","status":"passed","title":"should not apply rate limiting to DELETE /posts/:id (deleting posts)","duration":15.843999999999141,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Rate Limit Error Response Format"],"fullName":"Posts Routes Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"passed","title":"should return consistent error format when rate limited","duration":26.721000000001368,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Edge Cases"],"fullName":"Posts Routes Rate Limiting Edge Cases should handle posts with maximum content length","status":"passed","title":"should handle posts with maximum content length","duration":3.3636999999998807,"failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Edge Cases"],"fullName":"Posts Routes Rate Limiting Edge Cases should handle rapid consecutive post creation within limit","status":"passed","title":"should handle rapid consecutive post creation within limit","duration":7.055000000000291,"failureMessages":[],"meta":{}}],"startTime":1751858933874,"endTime":1751858934066.055,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/posts.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Coverage Summary"],"fullName":"Rate Limiting Test Suite Overview Test Coverage Summary should document all rate limiting test files","status":"passed","title":"should document all rate limiting test files","duration":2.1411000000007334,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Coverage Summary"],"fullName":"Rate Limiting Test Suite Overview Test Coverage Summary should verify rate limiting configuration matches tests","status":"passed","title":"should verify rate limiting configuration matches tests","duration":0.7181999999993423,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Scenarios Covered"],"fullName":"Rate Limiting Test Suite Overview Test Scenarios Covered should document all test scenarios","status":"passed","title":"should document all test scenarios","duration":1.2739999999994325,"failureMessages":[],"meta":{}}],"startTime":1751858937524,"endTime":1751858937533.274,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/rateLimitSuite.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Serving Security","URL Encoded Path Traversal Protection"],"fullName":"Static File Serving Security URL Encoded Path Traversal Protection should block URL encoded path traversal attempts","status":"passed","title":"should block URL encoded path traversal attempts","duration":8.766600000000835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","URL Encoded Path Traversal Protection"],"fullName":"Static File Serving Security URL Encoded Path Traversal Protection should block URL encoded backslashes","status":"passed","title":"should block URL encoded backslashes","duration":7.511699999999109,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Tilde Path Protection"],"fullName":"Static File Serving Security Tilde Path Protection should block requests with tilde (~)","status":"passed","title":"should block requests with tilde (~)","duration":4.350699999999051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Null Byte Protection"],"fullName":"Static File Serving Security Null Byte Protection should block null byte injection attempts","status":"passed","title":"should block null byte injection attempts","duration":8.352300000000469,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Legitimate File Access"],"fullName":"Static File Serving Security Legitimate File Access should allow legitimate file access","status":"passed","title":"should allow legitimate file access","duration":6.825600000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Legitimate File Access"],"fullName":"Static File Serving Security Legitimate File Access should allow files with dots in names but not path traversal","status":"passed","title":"should allow files with dots in names but not path traversal","duration":6.631999999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Content-Type-Options header","status":"passed","title":"should set X-Content-Type-Options header","duration":5.63879999999881,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Frame-Options header","status":"passed","title":"should set X-Frame-Options header","duration":6.476300000000265,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for image files","status":"passed","title":"should set inline Content-Disposition for image files","duration":23.335800000000745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for video files","status":"passed","title":"should set inline Content-Disposition for video files","duration":15.490900000000693,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set attachment Content-Disposition for other file types","status":"passed","title":"should set attachment Content-Disposition for other file types","duration":24.02310000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to dotfiles","status":"passed","title":"should deny access to dotfiles","duration":4.807199999999284,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to files starting with dot","status":"passed","title":"should deny access to files starting with dot","duration":17.40309999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":4.811499999999796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for empty filename","status":"passed","title":"should return 404 for empty filename","duration":3.4733000000014727,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Express Auto-Fixed Patterns (Informational)"],"fullName":"Static File Serving Security Express Auto-Fixed Patterns (Informational) should demonstrate Express auto-normalization of basic traversal","status":"passed","title":"should demonstrate Express auto-normalization of basic traversal","duration":6.1019000000014785,"failureMessages":[],"meta":{}}],"startTime":1751858933622,"endTime":1751858933797.1018,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should allow follow operations within the limit (first 5 requests)","status":"passed","title":"should allow follow operations within the limit (first 5 requests)","duration":13.031300000000556,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should include rate limit headers in response","status":"passed","title":"should include rate limit headers in response","duration":4.639999999999418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should block requests after hitting the limit","status":"passed","title":"should block requests after hitting the limit","duration":50.17820000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should track rate limits by user ID when authenticated","status":"passed","title":"should track rate limits by user ID when authenticated","duration":6.324099999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","DELETE /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting DELETE /users/:username/follow Rate Limiting should allow unfollow operations within the limit","status":"passed","title":"should allow unfollow operations within the limit","duration":13.632900000000518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","DELETE /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting DELETE /users/:username/follow Rate Limiting should block unfollow after hitting the limit","status":"passed","title":"should block unfollow after hitting the limit","duration":45.56209999999919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Shared Rate Limiting Between Follow and Unfollow"],"fullName":"Follow Operations Rate Limiting Shared Rate Limiting Between Follow and Unfollow should share rate limit between follow and unfollow operations","status":"passed","title":"should share rate limit between follow and unfollow operations","duration":52.097100000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Non-Rate-Limited User Operations"],"fullName":"Follow Operations Rate Limiting Non-Rate-Limited User Operations should not apply rate limiting to follower/following lists","status":"passed","title":"should not apply rate limiting to follower/following lists","duration":38.774999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Rate Limit Error Response Format"],"fullName":"Follow Operations Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"passed","title":"should return consistent error format when rate limited","duration":49.72270000000026,"failureMessages":[],"meta":{}}],"startTime":1751858934165,"endTime":1751858934448.7227,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/users.follow.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should create router with all required dependencies","status":"passed","title":"should create router with all required dependencies","duration":1.0883999999987282,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should properly inject FollowController for follow operations","status":"passed","title":"should properly inject FollowController for follow operations","duration":6.862599999998565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for POST /users/:username/follow","status":"passed","title":"should use FollowController for POST /users/:username/follow","duration":4.119900000001508,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for DELETE /users/:username/follow","status":"passed","title":"should use FollowController for DELETE /users/:username/follow","duration":4.693699999999808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/followers","status":"passed","title":"should use FollowController for GET /users/:username/followers","duration":3.902199999998629,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/following","status":"passed","title":"should use FollowController for GET /users/:username/following","duration":3.5776000000005297,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/stats","status":"passed","title":"should use FollowController for GET /users/:username/stats","duration":3.2060999999994237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for GET /users/:username","status":"passed","title":"should use UserController for GET /users/:username","duration":4.4997999999995955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for POST /users/:username/block","status":"passed","title":"should use UserController for POST /users/:username/block","duration":5.0142999999989115,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for DELETE /users/:username/block","status":"passed","title":"should use UserController for DELETE /users/:username/block","duration":4.1437000000005355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Post Operations - PostController Usage"],"fullName":"Users Router Refactoring Tests Post Operations - PostController Usage should use PostController for GET /users/:username/posts","status":"passed","title":"should use PostController for GET /users/:username/posts","duration":4.029599999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply optional auth middleware to follow operations","status":"passed","title":"should apply optional auth middleware to follow operations","duration":3.5182000000004336,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to unfollow operations","status":"passed","title":"should apply required auth middleware to unfollow operations","duration":4.58009999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to block operations","status":"passed","title":"should apply required auth middleware to block operations","duration":3.9063999999998487,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Parameter Handling"],"fullName":"Users Router Refactoring Tests Parameter Handling should pass username parameter to controllers","status":"passed","title":"should pass username parameter to controllers","duration":3.5244000000002416,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use UserController for follow operations","status":"passed","title":"should not use UserController for follow operations","duration":3.1185999999997875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use FollowController for user management operations","status":"passed","title":"should not use FollowController for user management operations","duration":4.168099999998958,"failureMessages":[],"meta":{}}],"startTime":1751858933512,"endTime":1751858933598.1682,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/users.router.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with default expiration","status":"passed","title":"should create AuthService with default expiration","duration":0.6493000000000393,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with custom expiration","status":"passed","title":"should create AuthService with custom expiration","duration":0.3007000000006883,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should hash a password successfully","status":"passed","title":"should hash a password successfully","duration":224.96810000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should produce different hashes for the same password","status":"passed","title":"should produce different hashes for the same password","duration":449.8598000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle different password lengths","status":"passed","title":"should handle different password lengths","duration":449.40840000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle passwords with special characters","status":"passed","title":"should handle passwords with special characters","duration":228.52750000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle unicode characters in passwords","status":"passed","title":"should handle unicode characters in passwords","duration":228.95859999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":0.5626000000002023,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for undefined password","status":"passed","title":"should throw error for undefined password","duration":0.48179999999956635,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should verify correct password","status":"passed","title":"should verify correct password","duration":451.5684000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject incorrect password","status":"passed","title":"should reject incorrect password","duration":449.90599999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject password with different case","status":"passed","title":"should reject password with different case","duration":448.60130000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle empty string password verification","status":"passed","title":"should handle empty string password verification","duration":447.1918999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle special characters in verification","status":"passed","title":"should handle special characters in verification","duration":452.33700000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for invalid hash format","status":"passed","title":"should throw error for invalid hash format","duration":0.48220000000037544,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null hash","status":"passed","title":"should throw error for null hash","duration":0.5016999999998006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":225.83790000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate a valid JWT token","status":"passed","title":"should generate a valid JWT token","duration":3.246900000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate different tokens for different users","status":"passed","title":"should generate different tokens for different users","duration":1.785600000001068,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should include user data in token payload","status":"passed","title":"should include user data in token payload","duration":2.6221000000005006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":2.262800000000425,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.5350999999991473,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for empty token","status":"passed","title":"should throw error for empty token","duration":0.31859999999869615,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for null token","status":"passed","title":"should throw error for null token","duration":0.2712999999985186,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should extract token from Bearer header","status":"passed","title":"should extract token from Bearer header","duration":0.22910000000047148,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for invalid header format","status":"passed","title":"should throw error for invalid header format","duration":0.2639999999992142,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for undefined header","status":"passed","title":"should throw error for undefined header","duration":0.2779000000009546,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for empty header","status":"passed","title":"should throw error for empty header","duration":0.2540000000008149,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should validate correct registration data","status":"passed","title":"should validate correct registration data","duration":0.48870000000169966,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.5018999999992957,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject short password","status":"passed","title":"should reject short password","duration":1.560699999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should validate correct login data","status":"passed","title":"should validate correct login data","duration":0.3263999999999214,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.4022000000004482,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject missing password","status":"passed","title":"should reject missing password","duration":0.5159999999996217,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full password hash and verify cycle","status":"passed","title":"should complete full password hash and verify cycle","duration":674.3558999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full token generation and verification cycle","status":"passed","title":"should complete full token generation and verification cycle","duration":1.799700000001394,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should work with different JWT expiration times","status":"passed","title":"should work with different JWT expiration times","duration":4.99330000000009,"failureMessages":[],"meta":{}}],"startTime":1751858928151,"endTime":1751858932930.9934,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/services/__tests__/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":5.773799999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.0235999999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.0635000000002037,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":0.4963000000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":0.5197000000000571,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":0.5941000000000258,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":0.6679999999998927,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.685799999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":0.8290000000001783,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":0.4356999999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.35789999999997235,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.661200000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":0.5844999999999345,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.3191999999999098,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":0.45489999999995234,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.322800000000143,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.485700000000179,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.33950000000004366,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.3243999999999687,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":1.386700000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":0.27350000000001273,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":0.26530000000002474,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.4152000000001408,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":0.3079999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":0.2976000000001022,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":0.26529999999979736,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":0.26650000000017826,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":0.37439999999992324,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":0.26939999999990505,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.2677000000001044,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.25860000000011496,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.363399999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":0.42000000000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":0.31760000000008404,"failureMessages":[],"meta":{}}],"startTime":1751858925277,"endTime":1751858925300.42,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/services/__tests__/FollowService.test.ts"}]}
