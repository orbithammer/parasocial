[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
{"numTotalTestSuites":156,"numPassedTestSuites":121,"numFailedTestSuites":35,"numPendingTestSuites":0,"numTotalTests":285,"numPassedTests":276,"numFailedTests":9,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751876606653,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":2.097986000000219,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":1.642381000000114,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":1.2866189999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":1.3528200000000652,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":1.1408790000000408,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":1.177005999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":1.2351519999997436,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":1.2837900000004083,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":1.5087429999998676,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":1.3745380000000296,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":1.3537959999998748,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":1.3808109999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":1.310631999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":1.2460049999999683,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":1.483639999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":1.2541959999998653,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":1.8698389999999563,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":1.3950770000001285,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":1.2908700000002682,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":1.3438599999999497,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":1.585472000000209,"failureMessages":[],"meta":{}}],"startTime":1751876608600,"endTime":1751876608630.5854,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":2.1506899999999405,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":1.7884420000000318,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":3.358643000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":1.2356629999999313,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":2.529403000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":1.1912960000004205,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":1.140364999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":1.0657209999999395,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":1.518076000000292,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":1.2637909999998556,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":1.2775510000001304,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":1.314585999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":1.3210520000002361,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.3717119999996612,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":6.7926870000001145,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":1.0341309999998884,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":0.8232500000003711,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":0.876643999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.806720999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.76710200000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.735461000000214,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.7346729999999297,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":0.7366830000000846,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":1.650684000000183,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":1.0726709999999002,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":0.9741859999999178,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":0.9576269999997749,"failureMessages":[],"meta":{}}],"startTime":1751876608332,"endTime":1751876608373.9575,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/FollowController.business.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/controllers/FollowController' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/FollowController.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/FollowController.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/controllers/PostController.js' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/PostController.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/PostController.test.ts"},{"assertionResults":[{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create user report successfully","status":"passed","title":"should create user report successfully","duration":2.764868999999635,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create post report successfully","status":"passed","title":"should create post report successfully","duration":2.0058030000000144,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create anonymous report (no auth)","status":"passed","title":"should create anonymous report (no auth)","duration":1.9648160000001553,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":1.4916950000001634,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with both user and post ID","status":"passed","title":"should reject report with both user and post ID","duration":1.5847850000000108,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent user","status":"passed","title":"should reject report of non-existent user","duration":1.6496969999998328,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent post","status":"passed","title":"should reject report of non-existent post","duration":1.4764620000000832,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting user","status":"passed","title":"should reject self-reporting user","duration":1.3596310000002632,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting post","status":"passed","title":"should reject self-reporting post","duration":1.301499000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Error Handling"],"fullName":"ReportController createReport Error Handling should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":2.420643000000382,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should return paginated reports","status":"passed","title":"should return paginated reports","duration":1.7618230000002768,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should handle filter parameters","status":"passed","title":"should handle filter parameters","duration":1.5988830000001144,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should update report status successfully","status":"passed","title":"should update report status successfully","duration":1.8731229999998504,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should reject invalid status","status":"passed","title":"should reject invalid status","duration":1.4760440000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReportById"],"fullName":"ReportController getReportById should return specific report","status":"passed","title":"should return specific report","duration":1.5139060000001336,"failureMessages":[],"meta":{}}],"startTime":1751876608659,"endTime":1751876608685.514,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/controllers/__tests__/ReportController.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/auth.rateLimit.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/auth.rateLimit.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/authLogin.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/authLogin.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/authRegistration.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/authRegistration.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/follow.requests.e2e.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/follow.requests.e2e.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/media.rateLimit.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/media.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with BASE_URL when provided","status":"passed","title":"should generate URL with BASE_URL when provided","duration":1.8328740000001744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with default localhost when no BASE_URL","status":"passed","title":"should generate URL with default localhost when no BASE_URL","duration":1.4661949999999706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should use custom PORT when provided","status":"passed","title":"should use custom PORT when provided","duration":1.05170999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should handle special characters in filename","status":"passed","title":"should handle special characters in filename","duration":0.9385509999997339,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should generate unique filenames with UUID and timestamp","status":"passed","title":"should generate unique filenames with UUID and timestamp","duration":1.943714,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should handle files without extensions","status":"passed","title":"should handle files without extensions","duration":1.720393999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should preserve file extensions correctly","status":"passed","title":"should preserve file extensions correctly","duration":1.1347579999996924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","File Filter Logic"],"fullName":"Media Route Unit Tests File Filter Logic should accept all files when using passthrough filter","status":"passed","title":"should accept all files when using passthrough filter","duration":1.2447700000002442,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should generate consistent error responses","status":"passed","title":"should generate consistent error responses","duration":1.0991690000000744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should handle multer error code mapping","status":"passed","title":"should handle multer error code mapping","duration":1.062565999999606,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should reject filenames with path traversal attempts","status":"passed","title":"should reject filenames with path traversal attempts","duration":1.0317240000003949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should accept safe filenames","status":"passed","title":"should accept safe filenames","duration":1.0964460000000145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","File Size Validation"],"fullName":"Security Unit Tests File Size Validation should validate file sizes correctly","status":"passed","title":"should validate file sizes correctly","duration":1.0032059999998637,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Unit Tests","Memory Usage"],"fullName":"Performance Unit Tests Memory Usage should handle large file metadata efficiently","status":"passed","title":"should handle large file metadata efficiently","duration":1.2242520000004333,"failureMessages":[],"meta":{}}],"startTime":1751876608720,"endTime":1751876608738.2244,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'multer' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/mediaUpload.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/posts.rateLimit.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/posts.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Coverage Summary"],"fullName":"Rate Limiting Test Suite Overview Test Coverage Summary should document all rate limiting test files","status":"passed","title":"should document all rate limiting test files","duration":2.54755299999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Coverage Summary"],"fullName":"Rate Limiting Test Suite Overview Test Coverage Summary should verify rate limiting configuration matches tests","status":"passed","title":"should verify rate limiting configuration matches tests","duration":1.342815999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Test Suite Overview","Test Scenarios Covered"],"fullName":"Rate Limiting Test Suite Overview Test Scenarios Covered should document all test scenarios","status":"passed","title":"should document all test scenarios","duration":1.4590339999999742,"failureMessages":[],"meta":{}}],"startTime":1751876608884,"endTime":1751876608889.459,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/rateLimitSuite.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/users.follow.rateLimit.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/users.follow.rateLimit.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/users.router.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/routes/__tests__/users.router.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should create follow relationship successfully","status":"failed","title":"should create follow relationship successfully","duration":6.335594000000128,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/Follow.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent duplicate follow relationships","status":"failed","title":"should prevent duplicate follow relationships","duration":5.295528000000104,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/Follow.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent self-following","status":"failed","title":"should prevent self-following","duration":6.173958999999968,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/Follow.integration.test.ts:20:5"],"meta":{}}],"startTime":1751876607243,"endTime":1751876607260.174,"status":"failed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/Follow.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":2.23164799999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":1.7744770000003882,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":2.0274199999998928,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":1.9131090000000768,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":1.9106659999997646,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":1.599185000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":1.9003069999998843,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":1.5524350000000595,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":1.6891789999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.5940510000000359,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":1.6003910000003998,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":1.273044999999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":1.173076999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":1.908795999999711,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":2.0122849999997925,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":1.3894040000000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":1.5192409999999654,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":1.7600840000000062,"failureMessages":[],"meta":{}}],"startTime":1751876608785,"endTime":1751876608815.76,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/FollowRepository.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/repositories/PostRepository.js' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.create.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.create.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/repositories/PostRepository' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should create post associated with existing user","status":"failed","title":"should create post associated with existing user","duration":35.61960699999986,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should enforce foreign key constraint for invalid user","status":"failed","title":"should enforce foreign key constraint for invalid user","duration":5.218611999999894,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should cascade delete posts when user is deleted","status":"failed","title":"should cascade delete posts when user is deleted","duration":4.776374999999916,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create published post with proper user attribution","status":"failed","title":"should create published post with proper user attribution","duration":4.9176239999999325,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create draft post for user","status":"failed","title":"should create draft post for user","duration":6.558460000000196,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create scheduled post with user relationship","status":"failed","title":"should create scheduled post with user relationship","duration":4.589170000000195,"failureMessages":["PrismaClientInitializationError: error: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:10\n   | \n 9 |   provider = \"sqlite\"\n10 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at r (/Users/brockpenner/Documents/GitHub/parasocial/backend/node_modules/@prisma/client/runtime/library.js:112:2565)\n    at /Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts:20:5"],"meta":{}}],"startTime":1751876607141,"endTime":1751876607202.589,"status":"failed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/repositories/__tests__/PostUser.integration.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'bcrypt' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/services/AuthService.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/services/__tests__/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":2.3634900000001835,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.3665030000001934,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.120245000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":1.0506270000000768,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":1.0784190000003946,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":1.0468140000002677,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":1.1631360000001223,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":1.317348999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":1.3487089999998716,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":1.0924190000000635,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.9864529999999831,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":1.2591750000001412,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.3520309999998972,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":1.069021000000248,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":1.2038360000001376,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.9837759999995797,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.1063939999999093,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.9516919999996389,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.9082100000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":1.026433999999881,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":1.031481999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":1.0825079999999616,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":1.9793909999998505,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":1.7769600000001446,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":2.0598379999996723,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":4.548888000000261,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":1.5871229999997922,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":1.3912860000000364,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":1.0278550000002724,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.9088889999998173,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.909277999999631,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":1.029617000000144,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":1.5397240000002057,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":1.56292300000041,"failureMessages":[],"meta":{}}],"startTime":1751876608522,"endTime":1751876608568.563,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/services/__tests__/FollowService.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":0.8481860000001689,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.5488980000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.5036750000003849,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.5495270000001256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.5764359999998305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.4636510000000271,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.4403459999998631,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.44450400000005175,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.5568119999998089,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":7.018397000000277,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.5818279999998595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.44552500000008877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.49770300000000134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.4342490000003636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.39390300000013667,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.4691699999998491,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.35218200000008437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.7776230000004034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.4642579999999725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.48850899999979447,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.6469970000002832,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.4485760000002301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.44352000000026237,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.35128900000017893,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.31473800000003394,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.296530999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":0.47328399999969406,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.3467000000000553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.34995000000026266,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":1.3215219999997316,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.4925180000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.4587459999997918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.38594100000000253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.6235899999996946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.36734500000011394,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.3364499999997861,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.3116829999999027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.448804999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.5658350000003338,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.3300370000001749,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.31513700000004974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.5069619999999304,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.3777979999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.3741749999999229,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.4604949999998098,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.5482369999999719,"failureMessages":[],"meta":{}}],"startTime":1751876608224,"endTime":1751876608253.5483,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.businessLogic.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/models/Post' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.stateTransitions.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.stateTransitions.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/models/Post' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.validation.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/Post.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with all provided data","status":"passed","title":"should create user with all provided data","duration":1.9324750000000677,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with minimal required data","status":"passed","title":"should create user with minimal required data","duration":1.5546009999998205,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle displayName defaulting to username when not provided","status":"passed","title":"should handle displayName defaulting to username when not provided","duration":1.0859999999997854,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should use provided displayName over username when both exist","status":"passed","title":"should use provided displayName over username when both exist","duration":0.9917780000000675,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle empty string values properly","status":"passed","title":"should handle empty string values properly","duration":1.004577000000154,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle null values properly","status":"passed","title":"should handle null values properly","duration":1.0412239999996018,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle undefined values properly","status":"passed","title":"should handle undefined values properly","duration":1.0271130000000994,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile data excluding sensitive information","status":"passed","title":"should return public profile data excluding sensitive information","duration":2.177966000000197,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should include follower and post counts when available","status":"passed","title":"should include follower and post counts when available","duration":1.1848479999998744,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should not include counts when not available","status":"passed","title":"should not include counts when not available","duration":1.185739999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile data including sensitive information","status":"passed","title":"should return private profile data including sensitive information","duration":1.7127889999997024,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should provide default dates when not available","status":"passed","title":"should provide default dates when not available","duration":1.6226050000000214,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateRegistration static method","status":"passed","title":"should have validateRegistration static method","duration":1.3801720000001296,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateLogin static method","status":"passed","title":"should have validateLogin static method","duration":1.2759569999998348,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateProfileUpdate static method","status":"passed","title":"should have validateProfileUpdate static method","duration":1.2503260000003138,"failureMessages":[],"meta":{}}],"startTime":1751876608834,"endTime":1751876608854.2502,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.class.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/models/User.js' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.login.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.login.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/models/User.js' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.profileUpdate.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.profileUpdate.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate correct registration data with all fields","status":"passed","title":"should validate correct registration data with all fields","duration":2.2148929999998472,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate registration data without optional displayName","status":"passed","title":"should validate registration data without optional displayName","duration":1.9239079999997557,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept username with underscores and numbers","status":"passed","title":"should accept username with underscores and numbers","duration":0.9629919999997583,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum length username (3 characters)","status":"passed","title":"should accept minimum length username (3 characters)","duration":0.8072339999998803,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept maximum length username (30 characters)","status":"passed","title":"should accept maximum length username (30 characters)","duration":0.6595380000003388,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept strong passwords with mixed case and numbers","status":"passed","title":"should accept strong passwords with mixed case and numbers","duration":0.6065800000001218,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept passwords with special characters","status":"passed","title":"should accept passwords with special characters","duration":0.7006500000002234,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":1.2428079999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.7546349999997801,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.7339900000001762,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.6740740000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username shorter than 3 characters","status":"passed","title":"should reject username shorter than 3 characters","duration":0.9857949999995981,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username longer than 30 characters","status":"passed","title":"should reject username longer than 30 characters","duration":0.8748640000003434,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with special characters","status":"passed","title":"should reject username with special characters","duration":0.8262620000000425,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with spaces","status":"passed","title":"should reject username with spaces","duration":5.2345070000001215,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with hyphens","status":"passed","title":"should reject username with hyphens","duration":3.574992999999722,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject empty username","status":"passed","title":"should reject empty username","duration":0.9679099999998471,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password shorter than 8 characters","status":"passed","title":"should reject password shorter than 8 characters","duration":0.9116509999998925,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without uppercase letter","status":"passed","title":"should reject password without uppercase letter","duration":0.7208630000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without lowercase letter","status":"passed","title":"should reject password without lowercase letter","duration":0.6700420000001941,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without number","status":"passed","title":"should reject password without number","duration":0.6316000000001623,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.6253740000001926,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.6708290000001398,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.6801479999999174,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.6078219999999419,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing email","status":"passed","title":"should reject registration data missing email","duration":1.041154000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing username","status":"passed","title":"should reject registration data missing username","duration":0.7125920000003134,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing password","status":"passed","title":"should reject registration data missing password","duration":0.6774780000000646,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Multiple Validation Errors"],"fullName":"User Model - Registration Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.2910750000000917,"failureMessages":[],"meta":{}}],"startTime":1751876608452,"endTime":1751876608486.291,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/models/__tests__/User.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":5.321524999999838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":1.4939039999999295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":0.813101999999617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.7055519999998978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":1.5987370000002556,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.9136590000002798,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.9459919999999329,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.576031999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":0.9631639999997788,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":0.9017399999997906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.7363329999998314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.7556899999999587,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":0.8277800000000752,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":1.1245640000001913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":0.9872110000001157,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":0.8381979999999203,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":0.6985789999998815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.760689000000184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.6692379999999503,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.7881210000000465,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":0.8418639999999868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.7090430000002925,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.7233830000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":0.7178499999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.7571759999996175,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.6281009999997877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":0.8011209999999664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":0.6845350000003236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":6.56928599999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":0.7234509999998409,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":1.0353209999998398,"failureMessages":[],"meta":{}}],"startTime":1751876608131,"endTime":1751876608168.0354,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/authMiddleware.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/middleware/followValidationMiddleware' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/followValidationMiddleware.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/followValidationMiddleware.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/globalError.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/globalError.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should pass valid image files","status":"passed","title":"should pass valid image files","duration":3.493938000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject files with invalid MIME types","status":"passed","title":"should reject files with invalid MIME types","duration":1.428295000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject files that are too large","status":"passed","title":"should reject files that are too large","duration":1.1743380000002617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Upload Validation"],"fullName":"Media Moderation Validation Middleware File Upload Validation should reject requests with no file","status":"passed","title":"should reject requests with no file","duration":1.0201059999999416,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept JPG files","status":"passed","title":"should accept JPG files","duration":1.0099249999998392,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept PNG files","status":"passed","title":"should accept PNG files","duration":1.0443089999998847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept GIF files","status":"passed","title":"should accept GIF files","duration":0.9746039999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept WEBP files","status":"passed","title":"should accept WEBP files","duration":1.0222020000001066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept MP4 video files","status":"passed","title":"should accept MP4 video files","duration":1.6624839999999494,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept WEBM video files","status":"passed","title":"should accept WEBM video files","duration":1.3503240000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Supported File Types"],"fullName":"Media Moderation Validation Middleware Supported File Types should accept MOV video files","status":"passed","title":"should accept MOV video files","duration":1.7917459999998755,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should accept images at the size limit","status":"passed","title":"should accept images at the size limit","duration":1.5069260000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should reject images just over the size limit","status":"passed","title":"should reject images just over the size limit","duration":1.6051330000000235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should accept videos at the size limit","status":"passed","title":"should accept videos at the size limit","duration":1.4162509999996473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","File Size Limits"],"fullName":"Media Moderation Validation Middleware File Size Limits should reject videos just over the size limit","status":"passed","title":"should reject videos just over the size limit","duration":1.3801949999997305,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Edge Cases"],"fullName":"Media Moderation Validation Middleware Edge Cases should handle files with unusual but valid names","status":"passed","title":"should handle files with unusual but valid names","duration":1.0701650000000882,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Edge Cases"],"fullName":"Media Moderation Validation Middleware Edge Cases should handle empty files","status":"passed","title":"should handle empty files","duration":1.0046260000003713,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Edge Cases"],"fullName":"Media Moderation Validation Middleware Edge Cases should handle files with uppercase extensions","status":"passed","title":"should handle files with uppercase extensions","duration":0.9789740000001075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Moderation Validation Middleware","Alternative JPEG MIME Type Support"],"fullName":"Media Moderation Validation Middleware Alternative JPEG MIME Type Support should accept image/jpg MIME type","status":"passed","title":"should accept image/jpg MIME type","duration":1.250528999999915,"failureMessages":[],"meta":{}}],"startTime":1751876608400,"endTime":1751876608426.2505,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/pathTraversalFix.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/pathTraversalFix.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/middleware/postValidationMiddleware' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/postValidationMiddleware.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/postValidationMiddleware.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rateLimitMiddleware.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rateLimitMiddleware.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rateLimitUserVsIP.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rateLimitUserVsIP.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rawUrlTest.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/rawUrlTest.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find package 'supertest' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/realisticSecurityTests.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/realisticSecurityTests.test.ts"},{"assertionResults":[],"startTime":1751876606653,"endTime":1751876606653,"status":"failed","message":"Cannot find module '../../src/middleware/securityValidationMiddleware' imported from '/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/securityValidationMiddleware.test.ts'","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Security Middleware","URL Encoded Path Traversal Protection"],"fullName":"Static File Security Middleware URL Encoded Path Traversal Protection should block URL encoded path traversal","status":"passed","title":"should block URL encoded path traversal","duration":1.963792999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","URL Encoded Path Traversal Protection"],"fullName":"Static File Security Middleware URL Encoded Path Traversal Protection should block URL encoded backslashes","status":"passed","title":"should block URL encoded backslashes","duration":1.5253740000002836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Tilde Path Protection"],"fullName":"Static File Security Middleware Tilde Path Protection should block tilde-based path traversal","status":"passed","title":"should block tilde-based path traversal","duration":1.2600289999995766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should allow legitimate file names","status":"passed","title":"should allow legitimate file names","duration":1.5031989999997677,"failureMessages":[],"meta":{}}],"startTime":1751876608865,"endTime":1751876608871.5032,"status":"passed","message":"","name":"/Users/brockpenner/Documents/GitHub/parasocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"}]}
