[33mThe CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.[39m
{"numTotalTestSuites":338,"numPassedTestSuites":322,"numFailedTestSuites":16,"numPendingTestSuites":0,"numTotalTests":746,"numPassedTests":736,"numFailedTests":10,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751631757826,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Path Traversal Detection Fix - BULLETPROOF VERSION","Basic Path Traversal Detection"],"fullName":"Path Traversal Detection Fix - BULLETPROOF VERSION Basic Path Traversal Detection should block simple double dots pattern","status":"failed","title":"should block simple double dots pattern","duration":33.17020000000002,"failureMessages":["Error: expected 400 \"Bad Request\", got 200 \"OK\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\pathTraversalFix.test.ts:46:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}}],"startTime":1751631766673,"endTime":1751631766706.1702,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/pathTraversalFix.test.ts"},{"assertionResults":[{"ancestorTitles":["Raw URL Security Test"],"fullName":"Raw URL Security Test should show what URLs Express actually receives","status":"passed","title":"should show what URLs Express actually receives","duration":57.20449999999994,"failureMessages":[],"meta":{}}],"startTime":1751631766282,"endTime":1751631766339.2046,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/rawUrlTest.test.ts"},{"assertionResults":[{"ancestorTitles":["Realistic Security Tests - Actual Threats","URL Encoded Path Traversal (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats URL Encoded Path Traversal (Real Threat) should block URL encoded double dots","status":"passed","title":"should block URL encoded double dots","duration":35.61259999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","URL Encoded Path Traversal (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats URL Encoded Path Traversal (Real Threat) should block mixed URL encoding attacks","status":"passed","title":"should block mixed URL encoding attacks","duration":18.623800000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should block tilde home directory access","status":"passed","title":"should block tilde home directory access","duration":8.23599999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should block various tilde patterns","status":"passed","title":"should block various tilde patterns","duration":12.067800000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Tilde Path Attacks (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Tilde Path Attacks (Real Threat) should show Express normalization behavior for complex tilde patterns","status":"passed","title":"should show Express normalization behavior for complex tilde patterns","duration":5.913199999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Dotfile Protection (Real Threat)"],"fullName":"Realistic Security Tests - Actual Threats Dotfile Protection (Real Threat) should block access to dotfiles","status":"passed","title":"should block access to dotfiles","duration":8.77660000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Legitimate Access (Should Work)"],"fullName":"Realistic Security Tests - Actual Threats Legitimate Access (Should Work) should allow normal file access","status":"passed","title":"should allow normal file access","duration":6.063600000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Legitimate Access (Should Work)"],"fullName":"Realistic Security Tests - Actual Threats Legitimate Access (Should Work) should allow files with dots in names","status":"passed","title":"should allow files with dots in names","duration":4.642699999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Realistic Security Tests - Actual Threats","Express Auto-Fixed Attacks (Informational)"],"fullName":"Realistic Security Tests - Actual Threats Express Auto-Fixed Attacks (Informational) should show that basic path traversal is auto-fixed by Express","status":"passed","title":"should show that basic path traversal is auto-fixed by Express","duration":4.068399999999997,"failureMessages":[],"meta":{}}],"startTime":1751631765984,"endTime":1751631766089.0684,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/realisticSecurityTests.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block basic path traversal with double dots","status":"failed","title":"should block basic path traversal with double dots","duration":38.9393,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:94:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block URL encoded path traversal","status":"passed","title":"should block URL encoded path traversal","duration":24.176799999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block tilde-based path traversal","status":"passed","title":"should block tilde-based path traversal","duration":5.846599999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Path Traversal Protection"],"fullName":"Static File Security Middleware Path Traversal Protection should block Windows-style path traversal","status":"failed","title":"should block Windows-style path traversal","duration":5.3344999999999345,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:138:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to dotfiles","status":"passed","title":"should block access to dotfiles","duration":8.792699999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Dotfiles Protection"],"fullName":"Static File Security Middleware Dotfiles Protection should block access to various dotfile types","status":"passed","title":"should block access to various dotfile types","duration":28.341800000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should serve legitimate files correctly","status":"failed","title":"should serve legitimate files correctly","duration":12.906200000000013,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:188:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should allow files with dots in names","status":"passed","title":"should allow files with dots in names","duration":7.256599999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Legitimate File Access"],"fullName":"Static File Security Middleware Legitimate File Access should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":6.018599999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set appropriate Content-Disposition for different file types","status":"passed","title":"should set appropriate Content-Disposition for different file types","duration":35.244500000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Security Middleware","Security Headers"],"fullName":"Static File Security Middleware Security Headers should set all required security headers","status":"failed","title":"should set all required security headers","duration":8.644000000000005,"failureMessages":["AssertionError: expected undefined to be 'default-src \\'none\\'; img-src \\'self\\…' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\middleware\\__tests__\\staticFileSecurityMiddleware.test.ts:262:59\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}}],"startTime":1751631764252,"endTime":1751631764433.644,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with BASE_URL when provided","status":"passed","title":"should generate URL with BASE_URL when provided","duration":2.0156000000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should generate URL with default localhost when no BASE_URL","status":"passed","title":"should generate URL with default localhost when no BASE_URL","duration":0.30059999999997444,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should use custom PORT when provided","status":"passed","title":"should use custom PORT when provided","duration":0.24969999999996162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","generateFileUrl()"],"fullName":"Media Route Unit Tests generateFileUrl() should handle special characters in filename","status":"passed","title":"should handle special characters in filename","duration":0.24850000000003547,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should generate unique filenames with UUID and timestamp","status":"passed","title":"should generate unique filenames with UUID and timestamp","duration":1.072499999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should handle files without extensions","status":"passed","title":"should handle files without extensions","duration":0.33199999999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Filename Generation Logic"],"fullName":"Media Route Unit Tests Filename Generation Logic should preserve file extensions correctly","status":"passed","title":"should preserve file extensions correctly","duration":0.3797000000000139,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","File Filter Logic"],"fullName":"Media Route Unit Tests File Filter Logic should accept all files when using passthrough filter","status":"passed","title":"should accept all files when using passthrough filter","duration":1.359199999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should generate consistent error responses","status":"passed","title":"should generate consistent error responses","duration":0.5065000000000168,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Route Unit Tests","Error Response Generation"],"fullName":"Media Route Unit Tests Error Response Generation should handle multer error code mapping","status":"passed","title":"should handle multer error code mapping","duration":0.7808999999999742,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should reject filenames with path traversal attempts","status":"passed","title":"should reject filenames with path traversal attempts","duration":0.4082000000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","Path Traversal Prevention"],"fullName":"Security Unit Tests Path Traversal Prevention should accept safe filenames","status":"passed","title":"should accept safe filenames","duration":0.36889999999999645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Unit Tests","File Size Validation"],"fullName":"Security Unit Tests File Size Validation should validate file sizes correctly","status":"passed","title":"should validate file sizes correctly","duration":1.122000000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Unit Tests","Memory Usage"],"fullName":"Performance Unit Tests Memory Usage should handle large file metadata efficiently","status":"passed","title":"should handle large file metadata efficiently","duration":1.4162000000000035,"failureMessages":[],"meta":{}}],"startTime":1751631763491,"endTime":1751631763502.4163,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload valid image file successfully","status":"passed","title":"should upload valid image file successfully","duration":44.89879999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should upload file without alt text","status":"passed","title":"should upload file without alt text","duration":11.895900000000097,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Successful File Upload"],"fullName":"Media Upload Route Successful File Upload should handle all supported file types","status":"passed","title":"should handle all supported file types","duration":28.43640000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject requests with no file","status":"passed","title":"should reject requests with no file","duration":5.566500000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject unsupported file types","status":"passed","title":"should reject unsupported file types","duration":7.430100000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should reject files exceeding size limit","status":"passed","title":"should reject files exceeding size limit","duration":103.13959999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","File Validation"],"fullName":"Media Upload Route File Validation should validate alt text length","status":"passed","title":"should validate alt text length","duration":10.6096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should create uploads directory if it does not exist","status":"passed","title":"should create uploads directory if it does not exist","duration":11.631899999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Directory Management"],"fullName":"Media Upload Route Directory Management should handle directory creation failure","status":"passed","title":"should handle directory creation failure","duration":6.739599999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Error Recovery"],"fullName":"Media Upload Route Error Recovery should clean up uploaded file if processing fails","status":"passed","title":"should clean up uploaded file if processing fails","duration":11.015199999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files just under the size limit","status":"passed","title":"should handle files just under the size limit","duration":51.63589999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should reject files at exactly the size limit","status":"passed","title":"should reject files at exactly the size limit","duration":52.501300000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle files with no extension","status":"passed","title":"should handle files with no extension","duration":5.070899999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Route","Edge Cases"],"fullName":"Media Upload Route Edge Cases should handle very small files","status":"passed","title":"should handle very small files","duration":4.637299999999982,"failureMessages":[],"meta":{}}],"startTime":1751631762877,"endTime":1751631763233.6372,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with double dots (..)","status":"failed","title":"should block requests with double dots (..)","duration":30.160600000000045,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:105:10\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block requests with tilde (~)","status":"passed","title":"should block requests with tilde (~)","duration":11.09190000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should block complex path traversal attempts","status":"failed","title":"should block complex path traversal attempts","duration":4.638000000000034,"failureMessages":["Error: expected 400 \"Bad Request\", got 404 \"Not Found\"\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:147:12\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n----\n    at Test._assertStatus (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:267:14)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:323:13\n    at Test._assertFunction (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:300:13)\n    at Test.assert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:179:23)\n    at Server.localAssert (C:\\Users\\Et Al\\Documents\\GitHub\\parasocial\\backend\\node_modules\\supertest\\lib\\test.js:135:14)\n    at Object.onceWrapper (node:events:632:28)\n    at Server.emit (node:events:518:28)\n    at emitCloseNT (node:net:2416:8)\n    at processTicksAndRejections (node:internal/process/task_queues:89:21)"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow legitimate file access","status":"failed","title":"should allow legitimate file access","duration":17.11710000000005,"failureMessages":["AssertionError: expected undefined to be 'fake image content' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:163:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Path Traversal Protection"],"fullName":"Static File Serving Security Path Traversal Protection should allow files with dots in names but not path traversal","status":"passed","title":"should allow files with dots in names but not path traversal","duration":9.6246000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Content-Type-Options header","status":"passed","title":"should set X-Content-Type-Options header","duration":8.591600000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set X-Frame-Options header","status":"passed","title":"should set X-Frame-Options header","duration":8.236400000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for image files","status":"passed","title":"should set inline Content-Disposition for image files","duration":38.55459999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set inline Content-Disposition for video files","status":"failed","title":"should set inline Content-Disposition for video files","duration":21.850599999999986,"failureMessages":["AssertionError: expected 'attachment' to be 'inline' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\staticFileServingSecurity.test.ts:241:57\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Static File Serving Security","Security Headers"],"fullName":"Static File Serving Security Security Headers should set attachment Content-Disposition for other file types","status":"passed","title":"should set attachment Content-Disposition for other file types","duration":31.92730000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to dotfiles","status":"passed","title":"should deny access to dotfiles","duration":6.607999999999947,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","Dotfiles Protection"],"fullName":"Static File Serving Security Dotfiles Protection should deny access to files starting with dot","status":"passed","title":"should deny access to files starting with dot","duration":21.731899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for non-existent files","status":"passed","title":"should return 404 for non-existent files","duration":6.769199999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Static File Serving Security","File Not Found Handling"],"fullName":"Static File Serving Security File Not Found Handling should return 404 for empty filename","status":"passed","title":"should return 404 for empty filename","duration":5.525499999999965,"failureMessages":[],"meta":{}}],"startTime":1751631764094,"endTime":1751631764317.5254,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":5.507200000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":2.348100000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":0.9363999999999919,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":0.8826999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":0.8951999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":1.0008000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":0.7951999999999657,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":1.3578999999999724,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":1.6772000000000276,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":1.1245000000000118,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":0.5921999999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":0.662399999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":0.8066000000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":0.6741999999999848,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":0.7807999999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":0.5641999999999712,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":1.1621999999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":0.705600000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.5443000000000211,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":0.7747999999999706,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":1.7296999999999798,"failureMessages":[],"meta":{}}],"startTime":1751631759551,"endTime":1751631759577.7297,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":8.980200000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":2.2333999999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":1.3899999999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":1.2177000000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":2.4535000000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":1.060699999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":1.0486000000000217,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":1.0202999999999633,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":2.0860000000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":1.281000000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":1.4245000000000232,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":1.5206000000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":1.098199999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":1.1451999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":0.9078999999999837,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":0.9774999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":0.6782000000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":0.5228999999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.5230999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.4164000000000101,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.4093000000000302,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.449799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":0.41770000000002483,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":2.287999999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":1.553200000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":1.3786999999999807,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":1.11749999999995,"failureMessages":[],"meta":{}}],"startTime":1751631759101,"endTime":1751631759144.1174,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.business.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully follow user with authenticated request","status":"passed","title":"should successfully follow user with authenticated request","duration":3.9286999999999352,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully handle ActivityPub external follow","status":"passed","title":"should successfully handle ActivityPub external follow","duration":0.6059000000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when username is missing","status":"passed","title":"should reject when username is missing","duration":0.9643999999999551,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when user to follow not found","status":"passed","title":"should reject when user to follow not found","duration":0.6118999999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when no follower identity provided","status":"passed","title":"should reject when no follower identity provided","duration":0.4111000000000331,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle service errors correctly","status":"passed","title":"should handle service errors correctly","duration":0.44029999999997926,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle unexpected exceptions","status":"passed","title":"should handle unexpected exceptions","duration":0.46879999999998745,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should successfully unfollow user","status":"passed","title":"should successfully unfollow user","duration":0.6652000000000271,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should reject when authentication is missing","status":"passed","title":"should reject when authentication is missing","duration":0.5800000000000409,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should handle service error for not following","status":"passed","title":"should handle service error for not following","duration":0.37770000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.7069999999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should handle custom pagination parameters","status":"passed","title":"should handle custom pagination parameters","duration":0.35980000000006385,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should ignore invalid pagination parameters","status":"passed","title":"should ignore invalid pagination parameters","duration":0.3247000000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowStats()"],"fullName":"FollowController Unit Tests getUserFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.5474999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.5977000000000317,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle missing target username","status":"passed","title":"should handle missing target username","duration":0.3868000000001075,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle follower user not found","status":"passed","title":"should handle follower user not found","duration":0.4051999999999225,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.6562000000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should reject invalid usernames format","status":"passed","title":"should reject invalid usernames format","duration":0.37859999999989213,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should successfully get recent followers for own account","status":"passed","title":"should successfully get recent followers for own account","duration":0.6012000000000626,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should handle custom limit parameter","status":"passed","title":"should handle custom limit parameter","duration":0.6759000000000697,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when trying to view others recent followers","status":"passed","title":"should reject when trying to view others recent followers","duration":1.0126999999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when not authenticated","status":"passed","title":"should reject when not authenticated","duration":0.7643000000000484,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map validation errors to 400 status","status":"passed","title":"should map validation errors to 400 status","duration":0.42470000000002983,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map authentication errors to 401 status","status":"passed","title":"should map authentication errors to 401 status","duration":0.3351000000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map forbidden errors to 403 status","status":"passed","title":"should map forbidden errors to 403 status","duration":0.32749999999998636,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map not found errors to 404 status","status":"passed","title":"should map not found errors to 404 status","duration":0.42229999999995016,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map business rule conflicts to 409 status","status":"passed","title":"should map business rule conflicts to 409 status","duration":0.41679999999996653,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map unknown errors to 500 status","status":"passed","title":"should map unknown errors to 500 status","duration":0.5656000000000176,"failureMessages":[],"meta":{}}],"startTime":1751631758592,"endTime":1751631758611.5657,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.test.ts"},{"assertionResults":[{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create a new post successfully","status":"passed","title":"should create a new post successfully","duration":4.518900000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create scheduled post successfully","status":"passed","title":"should create scheduled post successfully","duration":1.41640000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should handle content warning properly","status":"passed","title":"should handle content warning properly","duration":1.836999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with empty content","status":"passed","title":"should reject posts with empty content","duration":0.8783999999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with only whitespace content","status":"passed","title":"should reject posts with only whitespace content","duration":0.6596999999999866,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts exceeding character limit","status":"passed","title":"should reject posts exceeding character limit","duration":0.4784999999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts without scheduledFor date","status":"passed","title":"should reject scheduled posts without scheduledFor date","duration":0.4279000000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts with past dates","status":"passed","title":"should reject scheduled posts with past dates","duration":0.4954000000000178,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Server Errors"],"fullName":"PostController createPost Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.6929000000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should return public posts with pagination","status":"passed","title":"should return public posts with pagination","duration":0.7673000000000343,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should filter out current user own posts when authenticated","status":"passed","title":"should filter out current user own posts when authenticated","duration":0.7848999999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle pagination parameters correctly","status":"passed","title":"should handle pagination parameters correctly","duration":0.582300000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle invalid pagination parameters","status":"passed","title":"should handle invalid pagination parameters","duration":0.43530000000004065,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Server Errors"],"fullName":"PostController getPosts Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.49850000000003547,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return post when found and published","status":"passed","title":"should return post when found and published","duration":0.5865999999999758,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return unpublished post when author is viewing","status":"passed","title":"should return unpublished post when author is viewing","duration":0.4989999999999668,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 for unpublished post when not the author","status":"passed","title":"should return 404 for unpublished post when not the author","duration":0.4742999999999711,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.4452999999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Input Validation"],"fullName":"PostController getPostById Input Validation should return 400 when post ID is missing","status":"passed","title":"should return 400 when post ID is missing","duration":0.5110000000000241,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Successful Post Deletion"],"fullName":"PostController deletePost Successful Post Deletion should delete own post successfully","status":"passed","title":"should delete own post successfully","duration":0.6972999999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 403 when trying to delete another user post","status":"passed","title":"should return 403 when trying to delete another user post","duration":0.6954000000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.48579999999998336,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return user posts with pagination","status":"passed","title":"should return user posts with pagination","duration":0.8649999999999523,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.8759000000000015,"failureMessages":[],"meta":{}}],"startTime":1751631760628,"endTime":1751631760651.876,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/PostController.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":7.143599999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":1.5668000000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":0.9887999999999693,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.8143999999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":1.933999999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.8599000000000387,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.8064999999999714,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.5300000000000296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":1.03449999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":1.0019999999999527,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.8337999999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.932200000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":0.9362000000000421,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":1.6818999999999846,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":1.3670000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":0.7778999999999883,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":0.8441000000000258,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.8712000000000444,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.6428000000000225,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.7511000000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":0.9565999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.8802000000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.8833999999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":0.6277000000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.3926999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.3136000000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":0.4338999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":1.4388999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":0.7294999999999732,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":0.48109999999996944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":0.9258000000000379,"failureMessages":[],"meta":{}}],"startTime":1751631759138,"endTime":1751631759174.9258,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/authMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid username and no actorId","status":"passed","title":"should pass validation with valid username and no actorId","duration":4.683200000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid ActivityPub actor ID","status":"passed","title":"should pass validation with valid ActivityPub actor ID","duration":1.2275999999999385,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.7389000000000578,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid ActivityPub URLs","status":"passed","title":"should pass validation with various valid ActivityPub URLs","duration":1.6080999999999221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with null actorId","status":"passed","title":"should pass validation with null actorId","duration":0.7033999999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":7.11710000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid ActivityPub actor URLs","status":"passed","title":"should reject invalid ActivityPub actor URLs","duration":2.523900000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.551900000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.0745999999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Invalid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Invalid Unfollow Requests should reject invalid usernames","status":"passed","title":"should reject invalid usernames","duration":2.413000000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":1.530999999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with valid pagination parameters","status":"passed","title":"should pass validation with valid pagination parameters","duration":0.564200000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with includeInactive flag","status":"passed","title":"should pass validation with includeInactive flag","duration":0.38049999999998363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should handle includeInactive false correctly","status":"passed","title":"should handle includeInactive false correctly","duration":0.6271000000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject invalid username in params","status":"passed","title":"should reject invalid username in params","duration":0.6705999999999221,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":1.9756999999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.9361000000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject zero or negative page numbers","status":"passed","title":"should reject zero or negative page numbers","duration":1.2047000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with acct: format","status":"passed","title":"should pass validation with acct: format","duration":0.9139999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with HTTPS URL format","status":"passed","title":"should pass validation with HTTPS URL format","duration":0.6921999999999571,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various acct: formats","status":"passed","title":"should pass validation with various acct: formats","duration":0.9510000000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various HTTPS URL formats","status":"passed","title":"should pass validation with various HTTPS URL formats","duration":0.9655999999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject invalid resource formats","status":"passed","title":"should reject invalid resource formats","duration":3.813699999999926,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject missing resource parameter","status":"passed","title":"should reject missing resource parameter","duration":1.2457999999999174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with valid ActivityPub request","status":"passed","title":"should pass validation with valid ActivityPub request","duration":0.7134000000000924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with extended ActivityPub content type","status":"passed","title":"should pass validation with extended ActivityPub content type","duration":0.3407000000000835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with all required ActivityPub fields","status":"passed","title":"should pass validation with all required ActivityPub fields","duration":0.47199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-ActivityPub content type","status":"passed","title":"should reject non-ActivityPub content type","duration":1.2667999999999893,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject missing content type","status":"passed","title":"should reject missing content type","duration":1.1159000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":0.8028000000000475,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-object request body","status":"passed","title":"should reject non-object request body","duration":1.75,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject ActivityPub activities missing required fields","status":"passed","title":"should reject ActivityPub activities missing required fields","duration":1.2889999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","Error Handling"],"fullName":"Follow Validation Middleware Error Handling should handle validation errors properly","status":"passed","title":"should handle validation errors properly","duration":1.313199999999938,"failureMessages":[],"meta":{}}],"startTime":1751631758601,"endTime":1751631758653.3132,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/followValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with valid image file","status":"passed","title":"should pass validation with valid image file","duration":5.49860000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with all supported image types","status":"passed","title":"should pass validation with all supported image types","duration":1.514599999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with supported video types","status":"passed","title":"should pass validation with supported video types","duration":0.8733000000000857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation without alt text","status":"passed","title":"should pass validation without alt text","duration":0.7834000000000287,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with empty alt text","status":"passed","title":"should pass validation with empty alt text","duration":0.7702999999999065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject upload without file","status":"passed","title":"should reject upload without file","duration":3.106899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject unsupported file types","status":"failed","title":"should reject unsupported file types","duration":14.552099999999996,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  Array [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[32m-     \"error\": ObjectContaining {\u001b[90m\n\u001b[32m-       \"code\": \"VALIDATION_ERROR\",\u001b[90m\n\u001b[32m-       \"details\": ArrayContaining [\u001b[90m\n\u001b[32m-         ObjectContaining {\u001b[90m\n\u001b[32m-           \"field\": \"mimetype\",\u001b[90m\n\u001b[32m-           \"message\": \"File type not supported. Use JPEG, PNG, GIF, WEBP, MP4, or WEBM\",\u001b[90m\n\u001b[32m-         },\u001b[90m\n\u001b[32m-       ],\u001b[90m\n\u001b[31m+   Object {\u001b[90m\n\u001b[31m+     \"error\": Object {\u001b[90m\n\u001b[31m+       \"code\": \"INVALID_FILE_TYPE\",\u001b[90m\n\u001b[31m+       \"message\": \"File type text/plain is not supported. Allowed types: image/jpeg, image/jpg, image/png, image/gif, image/webp, video/mp4, video/webm, video/quicktime\",\u001b[90m\n\u001b[2m      },\u001b[22m\n\u001b[2m      \"success\": false,\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\__tests__\\middleware\\mediaModerationValidationMiddleware.test.ts:222:27\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\__tests__\\middleware\\mediaModerationValidationMiddleware.test.ts:202:26\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:17)"],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject files that are too large","status":"passed","title":"should reject files that are too large","duration":1.4425999999999704,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject empty files","status":"passed","title":"should reject empty files","duration":1.28449999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject alt text that is too long","status":"passed","title":"should reject alt text that is too long","duration":1.2203000000000657,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for user report","status":"passed","title":"should pass validation for user report","duration":1.0920999999999594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for post report","status":"passed","title":"should pass validation for post report","duration":0.38980000000003656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for all report types","status":"passed","title":"should pass validation for all report types","duration":1.6216000000000577,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation with maximum length description","status":"passed","title":"should pass validation with maximum length description","duration":0.5669999999998936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject invalid report type","status":"passed","title":"should reject invalid report type","duration":1.675200000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too short","status":"passed","title":"should reject description that is too short","duration":0.9836999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too long","status":"passed","title":"should reject description that is too long","duration":1.0862000000000762,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with both user and post IDs","status":"passed","title":"should reject report with both user and post IDs","duration":2.5406000000000404,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.891399999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with reason","status":"passed","title":"should pass validation with reason","duration":1.7554000000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation without reason","status":"passed","title":"should pass validation without reason","duration":0.6594000000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with empty reason","status":"passed","title":"should pass validation with empty reason","duration":0.6521000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Invalid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Invalid User Blocking should reject reason that is too long","status":"passed","title":"should reject reason that is too long","duration":0.8541000000000167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.4539999999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with minimum length username","status":"passed","title":"should pass validation with minimum length username","duration":0.28920000000005075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with maximum length username","status":"passed","title":"should pass validation with maximum length username","duration":0.24610000000006949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with underscores","status":"passed","title":"should pass validation with underscores","duration":0.2299000000000433,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too short","status":"passed","title":"should reject username that is too short","duration":0.4998000000000502,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too long","status":"passed","title":"should reject username that is too long","duration":0.5056000000000722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username with invalid characters","status":"passed","title":"should reject username with invalid characters","duration":3.8678999999999633,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","Error Handling"],"fullName":"Media & Moderation Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":0.8523999999999887,"failureMessages":[],"meta":{}}],"startTime":1751631758601,"endTime":1751631758656.8523,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with minimal valid data","status":"passed","title":"should pass validation with minimal valid data","duration":6.281000000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with all optional fields","status":"passed","title":"should pass validation with all optional fields","duration":2.892500000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with empty content warning","status":"passed","title":"should pass validation with empty content warning","duration":0.9980000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should apply default values correctly","status":"passed","title":"should apply default values correctly","duration":0.5740000000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject empty content","status":"passed","title":"should reject empty content","duration":6.155700000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":1.4798000000000116,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content warning that is too long","status":"passed","title":"should reject content warning that is too long","duration":3.183499999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled post without scheduled date","status":"passed","title":"should reject scheduled post without scheduled date","duration":1.0079000000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled date in the past","status":"passed","title":"should reject scheduled date in the past","duration":1.2683999999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject invalid datetime format","status":"passed","title":"should reject invalid datetime format","duration":0.7287000000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors","duration":0.7958999999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle missing request body","status":"passed","title":"should handle missing request body","duration":0.5062000000000353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should trim content whitespace","status":"passed","title":"should trim content whitespace","duration":0.3754999999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle non-string content types","status":"passed","title":"should handle non-string content types","duration":0.4999000000000251,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with partial update data","status":"passed","title":"should pass validation with partial update data","duration":0.6659999999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with all updatable fields","status":"passed","title":"should pass validation with all updatable fields","duration":0.7597000000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with empty body","status":"passed","title":"should pass validation with empty body","duration":1.6854000000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject empty content when provided","status":"passed","title":"should reject empty content when provided","duration":0.7330000000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":0.8532000000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":0.8168999999999755,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with valid page and limit","status":"passed","title":"should pass validation with valid page and limit","duration":0.7119999999999891,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with userId filter","status":"passed","title":"should pass validation with userId filter","duration":0.5943000000000325,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.697400000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject negative page number","status":"passed","title":"should reject negative page number","duration":1.6201000000000363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.574799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject zero limit","status":"passed","title":"should reject zero limit","duration":0.526299999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with valid post ID","status":"passed","title":"should pass validation with valid post ID","duration":0.5656000000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with alphanumeric ID","status":"passed","title":"should pass validation with alphanumeric ID","duration":0.5110000000000241,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject empty post ID","status":"passed","title":"should reject empty post ID","duration":0.9697999999999638,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject missing post ID","status":"passed","title":"should reject missing post ID","duration":0.5856999999999744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.579400000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","Error Handling"],"fullName":"Post Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":0.8539000000000101,"failureMessages":[],"meta":{}}],"startTime":1751631759167,"endTime":1751631759210.854,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/postValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should allow requests within the limit (5 per minute)","status":"passed","title":"should allow requests within the limit (5 per minute)","duration":161.16830000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should block requests exceeding the limit (6th request)","status":"passed","title":"should block requests exceeding the limit (6th request)","duration":470.6186999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should include rate limit headers","status":"passed","title":"should include rate limit headers","duration":115.69289999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should use IP address for rate limiting when user not authenticated","status":"passed","title":"should use IP address for rate limiting when user not authenticated","duration":492.8764000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should allow 10 posts per hour for authenticated users","status":"passed","title":"should allow 10 posts per hour for authenticated users","duration":129.37890000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should block 11th post creation request","status":"passed","title":"should block 11th post creation request","duration":828.4603000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should use user ID for rate limiting when authenticated","status":"passed","title":"should use user ID for rate limiting when authenticated","duration":117.79399999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should fall back to IP when user not authenticated","status":"passed","title":"should fall back to IP when user not authenticated","duration":119.74189999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should allow 20 follow operations per hour","status":"passed","title":"should allow 20 follow operations per hour","duration":157.94190000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should block 21st follow operation","status":"passed","title":"should block 21st follow operation","duration":1402.5636999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should allow 20 uploads per hour","status":"passed","title":"should allow 20 uploads per hour","duration":194.71460000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should block 21st media upload","status":"passed","title":"should block 21st media upload","duration":1453.8491000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should allow 100 requests per minute","status":"passed","title":"should allow 100 requests per minute","duration":449.0616,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should block 101st general API request","status":"passed","title":"should block 101st general API request","duration":376.91449999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should use IP address for general rate limiting","status":"passed","title":"should use IP address for general rate limiting","duration":122.75,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should allow 3 password reset attempts per hour","status":"passed","title":"should allow 3 password reset attempts per hour","duration":112.1846000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should block 4th password reset attempt","status":"passed","title":"should block 4th password reset attempt","duration":355.7355000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should return consistent error format for all rate limits","status":"passed","title":"should return consistent error format for all rate limits","duration":420.53999999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should include retry after information","status":"passed","title":"should include retry after information","duration":416.95480000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should export correct configuration values","status":"passed","title":"should export correct configuration values","duration":119.14689999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should have descriptions for all rate limit types","status":"passed","title":"should have descriptions for all rate limit types","duration":100.57580000000053,"failureMessages":[],"meta":{}}],"startTime":1751631759852,"endTime":1751631767972.5757,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should track rate limits by user ID for authenticated users","status":"passed","title":"should track rate limits by user ID for authenticated users","duration":328.2635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should allow different users to have separate rate limits","status":"passed","title":"should allow different users to have separate rate limits","duration":300.1532000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should track rate limits by IP address for anonymous users","status":"passed","title":"should track rate limits by IP address for anonymous users","duration":293.45630000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should allow different IP addresses to have separate rate limits","status":"passed","title":"should allow different IP addresses to have separate rate limits","duration":320.4809,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should prioritize user ID over IP address when user is authenticated","status":"passed","title":"should prioritize user ID over IP address when user is authenticated","duration":116.16700000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should demonstrate same user from different IPs shares rate limit","status":"passed","title":"should demonstrate same user from different IPs shares rate limit","duration":464.76019999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Fallback Behavior"],"fullName":"Rate Limiting: User ID vs IP Address Fallback Behavior should fallback to IP when user ID is not available","status":"passed","title":"should fallback to IP when user ID is not available","duration":115.79240000000027,"failureMessages":[],"meta":{}}],"startTime":1751631759795,"endTime":1751631761734.7925,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitUserVsIP.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with valid alphanumeric ID","status":"passed","title":"should pass validation with valid alphanumeric ID","duration":3.5620999999999867,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should pass validation with hyphens and underscores","status":"passed","title":"should pass validation with hyphens and underscores","duration":0.5158999999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject empty ID","status":"passed","title":"should reject empty ID","duration":2.2817999999999756,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject missing ID parameter","status":"passed","title":"should reject missing ID parameter","duration":0.9445999999999799,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID with invalid characters","status":"passed","title":"should reject ID with invalid characters","duration":1.5832000000000335,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateIdParam"],"fullName":"Security Validation Middleware validateIdParam should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.7393000000000143,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","setSecurityHeaders"],"fullName":"Security Validation Middleware setSecurityHeaders should set all required security headers","status":"passed","title":"should set all required security headers","duration":0.8827999999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should sanitize control characters from strings","status":"passed","title":"should sanitize control characters from strings","duration":1.0791000000000395,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","sanitizeInput"],"fullName":"Security Validation Middleware sanitizeInput should handle nested objects and arrays","status":"passed","title":"should handle nested objects and arrays","duration":1.0697999999999865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from connection.remoteAddress","status":"passed","title":"should extract IP from connection.remoteAddress","duration":0.9267999999999574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should extract IP from x-forwarded-for header","status":"passed","title":"should extract IP from x-forwarded-for header","duration":0.6422000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Validation Middleware","validateAndLogIP"],"fullName":"Security Validation Middleware validateAndLogIP should handle missing IP gracefully","status":"passed","title":"should handle missing IP gracefully","duration":0.36660000000000537,"failureMessages":[],"meta":{}}],"startTime":1751631764819,"endTime":1751631764835.3667,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should create follow relationship successfully","status":"passed","title":"should create follow relationship successfully","duration":109.04820000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent duplicate follow relationships","status":"passed","title":"should prevent duplicate follow relationships","duration":100.60229999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Integration Tests","Follow Creation and Validation"],"fullName":"Follow Integration Tests Follow Creation and Validation should prevent self-following","status":"passed","title":"should prevent self-following","duration":84.14139999999998,"failureMessages":[],"meta":{}}],"startTime":1751631765223,"endTime":1751631765517.1414,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/Follow.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should create post associated with existing user","status":"passed","title":"should create post associated with existing user","duration":116.62660000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should enforce foreign key constraint for invalid user","status":"passed","title":"should enforce foreign key constraint for invalid user","duration":87.32609999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","User-Post Relationship"],"fullName":"Post-User Integration Tests User-Post Relationship should cascade delete posts when user is deleted","status":"passed","title":"should cascade delete posts when user is deleted","duration":99.9511,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create published post with proper user attribution","status":"passed","title":"should create published post with proper user attribution","duration":77.72540000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create draft post for user","status":"passed","title":"should create draft post for user","duration":85.35749999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post-User Integration Tests","Post Creation Workflows"],"fullName":"Post-User Integration Tests Post Creation Workflows should create scheduled post with user relationship","status":"passed","title":"should create scheduled post with user relationship","duration":83.32549999999992,"failureMessages":[],"meta":{}}],"startTime":1751631764708,"endTime":1751631765259.3254,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/PostUser.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":1.9189000000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.2565999999999917,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.22879999999997835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.41840000000001965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.512299999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.4134000000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.3324999999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.19249999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.5279999999999632,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":0.5296999999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.3143000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.25720000000001164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.2746000000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.31670000000002574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.28110000000003765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.29189999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.2710999999999899,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.3351000000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.25200000000000955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.4211999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.3229000000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.25270000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.2895000000000323,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.30019999999996116,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.25900000000001455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.2692000000000121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":1.3127000000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.230700000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.22840000000002192,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.9775999999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.2980000000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.42720000000002756,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.19909999999998718,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.2581000000000131,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.18709999999998672,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.16259999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.1483000000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.2898999999999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.3491000000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.16989999999998417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.15370000000001482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.2907000000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.22769999999997026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.190400000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.2569000000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.4329999999999927,"failureMessages":[],"meta":{}}],"startTime":1751631759609,"endTime":1751631759628.433,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.businessLogic.test.ts"},{"assertionResults":[{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should transition from draft to published","status":"passed","title":"should transition from draft to published","duration":2.2513999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should set publishedAt timestamp when transitioning to published","status":"passed","title":"should set publishedAt timestamp when transitioning to published","duration":0.9564000000000306,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should allow editing content before publishing","status":"passed","title":"should allow editing content before publishing","duration":0.45659999999998035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should preserve other fields during draft to published transition","status":"passed","title":"should preserve other fields during draft to published transition","duration":0.3213999999999828,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from draft to scheduled","status":"passed","title":"should transition from draft to scheduled","duration":0.4492999999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should detect when scheduled post is ready to publish","status":"passed","title":"should detect when scheduled post is ready to publish","duration":0.3340000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from expired scheduled to published","status":"passed","title":"should transition from expired scheduled to published","duration":0.34699999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should preserve scheduled metadata when publishing","status":"passed","title":"should preserve scheduled metadata when publishing","duration":0.27139999999997144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should prevent transition from published back to draft","status":"passed","title":"should prevent transition from published back to draft","duration":0.4474999999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content updates on published posts","status":"passed","title":"should allow content updates on published posts","duration":0.2869999999999777,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content warning updates on published posts","status":"passed","title":"should allow content warning updates on published posts","duration":0.21709999999995944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle scheduling future posts","status":"passed","title":"should handle scheduling future posts","duration":0.2480000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle rescheduling posts","status":"passed","title":"should handle rescheduling posts","duration":0.231899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle canceling scheduled posts (back to draft)","status":"passed","title":"should handle canceling scheduled posts (back to draft)","duration":0.2629000000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with invalid scheduling state","status":"passed","title":"should handle posts with invalid scheduling state","duration":0.21309999999999718,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with past scheduled dates","status":"passed","title":"should handle posts with past scheduled dates","duration":0.22579999999999245,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with inconsistent published state","status":"passed","title":"should handle posts with inconsistent published state","duration":0.9608000000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle empty content in state transitions","status":"passed","title":"should handle empty content in state transitions","duration":0.32509999999996353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle boundary conditions for scheduling","status":"passed","title":"should handle boundary conditions for scheduling","duration":0.182200000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle multiple rapid state changes","status":"passed","title":"should handle multiple rapid state changes","duration":0.32099999999996953,"failureMessages":[],"meta":{}}],"startTime":1751631760966,"endTime":1751631760976.3252,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.stateTransitions.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept valid content within character limits","status":"passed","title":"should accept valid content within character limits","duration":3.1171999999999684,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject empty content","status":"passed","title":"should reject empty content","duration":1.2613999999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content that is only whitespace","status":"passed","title":"should reject content that is only whitespace","duration":0.8632999999999811,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content exceeding 5000 characters","status":"passed","title":"should reject content exceeding 5000 characters","duration":0.7848999999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept content exactly at 5000 character limit","status":"passed","title":"should accept content exactly at 5000 character limit","duration":0.5848000000000297,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should trim whitespace from content","status":"passed","title":"should trim whitespace from content","duration":0.30349999999998545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept valid content warning","status":"passed","title":"should accept valid content warning","duration":0.2787000000000148,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept empty string as content warning","status":"passed","title":"should accept empty string as content warning","duration":0.21289999999999054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept missing content warning field","status":"passed","title":"should accept missing content warning field","duration":0.4094000000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should reject content warning exceeding 200 characters","status":"passed","title":"should reject content warning exceeding 200 characters","duration":0.8333999999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept content warning exactly at 200 character limit","status":"passed","title":"should accept content warning exactly at 200 character limit","duration":0.377900000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should trim whitespace from content warning","status":"passed","title":"should trim whitespace from content warning","duration":0.21800000000001774,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept scheduled post with future date","status":"passed","title":"should accept scheduled post with future date","duration":1.2438000000000216,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post without scheduledFor date","status":"passed","title":"should reject scheduled post without scheduledFor date","duration":0.44029999999997926,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with past date","status":"passed","title":"should reject scheduled post with past date","duration":0.4145000000000323,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with invalid date format","status":"passed","title":"should reject scheduled post with invalid date format","duration":0.2858999999999696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept non-scheduled post with scheduledFor date","status":"passed","title":"should accept non-scheduled post with scheduledFor date","duration":0.254099999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isPublished to true","status":"passed","title":"should default isPublished to true","duration":0.19899999999995543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should accept explicit isPublished false for drafts","status":"passed","title":"should accept explicit isPublished false for drafts","duration":0.20669999999995525,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isScheduled to false","status":"passed","title":"should default isScheduled to false","duration":0.19170000000002574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept draft scheduled post","status":"passed","title":"should accept draft scheduled post","duration":0.2844000000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept maximum length content with maximum length warning","status":"passed","title":"should accept maximum length content with maximum length warning","duration":0.22870000000000346,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should handle null scheduledFor appropriately","status":"passed","title":"should handle null scheduledFor appropriately","duration":0.22109999999997854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should create Post instance with valid data","status":"passed","title":"should create Post instance with valid data","duration":0.2676000000000158,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should handle optional fields correctly","status":"passed","title":"should handle optional fields correctly","duration":0.15969999999998663,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should convert undefined optional fields to null","status":"passed","title":"should convert undefined optional fields to null","duration":0.204400000000021,"failureMessages":[],"meta":{}}],"startTime":1751631761600,"endTime":1751631761615.2676,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with all provided data","status":"passed","title":"should create user with all provided data","duration":2.18040000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with minimal required data","status":"passed","title":"should create user with minimal required data","duration":0.375,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle displayName defaulting to username when not provided","status":"passed","title":"should handle displayName defaulting to username when not provided","duration":0.15680000000003247,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should use provided displayName over username when both exist","status":"passed","title":"should use provided displayName over username when both exist","duration":0.1681000000000381,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle empty string values properly","status":"passed","title":"should handle empty string values properly","duration":0.21629999999998972,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle null values properly","status":"passed","title":"should handle null values properly","duration":0.2918000000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle undefined values properly","status":"passed","title":"should handle undefined values properly","duration":0.24900000000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile data excluding sensitive information","status":"passed","title":"should return public profile data excluding sensitive information","duration":1.92410000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile with default values","status":"passed","title":"should return public profile with default values","duration":0.46819999999996753,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should handle null values in public profile","status":"passed","title":"should handle null values in public profile","duration":0.24729999999999563,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile data including all information","status":"passed","title":"should return private profile data including all information","duration":1.451599999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile with default values","status":"passed","title":"should return private profile with default values","duration":0.2804999999999609,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should include all fields from public profile","status":"passed","title":"should include all fields from public profile","duration":0.43219999999996617,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateRegistration static method","status":"passed","title":"should have validateRegistration static method","duration":1.8444000000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateLogin static method","status":"passed","title":"should have validateLogin static method","duration":0.36709999999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateProfileUpdate static method","status":"passed","title":"should have validateProfileUpdate static method","duration":0.4759000000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle data object with extra properties","status":"passed","title":"should handle data object with extra properties","duration":0.34279999999995425,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.17789999999996553,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle different verification tiers","status":"passed","title":"should handle different verification tiers","duration":0.14990000000000236,"failureMessages":[],"meta":{}}],"startTime":1751631761300,"endTime":1751631761313.15,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.class.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should validate correct login credentials","status":"passed","title":"should validate correct login credentials","duration":2.9436999999999784,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept any password length for login (no strength requirements)","status":"passed","title":"should accept any password length for login (no strength requirements)","duration":0.47199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with special characters","status":"passed","title":"should accept password with special characters","duration":0.2733000000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept password with spaces","status":"passed","title":"should accept password with spaces","duration":0.20589999999998554,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Valid Login Data"],"fullName":"User Model - Login Validation Valid Login Data should accept very long passwords","status":"passed","title":"should accept very long passwords","duration":0.254600000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":0.6258000000000266,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.3605000000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.24730000000005248,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email without username part","status":"passed","title":"should reject email without username part","duration":0.39339999999998554,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with multiple @ symbols","status":"passed","title":"should reject email with multiple @ symbols","duration":0.25710000000003674,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.20680000000004384,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Email Validation"],"fullName":"User Model - Login Validation Invalid Email Validation should reject email with only spaces","status":"passed","title":"should reject email with only spaces","duration":0.19200000000000728,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.26900000000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should reject password with only spaces","status":"passed","title":"should reject password with only spaces","duration":0.29059999999998354,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with null value","status":"passed","title":"should handle password field with null value","duration":0.4915999999999485,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Invalid Password Validation"],"fullName":"User Model - Login Validation Invalid Password Validation should handle password field with undefined value","status":"passed","title":"should handle password field with undefined value","duration":0.24939999999998008,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing email","status":"passed","title":"should reject login data missing email","duration":0.245900000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing password","status":"passed","title":"should reject login data missing password","duration":0.2381000000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Missing Required Fields"],"fullName":"User Model - Login Validation Missing Required Fields should reject login data missing both email and password","status":"passed","title":"should reject login data missing both email and password","duration":1.0541999999999803,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Extra Fields Handling"],"fullName":"User Model - Login Validation Extra Fields Handling should ignore extra fields not in login schema","status":"passed","title":"should ignore extra fields not in login schema","duration":1.3297999999999774,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":0.7805999999999926,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Multiple Validation Errors"],"fullName":"User Model - Login Validation Multiple Validation Errors should handle completely invalid login data","status":"passed","title":"should handle completely invalid login data","duration":0.4630999999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with numeric values converted to strings","status":"passed","title":"should handle login data with numeric values converted to strings","duration":0.5485999999999649,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with boolean values","status":"passed","title":"should handle login data with boolean values","duration":0.6061000000000263,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with array values","status":"passed","title":"should handle login data with array values","duration":0.42600000000004457,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Edge Cases"],"fullName":"User Model - Login Validation Edge Cases should handle login data with object values","status":"passed","title":"should handle login data with object values","duration":0.434599999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Login Validation","Case Sensitivity"],"fullName":"User Model - Login Validation Case Sensitivity should accept email with mixed case (validation should not enforce case)","status":"passed","title":"should accept email with mixed case (validation should not enforce case)","duration":0.28480000000001837,"failureMessages":[],"meta":{}}],"startTime":1751631763618,"endTime":1751631763633.4346,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.login.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with all optional fields provided","status":"passed","title":"should validate update with all optional fields provided","duration":3.52030000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only displayName","status":"passed","title":"should validate update with only displayName","duration":0.6564999999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only bio","status":"passed","title":"should validate update with only bio","duration":0.3475999999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only website","status":"passed","title":"should validate update with only website","duration":0.3603999999999701,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate empty update (no fields provided)","status":"passed","title":"should validate empty update (no fields provided)","duration":0.248299999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.31129999999996016,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept bio at maximum length (500 characters)","status":"passed","title":"should accept bio at maximum length (500 characters)","duration":0.19890000000003738,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept empty string for website (to clear website)","status":"passed","title":"should accept empty string for website (to clear website)","duration":0.6141999999999825,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept https websites","status":"passed","title":"should accept https websites","duration":0.39440000000001874,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept http websites","status":"passed","title":"should accept http websites","duration":0.3206000000000131,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with paths","status":"passed","title":"should accept websites with paths","duration":0.20720000000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with query parameters","status":"passed","title":"should accept websites with query parameters","duration":0.17959999999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with ports","status":"passed","title":"should accept websites with ports","duration":0.21340000000003556,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with subdomains","status":"passed","title":"should accept websites with subdomains","duration":0.17880000000002383,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.5021000000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with only spaces","status":"passed","title":"should reject displayName with only spaces","duration":0.23150000000003956,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.24109999999996035,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with null value","status":"passed","title":"should reject displayName with null value","duration":0.46699999999998454,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with non-string value","status":"passed","title":"should reject displayName with non-string value","duration":0.25149999999996453,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio longer than 500 characters","status":"passed","title":"should reject bio longer than 500 characters","duration":0.29860000000002174,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should accept empty bio","status":"passed","title":"should accept empty bio","duration":0.16590000000002192,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with null value","status":"passed","title":"should reject bio with null value","duration":0.244199999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with non-string value","status":"passed","title":"should reject bio with non-string value","duration":0.33279999999996335,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject invalid website URL format","status":"passed","title":"should reject invalid website URL format","duration":0.4256000000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website without protocol","status":"passed","title":"should reject website without protocol","duration":0.2951999999999657,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with invalid protocol","status":"passed","title":"should reject website with invalid protocol","duration":0.24589999999994916,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with only protocol","status":"passed","title":"should reject website with only protocol","duration":0.2668000000000461,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with spaces","status":"passed","title":"should reject website with spaces","duration":0.40280000000001337,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with null value","status":"passed","title":"should reject website with null value","duration":0.3644999999999641,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with non-string value","status":"passed","title":"should reject website with non-string value","duration":0.26319999999998345,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.2293999999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should handle combination of valid and invalid fields","status":"passed","title":"should handle combination of valid and invalid fields","duration":0.29059999999998354,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Extra Fields Handling"],"fullName":"User Model - Profile Update Validation Extra Fields Handling should ignore fields not in profile update schema","status":"passed","title":"should ignore fields not in profile update schema","duration":0.9005999999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle bio with special characters and unicode","status":"passed","title":"should handle bio with special characters and unicode","duration":0.22399999999998954,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with unicode characters","status":"passed","title":"should handle displayName with unicode characters","duration":0.16800000000000637,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle newlines in bio","status":"passed","title":"should handle newlines in bio","duration":0.15229999999996835,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with numbers and symbols","status":"passed","title":"should handle displayName with numbers and symbols","duration":0.15440000000000964,"failureMessages":[],"meta":{}}],"startTime":1751631761945,"endTime":1751631761962.224,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.profileUpdate.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate correct registration data with all fields","status":"passed","title":"should validate correct registration data with all fields","duration":3.1673000000000116,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should validate registration data without optional displayName","status":"passed","title":"should validate registration data without optional displayName","duration":0.5369999999999777,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept username with underscores and numbers","status":"passed","title":"should accept username with underscores and numbers","duration":0.27799999999996317,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum length username (3 characters)","status":"passed","title":"should accept minimum length username (3 characters)","duration":0.19769999999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept maximum length username (30 characters)","status":"passed","title":"should accept maximum length username (30 characters)","duration":0.19439999999997326,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Valid Registration Data"],"fullName":"User Model - Registration Validation Valid Registration Data should accept minimum valid password requirements","status":"passed","title":"should accept minimum valid password requirements","duration":0.358099999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject invalid email format","status":"passed","title":"should reject invalid email format","duration":0.641399999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without @ symbol","status":"passed","title":"should reject email without @ symbol","duration":0.2943000000000211,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject email without domain","status":"passed","title":"should reject email without domain","duration":0.39999999999997726,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Email Validation"],"fullName":"User Model - Registration Validation Invalid Email Validation should reject empty email","status":"passed","title":"should reject empty email","duration":0.25689999999997326,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username shorter than 3 characters","status":"passed","title":"should reject username shorter than 3 characters","duration":0.273399999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username longer than 30 characters","status":"passed","title":"should reject username longer than 30 characters","duration":0.2167999999999779,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with special characters","status":"passed","title":"should reject username with special characters","duration":0.21120000000001937,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with spaces","status":"passed","title":"should reject username with spaces","duration":0.2763999999999669,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject username with hyphens","status":"passed","title":"should reject username with hyphens","duration":0.22729999999995698,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Username Validation"],"fullName":"User Model - Registration Validation Invalid Username Validation should reject empty username","status":"passed","title":"should reject empty username","duration":0.24459999999999127,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password shorter than 8 characters","status":"passed","title":"should reject password shorter than 8 characters","duration":0.3620999999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without uppercase letter","status":"passed","title":"should reject password without uppercase letter","duration":0.21769999999997935,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without lowercase letter","status":"passed","title":"should reject password without lowercase letter","duration":0.20289999999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject password without number","status":"passed","title":"should reject password without number","duration":0.2008999999999901,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid Password Validation"],"fullName":"User Model - Registration Validation Invalid Password Validation should reject empty password","status":"passed","title":"should reject empty password","duration":0.26539999999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.275100000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.2185000000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Invalid DisplayName Validation"],"fullName":"User Model - Registration Validation Invalid DisplayName Validation should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.16020000000003165,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing email","status":"passed","title":"should reject registration data missing email","duration":0.4609999999999559,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing username","status":"passed","title":"should reject registration data missing username","duration":0.25540000000000873,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Missing Required Fields"],"fullName":"User Model - Registration Validation Missing Required Fields should reject registration data missing password","status":"passed","title":"should reject registration data missing password","duration":0.23520000000002028,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Registration Validation","Multiple Validation Errors"],"fullName":"User Model - Registration Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.2264000000000124,"failureMessages":[],"meta":{}}],"startTime":1751631762269,"endTime":1751631762282.2263,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":3.4114000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":0.6281000000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":1.3952999999999633,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":0.4825999999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":0.4300999999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":0.25149999999996453,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":0.6111999999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":0.4101999999999748,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":0.7667999999999893,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.6288000000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":0.4533999999999878,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":0.19729999999998427,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":0.1786999999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":0.22809999999998354,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":0.4589000000000283,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":0.17670000000003938,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":0.356899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":0.29160000000001673,"failureMessages":[],"meta":{}}],"startTime":1751631759948,"endTime":1751631759961.357,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/FollowRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a basic post with minimal data","status":"passed","title":"should create a basic post with minimal data","duration":4.387900000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with content warning","status":"passed","title":"should create a post with content warning","duration":1.9740000000000464,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":0.6822999999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with media attachments","status":"passed","title":"should create a post with media attachments","duration":0.44999999999998863,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should include author information in response","status":"passed","title":"should include author information in response","duration":1.0977000000000317,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should handle different author verification states","status":"passed","title":"should handle different author verification states","duration":0.4259999999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with maximum content length","status":"passed","title":"should handle posts with maximum content length","duration":0.9523000000000366,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with special characters","status":"passed","title":"should handle posts with special characters","duration":0.346300000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with newlines and formatting","status":"passed","title":"should handle posts with newlines and formatting","duration":0.5673999999999637,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle null optional fields correctly","status":"passed","title":"should handle null optional fields correctly","duration":0.45289999999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should pass correct include parameters to Prisma","status":"passed","title":"should pass correct include parameters to Prisma","duration":0.6210000000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should handle Prisma create response correctly","status":"passed","title":"should handle Prisma create response correctly","duration":0.4814000000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate database connection errors","status":"passed","title":"should propagate database connection errors","duration":1.4358000000000288,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate unique constraint violations","status":"passed","title":"should propagate unique constraint violations","duration":0.4937999999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate foreign key constraint violations","status":"passed","title":"should propagate foreign key constraint violations","duration":0.4630000000000223,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should handle invalid data type errors","status":"passed","title":"should handle invalid data type errors","duration":0.4595000000000482,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should call database create method exactly once","status":"passed","title":"should call database create method exactly once","duration":0.35009999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should not make additional database calls after creation","status":"passed","title":"should not make additional database calls after creation","duration":0.48299999999994725,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should handle concurrent post creation calls","status":"passed","title":"should handle concurrent post creation calls","duration":0.5373000000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should preserve exact content without modification","status":"passed","title":"should preserve exact content without modification","duration":0.6490000000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle date objects correctly","status":"passed","title":"should handle date objects correctly","duration":0.37180000000000746,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.39179999999998927,"failureMessages":[],"meta":{}}],"startTime":1751631760934,"endTime":1751631760953.3918,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.create.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a published post with default values","status":"passed","title":"should create a published post with default values","duration":5.872600000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a draft post when isPublished is false","status":"passed","title":"should create a draft post when isPublished is false","duration":2.6013999999999555,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":1.827099999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should handle content warning and activity ID","status":"passed","title":"should handle content warning and activity ID","duration":0.7810000000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should find post by ID with full relations","status":"passed","title":"should find post by ID with full relations","duration":1.0430999999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should return null if post not found","status":"passed","title":"should return null if post not found","duration":0.4340000000000259,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should find posts by author with default pagination","status":"passed","title":"should find posts by author with default pagination","duration":1.2212000000000103,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should apply publishing status filter","status":"passed","title":"should apply publishing status filter","duration":1.4191999999999894,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should handle custom pagination and ordering","status":"passed","title":"should handle custom pagination and ordering","duration":1.602700000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should find published posts with default options","status":"passed","title":"should find published posts with default options","duration":1.3658000000000357,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by author ID","status":"passed","title":"should filter by author ID","duration":0.7529999999999859,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by content warning presence","status":"passed","title":"should filter by content warning presence","duration":1.0703000000000316,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by date range","status":"passed","title":"should filter by date range","duration":0.6456000000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findReadyToPublish()"],"fullName":"PostRepository findReadyToPublish() should find expired scheduled posts","status":"passed","title":"should find expired scheduled posts","duration":0.7078999999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should find future scheduled posts","status":"passed","title":"should find future scheduled posts","duration":0.8256000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should filter by author","status":"passed","title":"should filter by author","duration":0.6420999999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should update post content and set updatedAt","status":"passed","title":"should update post content and set updatedAt","duration":0.7452999999999861,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should set publishedAt when transitioning to published","status":"passed","title":"should set publishedAt when transitioning to published","duration":0.6754999999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should not set publishedAt if already published","status":"passed","title":"should not set publishedAt if already published","duration":0.5245000000000459,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","delete()"],"fullName":"PostRepository delete() should delete post and return deleted post with media info","status":"passed","title":"should delete post and return deleted post with media info","duration":0.5824999999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return true if post exists and belongs to author","status":"passed","title":"should return true if post exists and belongs to author","duration":0.5276999999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return false if post does not exist or belongs to different author","status":"passed","title":"should return false if post does not exist or belongs to different author","duration":0.28050000000001774,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","getAuthorStats()"],"fullName":"PostRepository getAuthorStats() should return comprehensive post statistics for author","status":"passed","title":"should return comprehensive post statistics for author","duration":1.2586000000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByActivityId()"],"fullName":"PostRepository findByActivityId() should find post by ActivityPub activity ID","status":"passed","title":"should find post by ActivityPub activity ID","duration":0.8805000000000405,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should batch publish expired scheduled posts","status":"passed","title":"should batch publish expired scheduled posts","duration":1.349800000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should return empty array if no expired posts","status":"passed","title":"should return empty array if no expired posts","duration":0.7293999999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should use default limit of 50","status":"passed","title":"should use default limit of 50","duration":0.5760999999999967,"failureMessages":[],"meta":{}}],"startTime":1751631759084,"endTime":1751631759117.7295,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with default expiration","status":"passed","title":"should create AuthService with default expiration","duration":2.617399999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with custom expiration","status":"passed","title":"should create AuthService with custom expiration","duration":0.5038000000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should hash a password successfully","status":"passed","title":"should hash a password successfully","duration":227.11850000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should produce different hashes for the same password","status":"passed","title":"should produce different hashes for the same password","duration":458.99619999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle different password lengths","status":"passed","title":"should handle different password lengths","duration":465.03920000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle passwords with special characters","status":"passed","title":"should handle passwords with special characters","duration":230.38660000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle unicode characters in passwords","status":"passed","title":"should handle unicode characters in passwords","duration":248.98849999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":2.33420000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for undefined password","status":"passed","title":"should throw error for undefined password","duration":0.9239999999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should verify correct password","status":"passed","title":"should verify correct password","duration":482.05560000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject incorrect password","status":"passed","title":"should reject incorrect password","duration":473.99199999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject password with different case","status":"passed","title":"should reject password with different case","duration":487.75610000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle empty string password verification","status":"passed","title":"should handle empty string password verification","duration":477.2064999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle special characters in verification","status":"passed","title":"should handle special characters in verification","duration":478.3564000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for invalid hash format","status":"passed","title":"should throw error for invalid hash format","duration":0.4863999999997759,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null hash","status":"passed","title":"should throw error for null hash","duration":0.756800000000112,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":246.77109999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate a valid JWT token","status":"passed","title":"should generate a valid JWT token","duration":7.722600000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate different tokens for different users","status":"passed","title":"should generate different tokens for different users","duration":4.1185999999997875,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should include user data in token payload","status":"passed","title":"should include user data in token payload","duration":5.215100000000348,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":4.175100000000384,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":1.2109999999993306,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for empty token","status":"passed","title":"should throw error for empty token","duration":0.9436999999998079,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for null token","status":"passed","title":"should throw error for null token","duration":0.7988000000004831,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should extract token from Bearer header","status":"passed","title":"should extract token from Bearer header","duration":0.720299999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for invalid header format","status":"passed","title":"should throw error for invalid header format","duration":1.5354000000006636,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for undefined header","status":"passed","title":"should throw error for undefined header","duration":0.6680999999998676,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for empty header","status":"passed","title":"should throw error for empty header","duration":0.6029000000007727,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should validate correct registration data","status":"passed","title":"should validate correct registration data","duration":20.47769999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject invalid email","status":"passed","title":"should reject invalid email","duration":1.443899999999303,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject short password","status":"passed","title":"should reject short password","duration":0.8574999999991633,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should validate correct login data","status":"passed","title":"should validate correct login data","duration":0.8505999999997584,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.6499000000003434,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject missing password","status":"passed","title":"should reject missing password","duration":1.0409999999992579,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full password hash and verify cycle","status":"passed","title":"should complete full password hash and verify cycle","duration":764.2013999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full token generation and verification cycle","status":"passed","title":"should complete full token generation and verification cycle","duration":2.101599999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should work with different JWT expiration times","status":"passed","title":"should work with different JWT expiration times","duration":4.8913000000002285,"failureMessages":[],"meta":{}}],"startTime":1751631761348,"endTime":1751631766458.8914,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":9.949899999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.578899999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.4178000000000566,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":1.2427000000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":1.001800000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":1.0167000000000144,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":1.0801999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":1.467200000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":1.6371000000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":0.9513000000000602,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.7839000000000169,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":1.0955999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.0266000000000304,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.6824000000000296,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":0.9480000000000928,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.6431999999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.8865000000000691,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":1.5137999999999465,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.6731999999999516,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.5282999999999447,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":0.28979999999990014,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":0.2761999999999034,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.43640000000004875,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":0.31560000000001764,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":0.2781999999999698,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":0.2717999999999847,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":0.2685000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":0.7512000000000398,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":0.6664999999999281,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.6685999999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.43229999999994106,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.504799999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":0.5435999999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":0.35160000000007585,"failureMessages":[],"meta":{}}],"startTime":1751631758601,"endTime":1751631758639.5437,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/FollowService.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should successfully login user with valid credentials","status":"passed","title":"should successfully login user with valid credentials","duration":44.1687,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should handle user with different data successfully","status":"passed","title":"should handle user with different data successfully","duration":5.866199999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for non-existent user","status":"passed","title":"should return 401 for non-existent user","duration":5.516499999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for incorrect password","status":"passed","title":"should return 401 for incorrect password","duration":6.82630000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for invalid email format","status":"passed","title":"should return 400 for invalid email format","duration":4.80639999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing password","status":"passed","title":"should return 400 for missing password","duration":3.9633999999999787,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing email","status":"passed","title":"should return 400 for missing email","duration":4.098600000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for empty request body","status":"passed","title":"should return 400 for empty request body","duration":3.858600000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":7.34660000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle AuthService errors gracefully","status":"passed","title":"should handle AuthService errors gracefully","duration":6.678600000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should return 500 for token generation errors","status":"passed","title":"should return 500 for token generation errors","duration":5.622299999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle case-sensitive email matching","status":"passed","title":"should handle case-sensitive email matching","duration":5.559499999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle very long email addresses","status":"passed","title":"should handle very long email addresses","duration":5.779599999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle user with null optional fields","status":"passed","title":"should handle user with null optional fields","duration":4.015999999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should require JSON content type","status":"passed","title":"should require JSON content type","duration":5.349199999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":8.499599999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should not reveal whether email exists in error messages","status":"passed","title":"should not reveal whether email exists in error messages","duration":6.673000000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should handle concurrent login attempts","status":"passed","title":"should handle concurrent login attempts","duration":11.65949999999998,"failureMessages":[],"meta":{}}],"startTime":1751631760484,"endTime":1751631760631.6594,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authLogin.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should successfully register a new user with valid data","status":"passed","title":"should successfully register a new user with valid data","duration":44.95130000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should register user with minimal required data (no bio or displayName)","status":"passed","title":"should register user with minimal required data (no bio or displayName)","duration":5.6445999999999685,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when username already exists","status":"passed","title":"should reject registration when username already exists","duration":6.022100000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when email already exists","status":"passed","title":"should reject registration when email already exists","duration":5.824100000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":7.014299999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle password hashing errors","status":"passed","title":"should handle password hashing errors","duration":4.643400000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle user creation errors in database","status":"passed","title":"should handle user creation errors in database","duration":4.600000000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with invalid data","status":"passed","title":"should reject registration with invalid data","duration":3.8298999999999523,"failureMessages":[],"meta":{}}],"startTime":1751631762269,"endTime":1751631762352.8298,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authRegistration.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":28.63480000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user as external ActivityPub actor","status":"passed","title":"should successfully follow a user as external ActivityPub actor","duration":16.447099999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":5.546399999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should allow follow without authentication if actorId provided","status":"passed","title":"should allow follow without authentication if actorId provided","duration":4.784400000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject follow without authentication and without actorId","status":"passed","title":"should reject follow without authentication and without actorId","duration":5.259299999999939,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should require authentication for unfollow operations","status":"passed","title":"should require authentication for unfollow operations","duration":4.028599999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject invalid authentication tokens","status":"passed","title":"should reject invalid authentication tokens","duration":5.606499999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":3.834899999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when already following user","status":"passed","title":"should return 409 when already following user","duration":7.21670000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when trying to follow yourself","status":"passed","title":"should return 409 when trying to follow yourself","duration":3.855099999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 403 when user has blocked the follower","status":"passed","title":"should return 403 when user has blocked the follower","duration":3.7995999999999412,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should handle malformed username parameters","status":"passed","title":"should handle malformed username parameters","duration":3.0867000000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass username parameter correctly to controller","status":"passed","title":"should pass username parameter correctly to controller","duration":3.2631000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass request body correctly to controller","status":"passed","title":"should pass request body correctly to controller","duration":3.534999999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should preserve user information from authentication middleware","status":"passed","title":"should preserve user information from authentication middleware","duration":3.153699999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to followers endpoint","status":"passed","title":"should handle GET requests to followers endpoint","duration":5.864900000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to following endpoint","status":"passed","title":"should handle GET requests to following endpoint","duration":3.5867000000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to stats endpoint","status":"passed","title":"should handle GET requests to stats endpoint","duration":3.3600000000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle very long usernames","status":"passed","title":"should handle very long usernames","duration":3.1178999999999633,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle special characters in usernames","status":"passed","title":"should handle special characters in usernames","duration":3.488900000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle concurrent follow requests gracefully","status":"passed","title":"should handle concurrent follow requests gracefully","duration":8.024999999999977,"failureMessages":[],"meta":{}}],"startTime":1751631760185,"endTime":1751631760316.025,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/follow.requests.e2e.test.ts"},{"assertionResults":[{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should create router with all required dependencies","status":"passed","title":"should create router with all required dependencies","duration":5.4155999999999835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Dependency Injection"],"fullName":"Users Router Refactoring Tests Dependency Injection should properly inject FollowController for follow operations","status":"passed","title":"should properly inject FollowController for follow operations","duration":27.913700000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for POST /users/:username/follow","status":"passed","title":"should use FollowController for POST /users/:username/follow","duration":7.454300000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for DELETE /users/:username/follow","status":"passed","title":"should use FollowController for DELETE /users/:username/follow","duration":7.3034999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/followers","status":"passed","title":"should use FollowController for GET /users/:username/followers","duration":7.2584000000000515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/following","status":"passed","title":"should use FollowController for GET /users/:username/following","duration":6.203599999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Follow Operations - FollowController Usage"],"fullName":"Users Router Refactoring Tests Follow Operations - FollowController Usage should use FollowController for GET /users/:username/stats","status":"passed","title":"should use FollowController for GET /users/:username/stats","duration":7.873900000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for GET /users/:username","status":"passed","title":"should use UserController for GET /users/:username","duration":6.428699999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for POST /users/:username/block","status":"passed","title":"should use UserController for POST /users/:username/block","duration":7.371499999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","User Management Operations - UserController Usage"],"fullName":"Users Router Refactoring Tests User Management Operations - UserController Usage should use UserController for DELETE /users/:username/block","status":"passed","title":"should use UserController for DELETE /users/:username/block","duration":8.42599999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Post Operations - PostController Usage"],"fullName":"Users Router Refactoring Tests Post Operations - PostController Usage should use PostController for GET /users/:username/posts","status":"passed","title":"should use PostController for GET /users/:username/posts","duration":8.409199999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply optional auth middleware to follow operations","status":"passed","title":"should apply optional auth middleware to follow operations","duration":4.573100000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to unfollow operations","status":"passed","title":"should apply required auth middleware to unfollow operations","duration":4.00529999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Middleware Application"],"fullName":"Users Router Refactoring Tests Middleware Application should apply required auth middleware to block operations","status":"passed","title":"should apply required auth middleware to block operations","duration":7.451999999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Parameter Handling"],"fullName":"Users Router Refactoring Tests Parameter Handling should pass username parameter to controllers","status":"passed","title":"should pass username parameter to controllers","duration":14.083399999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use UserController for follow operations","status":"passed","title":"should not use UserController for follow operations","duration":6.171900000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Users Router Refactoring Tests","Separation of Concerns"],"fullName":"Users Router Refactoring Tests Separation of Concerns should not use FollowController for user management operations","status":"passed","title":"should not use FollowController for user management operations","duration":10.50120000000004,"failureMessages":[],"meta":{}}],"startTime":1751631762877,"endTime":1751631763025.5012,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/users.router.test.ts"}]}
