{"numTotalTestSuites":300,"numPassedTestSuites":279,"numFailedTestSuites":9,"numPendingTestSuites":12,"numTotalTests":642,"numPassedTests":583,"numFailedTests":24,"numPendingTests":4,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751775257064,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AuthController","register","Successful Registration"],"fullName":"AuthController register Successful Registration should register user successfully","status":"passed","title":"should register user successfully","duration":4.802799999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should return 400 for invalid registration data","status":"passed","title":"should return 400 for invalid registration data","duration":1.0489000000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Validation Errors"],"fullName":"AuthController register Validation Errors should handle empty request body","status":"passed","title":"should handle empty request body","duration":0.6395999999999731,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when email already exists","status":"passed","title":"should return 409 when email already exists","duration":0.6844999999999573,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","User Already Exists"],"fullName":"AuthController register User Already Exists should return 409 when username already exists","status":"passed","title":"should return 409 when username already exists","duration":0.8485000000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when password hashing fails","status":"passed","title":"should return 500 when password hashing fails","duration":0.8687999999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when user creation fails","status":"passed","title":"should return 500 when user creation fails","duration":0.9932000000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","register","Server Errors"],"fullName":"AuthController register Server Errors should return 500 when token generation fails","status":"passed","title":"should return 500 when token generation fails","duration":1.4821000000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Successful Login"],"fullName":"AuthController login Successful Login should login user successfully","status":"passed","title":"should login user successfully","duration":1.641999999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should return 400 for invalid login data","status":"passed","title":"should return 400 for invalid login data","duration":1.0475000000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Validation Errors"],"fullName":"AuthController login Validation Errors should handle empty login request","status":"passed","title":"should handle empty login request","duration":0.6768000000000143,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when user does not exist","status":"passed","title":"should return 401 when user does not exist","duration":0.5749999999999886,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Authentication Errors"],"fullName":"AuthController login Authentication Errors should return 401 when password is incorrect","status":"passed","title":"should return 401 when password is incorrect","duration":0.9296999999999684,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":0.5680999999999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","login","Server Errors"],"fullName":"AuthController login Server Errors should return 500 when password verification fails","status":"passed","title":"should return 500 when password verification fails","duration":0.7020999999999731,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should logout user successfully","status":"passed","title":"should logout user successfully","duration":0.5729000000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","logout"],"fullName":"AuthController logout should handle logout errors gracefully","status":"passed","title":"should handle logout errors gracefully","duration":2.0529999999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Successful User Retrieval"],"fullName":"AuthController getCurrentUser Successful User Retrieval should return current user profile","status":"passed","title":"should return current user profile","duration":0.6938000000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","User Not Found"],"fullName":"AuthController getCurrentUser User Not Found should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.6700000000000159,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should return 500 when database lookup fails","status":"passed","title":"should return 500 when database lookup fails","duration":0.6604000000000383,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthController","getCurrentUser","Server Errors"],"fullName":"AuthController getCurrentUser Server Errors should handle missing user ID in request","status":"passed","title":"should handle missing user ID in request","duration":0.9570000000000505,"failureMessages":[],"meta":{}}],"startTime":1751775258967,"endTime":1751775258994.957,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/AuthController.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":4.687900000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle external ActivityPub actor follow without authentication","status":"passed","title":"should handle external ActivityPub actor follow without authentication","duration":1.4231999999999516,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should reject follow request when no follower identity provided","status":"passed","title":"should reject follow request when no follower identity provided","duration":0.8032000000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":0.7061999999999671,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle inactive user scenario","status":"passed","title":"should handle inactive user scenario","duration":1.4755999999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle service validation errors correctly","status":"passed","title":"should handle service validation errors correctly","duration":0.6069999999999709,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle self-follow prevention","status":"passed","title":"should handle self-follow prevention","duration":0.4811000000000263,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","followUser Business Logic"],"fullName":"FollowController Business Logic Tests followUser Business Logic should handle blocking scenarios","status":"passed","title":"should handle blocking scenarios","duration":0.4530000000000314,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":1.1075999999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should require authentication for unfollow","status":"passed","title":"should require authentication for unfollow","duration":0.9338999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","unfollowUser Business Logic"],"fullName":"FollowController Business Logic Tests unfollowUser Business Logic should handle not following scenario","status":"passed","title":"should handle not following scenario","duration":0.5797000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should successfully get user followers with pagination","status":"passed","title":"should successfully get user followers with pagination","duration":0.7436000000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowers Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowers Business Logic should handle empty followers list or errors","status":"passed","title":"should handle empty followers list or errors","duration":0.5632000000000517,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.5585000000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","getUserFollowStats Business Logic"],"fullName":"FollowController Business Logic Tests getUserFollowStats Business Logic should handle stats for new user with zero follows","status":"passed","title":"should handle stats for new user with zero follows","duration":0.8595000000000255,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map VALIDATION_ERROR to 400 status code","status":"passed","title":"should map VALIDATION_ERROR to 400 status code","duration":0.6338999999999828,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NO_FOLLOWER_IDENTITY to 409 status code","status":"passed","title":"should map NO_FOLLOWER_IDENTITY to 409 status code","duration":0.7343000000000188,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map AUTHENTICATION_REQUIRED to 401 status code","status":"passed","title":"should map AUTHENTICATION_REQUIRED to 401 status code","duration":0.7480999999999653,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map FORBIDDEN to 403 status code","status":"passed","title":"should map FORBIDDEN to 403 status code","duration":0.5168999999999642,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map USER_NOT_FOUND to 404 status code","status":"passed","title":"should map USER_NOT_FOUND to 404 status code","duration":0.5258000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map NOT_FOLLOWING to 404 status code","status":"passed","title":"should map NOT_FOLLOWING to 404 status code","duration":0.41149999999998954,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map ALREADY_FOLLOWING to 409 status code","status":"passed","title":"should map ALREADY_FOLLOWING to 409 status code","duration":0.35660000000001446,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map SELF_FOLLOW_ERROR to 409 status code","status":"passed","title":"should map SELF_FOLLOW_ERROR to 409 status code","duration":0.3993000000000393,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Error Code Mapping"],"fullName":"FollowController Business Logic Tests Error Code Mapping should map UNKNOWN_ERROR to 500 status code","status":"passed","title":"should map UNKNOWN_ERROR to 500 status code","duration":1.1206999999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle database connection errors gracefully","status":"passed","title":"should handle database connection errors gracefully","duration":0.7869000000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle service timeout errors","status":"passed","title":"should handle service timeout errors","duration":1.3772000000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Business Logic Tests","Exception Handling"],"fullName":"FollowController Business Logic Tests Exception Handling should handle unknown exceptions with generic message","status":"passed","title":"should handle unknown exceptions with generic message","duration":1.0707000000000448,"failureMessages":[],"meta":{}}],"startTime":1751775258477,"endTime":1751775258509.0708,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.business.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully follow user with authenticated request","status":"passed","title":"should successfully follow user with authenticated request","duration":3.9319000000000415,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should successfully handle ActivityPub external follow","status":"passed","title":"should successfully handle ActivityPub external follow","duration":0.5965000000001055,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when username is missing","status":"passed","title":"should reject when username is missing","duration":1.0647000000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when user to follow not found","status":"passed","title":"should reject when user to follow not found","duration":0.6231999999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should reject when no follower identity provided","status":"passed","title":"should reject when no follower identity provided","duration":0.5909000000000333,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle service errors correctly","status":"passed","title":"should handle service errors correctly","duration":0.5987999999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","followUser()"],"fullName":"FollowController Unit Tests followUser() should handle unexpected exceptions","status":"passed","title":"should handle unexpected exceptions","duration":0.5190000000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should successfully unfollow user","status":"passed","title":"should successfully unfollow user","duration":0.684099999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should reject when authentication is missing","status":"passed","title":"should reject when authentication is missing","duration":0.65949999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","unfollowUser()"],"fullName":"FollowController Unit Tests unfollowUser() should handle service error for not following","status":"passed","title":"should handle service error for not following","duration":0.3886999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":0.6616999999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should handle custom pagination parameters","status":"passed","title":"should handle custom pagination parameters","duration":0.31920000000002346,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowers()"],"fullName":"FollowController Unit Tests getUserFollowers() should ignore invalid pagination parameters","status":"passed","title":"should ignore invalid pagination parameters","duration":0.2784000000000333,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getUserFollowStats()"],"fullName":"FollowController Unit Tests getUserFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.47280000000000655,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.5232999999999493,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle missing target username","status":"passed","title":"should handle missing target username","duration":0.3184999999999718,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","checkFollowStatus()"],"fullName":"FollowController Unit Tests checkFollowStatus() should handle follower user not found","status":"passed","title":"should handle follower user not found","duration":0.32809999999994943,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.5715000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","bulkCheckFollowing()"],"fullName":"FollowController Unit Tests bulkCheckFollowing() should reject invalid usernames format","status":"passed","title":"should reject invalid usernames format","duration":0.3240000000000691,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should successfully get recent followers for own account","status":"passed","title":"should successfully get recent followers for own account","duration":0.5581999999999425,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should handle custom limit parameter","status":"passed","title":"should handle custom limit parameter","duration":0.3063999999999396,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when trying to view others recent followers","status":"passed","title":"should reject when trying to view others recent followers","duration":0.3328000000000202,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","getRecentFollowers()"],"fullName":"FollowController Unit Tests getRecentFollowers() should reject when not authenticated","status":"passed","title":"should reject when not authenticated","duration":0.3121999999999616,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map validation errors to 400 status","status":"passed","title":"should map validation errors to 400 status","duration":0.2921999999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map authentication errors to 401 status","status":"passed","title":"should map authentication errors to 401 status","duration":1.0375000000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map forbidden errors to 403 status","status":"passed","title":"should map forbidden errors to 403 status","duration":0.288599999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map not found errors to 404 status","status":"passed","title":"should map not found errors to 404 status","duration":0.3261999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map business rule conflicts to 409 status","status":"passed","title":"should map business rule conflicts to 409 status","duration":0.5305000000000746,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowController Unit Tests","Error Code Mapping"],"fullName":"FollowController Unit Tests Error Code Mapping should map unknown errors to 500 status","status":"passed","title":"should map unknown errors to 500 status","duration":0.449799999999982,"failureMessages":[],"meta":{}}],"startTime":1751775257953,"endTime":1751775257973.4497,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/FollowController.test.ts"},{"assertionResults":[{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create a new post successfully","status":"passed","title":"should create a new post successfully","duration":4.3437000000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should create scheduled post successfully","status":"passed","title":"should create scheduled post successfully","duration":1.4096999999999866,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Successful Post Creation"],"fullName":"PostController createPost Successful Post Creation should handle content warning properly","status":"passed","title":"should handle content warning properly","duration":1.5902000000000385,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with empty content","status":"passed","title":"should reject posts with empty content","duration":0.7706999999999766,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts with only whitespace content","status":"passed","title":"should reject posts with only whitespace content","duration":0.9050000000000296,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject posts exceeding character limit","status":"passed","title":"should reject posts exceeding character limit","duration":0.4963999999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts without scheduledFor date","status":"passed","title":"should reject scheduled posts without scheduledFor date","duration":0.43509999999997717,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Input Validation"],"fullName":"PostController createPost Input Validation should reject scheduled posts with past dates","status":"passed","title":"should reject scheduled posts with past dates","duration":0.5052000000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","createPost","Server Errors"],"fullName":"PostController createPost Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.7328999999999724,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should return public posts with pagination","status":"passed","title":"should return public posts with pagination","duration":0.6958999999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should filter out current user own posts when authenticated","status":"passed","title":"should filter out current user own posts when authenticated","duration":0.6426999999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle pagination parameters correctly","status":"passed","title":"should handle pagination parameters correctly","duration":0.5045000000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Successful Post Retrieval"],"fullName":"PostController getPosts Successful Post Retrieval should handle invalid pagination parameters","status":"passed","title":"should handle invalid pagination parameters","duration":0.37079999999997426,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPosts","Server Errors"],"fullName":"PostController getPosts Server Errors should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":0.425200000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return post when found and published","status":"passed","title":"should return post when found and published","duration":0.5206000000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Successful Post Retrieval"],"fullName":"PostController getPostById Successful Post Retrieval should return unpublished post when author is viewing","status":"passed","title":"should return unpublished post when author is viewing","duration":0.43909999999999627,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 for unpublished post when not the author","status":"passed","title":"should return 404 for unpublished post when not the author","duration":0.4134999999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Access Control"],"fullName":"PostController getPostById Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.3865999999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getPostById","Input Validation"],"fullName":"PostController getPostById Input Validation should return 400 when post ID is missing","status":"passed","title":"should return 400 when post ID is missing","duration":0.4177999999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Successful Post Deletion"],"fullName":"PostController deletePost Successful Post Deletion should delete own post successfully","status":"passed","title":"should delete own post successfully","duration":1.1757000000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 403 when trying to delete another user post","status":"passed","title":"should return 403 when trying to delete another user post","duration":0.4475999999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","deletePost","Access Control"],"fullName":"PostController deletePost Access Control should return 404 when post does not exist","status":"passed","title":"should return 404 when post does not exist","duration":0.38900000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return user posts with pagination","status":"passed","title":"should return user posts with pagination","duration":0.6808000000000334,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostController","getUserPosts","Successful User Posts Retrieval"],"fullName":"PostController getUserPosts Successful User Posts Retrieval should return 404 when user does not exist","status":"passed","title":"should return 404 when user does not exist","duration":0.5143999999999664,"failureMessages":[],"meta":{}}],"startTime":1751775261610,"endTime":1751775261632.5144,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/controllers/PostController.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/Follow.integration.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/integration/PostUser.integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should successfully authenticate with valid token","status":"passed","title":"should successfully authenticate with valid token","duration":6.588899999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle different token formats correctly","status":"passed","title":"should handle different token formats correctly","duration":1.838200000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle user with numeric ID","status":"passed","title":"should handle user with numeric ID","duration":0.981899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Valid Authentication should handle case-sensitive headers","status":"passed","title":"should handle case-sensitive headers","duration":0.7444999999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when no authorization header is provided","status":"passed","title":"should return 401 when no authorization header is provided","duration":1.7305999999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header is empty","status":"passed","title":"should return 401 when authorization header is empty","duration":0.910000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when authorization header has wrong format","status":"passed","title":"should return 401 when authorization header has wrong format","duration":0.8677000000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Missing Authentication should return 401 when Bearer token is missing","status":"passed","title":"should return 401 when Bearer token is missing","duration":0.5840999999999781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for invalid token","status":"passed","title":"should return 401 for invalid token","duration":1.1648000000000138,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for expired token","status":"passed","title":"should return 401 for expired token","duration":0.582300000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should return 401 for malformed token","status":"passed","title":"should return 401 for malformed token","duration":0.4460000000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle generic authentication errors","status":"passed","title":"should handle generic authentication errors","duration":0.42079999999998563,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Invalid Authentication should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions","duration":1.0375999999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle extractTokenFromHeader throwing an error","status":"passed","title":"should handle extractTokenFromHeader throwing an error","duration":0.7801999999999794,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createAuthMiddleware (Required Authentication)","Error Handling Edge Cases"],"fullName":"Authentication Middleware createAuthMiddleware (Required Authentication) Error Handling Edge Cases should handle verifyToken returning null or undefined","status":"passed","title":"should handle verifyToken returning null or undefined","duration":0.8562000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should authenticate when valid token is provided","status":"passed","title":"should authenticate when valid token is provided","duration":0.8788999999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Valid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Valid Authentication should handle valid authentication same as required middleware","status":"passed","title":"should handle valid authentication same as required middleware","duration":1.0996999999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when no token is provided","status":"passed","title":"should continue without user when no token is provided","duration":0.7322000000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when authorization header is empty","status":"passed","title":"should continue without user when authorization header is empty","duration":0.523900000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Missing Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Missing Authentication should continue without user when Bearer format is wrong","status":"passed","title":"should continue without user when Bearer format is wrong","duration":0.49569999999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is invalid","status":"passed","title":"should continue without user when token is invalid","duration":0.6770000000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user when token is expired","status":"passed","title":"should continue without user when token is expired","duration":0.5555999999999699,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should continue without user for any token verification error","status":"passed","title":"should continue without user for any token verification error","duration":0.5523000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","createOptionalAuthMiddleware (Optional Authentication)","Invalid Authentication"],"fullName":"Authentication Middleware createOptionalAuthMiddleware (Optional Authentication) Invalid Authentication should handle extractTokenFromHeader errors gracefully","status":"passed","title":"should handle extractTokenFromHeader errors gracefully","duration":1.2158999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createAuthMiddleware","status":"passed","title":"should create middleware function from createAuthMiddleware","duration":0.5823999999999501,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create middleware function from createOptionalAuthMiddleware","status":"passed","title":"should create middleware function from createOptionalAuthMiddleware","duration":0.4696999999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should create independent middleware instances","status":"passed","title":"should create independent middleware instances","duration":0.6497999999999706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Middleware Factory Functions"],"fullName":"Authentication Middleware Middleware Factory Functions should handle different AuthService instances","status":"passed","title":"should handle different AuthService instances","duration":0.49289999999996326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should work in sequence with multiple middleware","status":"passed","title":"should work in sequence with multiple middleware","duration":0.6399999999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should preserve existing request properties","status":"passed","title":"should preserve existing request properties","duration":0.6072999999999524,"failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Middleware","Integration Scenarios"],"fullName":"Authentication Middleware Integration Scenarios should handle concurrent requests independently","status":"passed","title":"should handle concurrent requests independently","duration":1.4948999999999728,"failureMessages":[],"meta":{}}],"startTime":1751775258518,"endTime":1751775258555.4949,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/authMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid username and no actorId","status":"passed","title":"should pass validation with valid username and no actorId","duration":4.02780000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with valid ActivityPub actor ID","status":"passed","title":"should pass validation with valid ActivityPub actor ID","duration":1.5534000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":1.0247000000000526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with various valid ActivityPub URLs","status":"passed","title":"should pass validation with various valid ActivityPub URLs","duration":1.467999999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Valid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Valid Follow Requests should pass validation with null actorId","status":"passed","title":"should pass validation with null actorId","duration":0.415300000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":5.545800000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowRequest","Invalid Follow Requests"],"fullName":"Follow Validation Middleware validateFollowRequest Invalid Follow Requests should reject invalid ActivityPub actor URLs","status":"passed","title":"should reject invalid ActivityPub actor URLs","duration":2.7468000000000075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.3929000000000542,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Valid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Valid Unfollow Requests should pass validation with various valid usernames","status":"passed","title":"should pass validation with various valid usernames","duration":0.533800000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateUnfollowRequest","Invalid Unfollow Requests"],"fullName":"Follow Validation Middleware validateUnfollowRequest Invalid Unfollow Requests should reject invalid usernames","status":"passed","title":"should reject invalid usernames","duration":2.4640999999999167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":1.4782000000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with valid pagination parameters","status":"passed","title":"should pass validation with valid pagination parameters","duration":0.7259999999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should pass validation with includeInactive flag","status":"passed","title":"should pass validation with includeInactive flag","duration":0.630800000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Valid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Valid Follower Queries should handle includeInactive false correctly","status":"passed","title":"should handle includeInactive false correctly","duration":0.5552000000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject invalid username in params","status":"passed","title":"should reject invalid username in params","duration":0.6336000000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":1.1136000000000195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":1.0104000000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateFollowerQuery","Invalid Follower Queries"],"fullName":"Follow Validation Middleware validateFollowerQuery Invalid Follower Queries should reject zero or negative page numbers","status":"passed","title":"should reject zero or negative page numbers","duration":1.0430999999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with acct: format","status":"passed","title":"should pass validation with acct: format","duration":0.6159000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with HTTPS URL format","status":"passed","title":"should pass validation with HTTPS URL format","duration":0.6177999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various acct: formats","status":"passed","title":"should pass validation with various acct: formats","duration":0.841199999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Valid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Valid WebFinger Queries should pass validation with various HTTPS URL formats","status":"passed","title":"should pass validation with various HTTPS URL formats","duration":0.7175000000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject invalid resource formats","status":"passed","title":"should reject invalid resource formats","duration":4.030599999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateWebFingerQuery","Invalid WebFinger Queries"],"fullName":"Follow Validation Middleware validateWebFingerQuery Invalid WebFinger Queries should reject missing resource parameter","status":"passed","title":"should reject missing resource parameter","duration":0.9286999999999352,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with valid ActivityPub request","status":"passed","title":"should pass validation with valid ActivityPub request","duration":0.8167999999999438,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with extended ActivityPub content type","status":"passed","title":"should pass validation with extended ActivityPub content type","duration":0.776299999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Valid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Valid ActivityPub Inbox Requests should pass validation with all required ActivityPub fields","status":"passed","title":"should pass validation with all required ActivityPub fields","duration":1.0979000000000951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-ActivityPub content type","status":"passed","title":"should reject non-ActivityPub content type","duration":0.953899999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject missing content type","status":"passed","title":"should reject missing content type","duration":0.5464000000000624,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject invalid username","status":"passed","title":"should reject invalid username","duration":0.4499999999999318,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject non-object request body","status":"passed","title":"should reject non-object request body","duration":3.878400000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","validateActivityPubInbox","Invalid ActivityPub Inbox Requests"],"fullName":"Follow Validation Middleware validateActivityPubInbox Invalid ActivityPub Inbox Requests should reject ActivityPub activities missing required fields","status":"passed","title":"should reject ActivityPub activities missing required fields","duration":2.0120000000000573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Validation Middleware","Error Handling"],"fullName":"Follow Validation Middleware Error Handling should handle validation errors properly","status":"passed","title":"should handle validation errors properly","duration":0.782100000000014,"failureMessages":[],"meta":{}}],"startTime":1751775257984,"endTime":1751775258037.782,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/followValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with valid image file","status":"passed","title":"should pass validation with valid image file","duration":5.709099999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with all supported image types","status":"passed","title":"should pass validation with all supported image types","duration":0.9912999999999101,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with supported video types","status":"passed","title":"should pass validation with supported video types","duration":0.8563000000000329,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation without alt text","status":"passed","title":"should pass validation without alt text","duration":0.95799999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Valid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Valid Media Uploads should pass validation with empty alt text","status":"passed","title":"should pass validation with empty alt text","duration":0.9307999999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject upload without file","status":"passed","title":"should reject upload without file","duration":3.032699999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject unsupported file types","status":"passed","title":"should reject unsupported file types","duration":4.6778000000000475,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject files that are too large","status":"passed","title":"should reject files that are too large","duration":0.5202000000000453,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject empty files","status":"passed","title":"should reject empty files","duration":0.6080000000000609,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateMediaUpload","Invalid Media Uploads"],"fullName":"Media & Moderation Validation Middleware validateMediaUpload Invalid Media Uploads should reject alt text that is too long","status":"passed","title":"should reject alt text that is too long","duration":1.4525999999999613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for user report","status":"passed","title":"should pass validation for user report","duration":0.9898000000000593,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for post report","status":"passed","title":"should pass validation for post report","duration":0.32129999999995107,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation for all report types","status":"passed","title":"should pass validation for all report types","duration":1.175799999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Valid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Valid Report Creation should pass validation with maximum length description","status":"passed","title":"should pass validation with maximum length description","duration":0.7066999999999553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject invalid report type","status":"passed","title":"should reject invalid report type","duration":1.7637999999999465,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too short","status":"passed","title":"should reject description that is too short","duration":1.2040999999999258,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject description that is too long","status":"passed","title":"should reject description that is too long","duration":0.9805000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with both user and post IDs","status":"passed","title":"should reject report with both user and post IDs","duration":1.115799999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateCreateReport","Invalid Report Creation"],"fullName":"Media & Moderation Validation Middleware validateCreateReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.6298000000000457,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with reason","status":"passed","title":"should pass validation with reason","duration":1.480799999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation without reason","status":"passed","title":"should pass validation without reason","duration":0.4923999999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Valid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Valid User Blocking should pass validation with empty reason","status":"passed","title":"should pass validation with empty reason","duration":0.44429999999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateBlockUser","Invalid User Blocking"],"fullName":"Media & Moderation Validation Middleware validateBlockUser Invalid User Blocking should reject reason that is too long","status":"passed","title":"should reject reason that is too long","duration":0.5525000000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with valid username","status":"passed","title":"should pass validation with valid username","duration":0.4393999999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with minimum length username","status":"passed","title":"should pass validation with minimum length username","duration":0.30579999999997654,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with maximum length username","status":"passed","title":"should pass validation with maximum length username","duration":0.5231999999999744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Valid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Valid Usernames should pass validation with underscores","status":"passed","title":"should pass validation with underscores","duration":0.5247000000000526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too short","status":"passed","title":"should reject username that is too short","duration":0.8698000000000548,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username that is too long","status":"passed","title":"should reject username that is too long","duration":0.9248999999999796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","validateUsernameParam","Invalid Usernames"],"fullName":"Media & Moderation Validation Middleware validateUsernameParam Invalid Usernames should reject username with invalid characters","status":"passed","title":"should reject username with invalid characters","duration":4.626300000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media & Moderation Validation Middleware","Error Handling"],"fullName":"Media & Moderation Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":0.7048999999999523,"failureMessages":[],"meta":{}}],"startTime":1751775257986,"endTime":1751775258030.7048,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/mediaModerationValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with minimal valid data","status":"passed","title":"should pass validation with minimal valid data","duration":5.659600000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with all optional fields","status":"passed","title":"should pass validation with all optional fields","duration":2.1195999999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should pass validation with empty content warning","status":"passed","title":"should pass validation with empty content warning","duration":0.9540000000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Valid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Valid Post Creation should apply default values correctly","status":"passed","title":"should apply default values correctly","duration":0.861500000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject empty content","status":"passed","title":"should reject empty content","duration":4.706600000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":1.6757000000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject content warning that is too long","status":"passed","title":"should reject content warning that is too long","duration":3.3290000000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled post without scheduled date","status":"passed","title":"should reject scheduled post without scheduled date","duration":1.781499999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject scheduled date in the past","status":"passed","title":"should reject scheduled date in the past","duration":1.8589000000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should reject invalid datetime format","status":"passed","title":"should reject invalid datetime format","duration":1.0283000000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Invalid Post Creation"],"fullName":"Post Validation Middleware validateCreatePost Invalid Post Creation should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors","duration":0.822400000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle missing request body","status":"passed","title":"should handle missing request body","duration":0.4977000000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should trim content whitespace","status":"passed","title":"should trim content whitespace","duration":0.6913999999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateCreatePost","Edge Cases"],"fullName":"Post Validation Middleware validateCreatePost Edge Cases should handle non-string content types","status":"passed","title":"should handle non-string content types","duration":0.7509000000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with partial update data","status":"passed","title":"should pass validation with partial update data","duration":0.4922000000000253,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with all updatable fields","status":"passed","title":"should pass validation with all updatable fields","duration":0.481899999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Valid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Valid Post Updates should pass validation with empty body","status":"passed","title":"should pass validation with empty body","duration":0.5442999999999643,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject empty content when provided","status":"passed","title":"should reject empty content when provided","duration":1.0518999999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validateUpdatePost","Invalid Post Updates"],"fullName":"Post Validation Middleware validateUpdatePost Invalid Post Updates should reject content that is too long","status":"passed","title":"should reject content that is too long","duration":0.4765000000000441,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with default parameters","status":"passed","title":"should pass validation with default parameters","duration":1.459799999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with valid page and limit","status":"passed","title":"should pass validation with valid page and limit","duration":0.3675999999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Valid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Valid Query Parameters should pass validation with userId filter","status":"passed","title":"should pass validation with userId filter","duration":1.7595999999999776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject page number that is too high","status":"passed","title":"should reject page number that is too high","duration":0.676400000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject negative page number","status":"passed","title":"should reject negative page number","duration":0.5115000000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject limit that is too high","status":"passed","title":"should reject limit that is too high","duration":0.4925000000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostQuery","Invalid Query Parameters"],"fullName":"Post Validation Middleware validatePostQuery Invalid Query Parameters should reject zero limit","status":"passed","title":"should reject zero limit","duration":0.3494000000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with valid post ID","status":"passed","title":"should pass validation with valid post ID","duration":0.4381000000000199,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Valid Post IDs"],"fullName":"Post Validation Middleware validatePostId Valid Post IDs should pass validation with alphanumeric ID","status":"passed","title":"should pass validation with alphanumeric ID","duration":0.27370000000001937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject empty post ID","status":"passed","title":"should reject empty post ID","duration":0.6604000000000383,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject missing post ID","status":"passed","title":"should reject missing post ID","duration":0.39990000000000236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","validatePostId","Invalid Post IDs"],"fullName":"Post Validation Middleware validatePostId Invalid Post IDs should reject ID that is too long","status":"passed","title":"should reject ID that is too long","duration":0.3866999999999621,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Validation Middleware","Error Handling"],"fullName":"Post Validation Middleware Error Handling should handle internal server errors gracefully","status":"passed","title":"should handle internal server errors gracefully","duration":0.727800000000002,"failureMessages":[],"meta":{}}],"startTime":1751775258541,"endTime":1751775258583.7278,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/postValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should allow requests within the limit (5 per minute)","status":"passed","title":"should allow requests within the limit (5 per minute)","duration":150.59180000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should block requests exceeding the limit (6th request)","status":"passed","title":"should block requests exceeding the limit (6th request)","duration":488.70709999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should include rate limit headers","status":"passed","title":"should include rate limit headers","duration":118.61730000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Authentication Rate Limiting"],"fullName":"Rate Limiting Middleware Authentication Rate Limiting should use IP address for rate limiting when user not authenticated","status":"passed","title":"should use IP address for rate limiting when user not authenticated","duration":503.02420000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should allow 10 posts per hour for authenticated users","status":"passed","title":"should allow 10 posts per hour for authenticated users","duration":154.06830000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should block 11th post creation request","status":"passed","title":"should block 11th post creation request","duration":822.0052000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should use user ID for rate limiting when authenticated","status":"passed","title":"should use user ID for rate limiting when authenticated","duration":117.29300000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Post Creation Rate Limiting"],"fullName":"Rate Limiting Middleware Post Creation Rate Limiting should fall back to IP when user not authenticated","status":"passed","title":"should fall back to IP when user not authenticated","duration":117.78939999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should allow 20 follow operations per hour","status":"passed","title":"should allow 20 follow operations per hour","duration":161.94630000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Follow Operation Rate Limiting"],"fullName":"Rate Limiting Middleware Follow Operation Rate Limiting should block 21st follow operation","status":"passed","title":"should block 21st follow operation","duration":1396.5121,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should allow 20 uploads per hour","status":"passed","title":"should allow 20 uploads per hour","duration":154.19680000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Media Upload Rate Limiting"],"fullName":"Rate Limiting Middleware Media Upload Rate Limiting should block 21st media upload","status":"passed","title":"should block 21st media upload","duration":1385.6013999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should allow 100 requests per minute","status":"passed","title":"should allow 100 requests per minute","duration":317.8595999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should block 101st general API request","status":"passed","title":"should block 101st general API request","duration":302.4980000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","General API Rate Limiting"],"fullName":"Rate Limiting Middleware General API Rate Limiting should use IP address for general rate limiting","status":"passed","title":"should use IP address for general rate limiting","duration":112.16069999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should allow 3 password reset attempts per hour","status":"passed","title":"should allow 3 password reset attempts per hour","duration":124.07390000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Password Reset Rate Limiting"],"fullName":"Rate Limiting Middleware Password Reset Rate Limiting should block 4th password reset attempt","status":"passed","title":"should block 4th password reset attempt","duration":350.6437999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should return consistent error format for all rate limits","status":"passed","title":"should return consistent error format for all rate limits","duration":413.91039999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Error Response Format"],"fullName":"Rate Limiting Middleware Error Response Format should include retry after information","status":"passed","title":"should include retry after information","duration":415.52310000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should export correct configuration values","status":"passed","title":"should export correct configuration values","duration":112.97150000000147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting Middleware","Rate Limit Configuration"],"fullName":"Rate Limiting Middleware Rate Limit Configuration should have descriptions for all rate limit types","status":"passed","title":"should have descriptions for all rate limit types","duration":116.64020000000164,"failureMessages":[],"meta":{}}],"startTime":1751775259287,"endTime":1751775267125.6401,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should track rate limits by user ID for authenticated users","status":"passed","title":"should track rate limits by user ID for authenticated users","duration":333.55190000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Authenticated User Rate Limiting (by User ID)"],"fullName":"Rate Limiting: User ID vs IP Address Authenticated User Rate Limiting (by User ID) should allow different users to have separate rate limits","status":"passed","title":"should allow different users to have separate rate limits","duration":315.00930000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should track rate limits by IP address for anonymous users","status":"passed","title":"should track rate limits by IP address for anonymous users","duration":316.77099999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Anonymous User Rate Limiting (by IP Address)"],"fullName":"Rate Limiting: User ID vs IP Address Anonymous User Rate Limiting (by IP Address) should allow different IP addresses to have separate rate limits","status":"passed","title":"should allow different IP addresses to have separate rate limits","duration":317.33580000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should prioritize user ID over IP address when user is authenticated","status":"passed","title":"should prioritize user ID over IP address when user is authenticated","duration":131.82460000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","User ID vs IP Priority"],"fullName":"Rate Limiting: User ID vs IP Address User ID vs IP Priority should demonstrate same user from different IPs shares rate limit","status":"passed","title":"should demonstrate same user from different IPs shares rate limit","duration":470.64130000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Rate Limiting: User ID vs IP Address","Fallback Behavior"],"fullName":"Rate Limiting: User ID vs IP Address Fallback Behavior should fallback to IP when user ID is not available","status":"passed","title":"should fallback to IP when user ID is not available","duration":114.79850000000033,"failureMessages":[],"meta":{}}],"startTime":1751775259230,"endTime":1751775261230.7986,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/rateLimitUserVsIP.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/middleware/securityValidationMiddleware.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for already published posts","status":"passed","title":"should return false for already published posts","duration":1.405300000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for draft posts with content","status":"passed","title":"should return true for draft posts with content","duration":0.25540000000000873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with empty content","status":"passed","title":"should return false for posts with empty content","duration":0.19810000000001082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for posts with only whitespace content","status":"passed","title":"should return false for posts with only whitespace content","duration":0.1826000000000363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.2740000000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isReadyToPublish()"],"fullName":"Post Business Logic Methods isReadyToPublish() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.23339999999996053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return true for unpublished, unscheduled posts","status":"passed","title":"should return true for unpublished, unscheduled posts","duration":0.18900000000002137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for published posts","status":"passed","title":"should return false for published posts","duration":0.17169999999998709,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isDraft()"],"fullName":"Post Business Logic Methods isDraft() should return false for scheduled posts","status":"passed","title":"should return false for scheduled posts","duration":0.4298000000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return true for scheduled posts with future dates","status":"passed","title":"should return true for scheduled posts with future dates","duration":0.366299999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts with past dates","status":"passed","title":"should return false for scheduled posts with past dates","duration":0.37630000000001473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.26530000000002474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","isScheduledPost()"],"fullName":"Post Business Logic Methods isScheduledPost() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.29189999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return true for scheduled posts with past dates","status":"passed","title":"should return true for scheduled posts with past dates","duration":0.33339999999998327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts with future dates","status":"passed","title":"should return false for scheduled posts with future dates","duration":0.18110000000001492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for unscheduled posts","status":"passed","title":"should return false for unscheduled posts","duration":0.18070000000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","hasExpiredSchedule()"],"fullName":"Post Business Logic Methods hasExpiredSchedule() should return false for scheduled posts without scheduledFor date","status":"passed","title":"should return false for scheduled posts without scheduledFor date","duration":0.17270000000002028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when shorter than limit","status":"passed","title":"should return full content when shorter than limit","duration":0.2048000000000343,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should return full content when exactly at limit","status":"passed","title":"should return full content when exactly at limit","duration":0.1531999999999698,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate content longer than limit","status":"passed","title":"should truncate content longer than limit","duration":0.23130000000003292,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should truncate at word boundaries when possible","status":"passed","title":"should truncate at word boundaries when possible","duration":0.18180000000000973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should use default limit of 280 characters","status":"passed","title":"should use default limit of 280 characters","duration":0.16469999999998208,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","getContentPreview()"],"fullName":"Post Business Logic Methods getContentPreview() should handle custom length limits","status":"passed","title":"should handle custom length limits","duration":0.1634000000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should generate correct ActivityPub URI format","status":"passed","title":"should generate correct ActivityPub URI format","duration":0.16779999999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should handle different domains","status":"passed","title":"should handle different domains","duration":0.13999999999998636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","generateActivityId()"],"fullName":"Post Business Logic Methods generateActivityId() should work with complex post IDs","status":"passed","title":"should work with complex post IDs","duration":0.13260000000002492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should convert published post to public format","status":"passed","title":"should convert published post to public format","duration":0.8876999999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should work without media attachments","status":"passed","title":"should work without media attachments","duration":0.17489999999997963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should handle null content warning","status":"passed","title":"should handle null content warning","duration":0.16579999999999018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.8585999999999672,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toPublicPost()"],"fullName":"Post Business Logic Methods toPublicPost() should throw error for posts without publishedAt date","status":"passed","title":"should throw error for posts without publishedAt date","duration":0.23239999999998417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should convert post to draft format","status":"passed","title":"should convert post to draft format","duration":0.35770000000002256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toDraft()"],"fullName":"Post Business Logic Methods toDraft() should handle null values correctly","status":"passed","title":"should handle null values correctly","duration":0.1716000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should convert published post to summary format","status":"passed","title":"should convert published post to summary format","duration":0.23430000000001883,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should default mediaCount to 0","status":"passed","title":"should default mediaCount to 0","duration":0.14170000000001437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to false for null warning","status":"passed","title":"should set hasContentWarning to false for null warning","duration":0.1339999999999577,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should set hasContentWarning to true for empty string warning","status":"passed","title":"should set hasContentWarning to true for empty string warning","duration":0.1319000000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","toSummary()"],"fullName":"Post Business Logic Methods toSummary() should throw error for unpublished posts","status":"passed","title":"should throw error for unpublished posts","duration":0.22029999999995198,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update post content","status":"passed","title":"should update post content","duration":0.30649999999997135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update content warning","status":"passed","title":"should update content warning","duration":0.14289999999999736,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should clear content warning with null","status":"passed","title":"should clear content warning with null","duration":0.13530000000002929,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should update publishing status","status":"passed","title":"should update publishing status","duration":0.244199999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should set publishedAt when publishing for first time","status":"passed","title":"should set publishedAt when publishing for first time","duration":0.19120000000003756,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should not change publishedAt when already published","status":"passed","title":"should not change publishedAt when already published","duration":0.15179999999998017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should preserve unchanged fields","status":"passed","title":"should preserve unchanged fields","duration":0.2248000000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Business Logic Methods","update()"],"fullName":"Post Business Logic Methods update() should return new Post instance","status":"passed","title":"should return new Post instance","duration":0.34550000000001546,"failureMessages":[],"meta":{}}],"startTime":1751775259071,"endTime":1751775259085.3455,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.businessLogic.test.ts"},{"assertionResults":[{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should transition from draft to published","status":"passed","title":"should transition from draft to published","duration":1.7331000000000358,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should set publishedAt timestamp when transitioning to published","status":"passed","title":"should set publishedAt timestamp when transitioning to published","duration":0.8875000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should allow editing content before publishing","status":"passed","title":"should allow editing content before publishing","duration":0.428100000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Published Workflow"],"fullName":"Post State Transitions Draft → Published Workflow should preserve other fields during draft to published transition","status":"passed","title":"should preserve other fields during draft to published transition","duration":0.30459999999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from draft to scheduled","status":"passed","title":"should transition from draft to scheduled","duration":0.37340000000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should detect when scheduled post is ready to publish","status":"passed","title":"should detect when scheduled post is ready to publish","duration":0.2947000000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should transition from expired scheduled to published","status":"passed","title":"should transition from expired scheduled to published","duration":0.2837999999999852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Draft → Scheduled → Published Workflow"],"fullName":"Post State Transitions Draft → Scheduled → Published Workflow should preserve scheduled metadata when publishing","status":"passed","title":"should preserve scheduled metadata when publishing","duration":0.23229999999995243,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should prevent transition from published back to draft","status":"passed","title":"should prevent transition from published back to draft","duration":0.3634999999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content updates on published posts","status":"passed","title":"should allow content updates on published posts","duration":0.2585000000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Published Post State Management"],"fullName":"Post State Transitions Published Post State Management should allow content warning updates on published posts","status":"passed","title":"should allow content warning updates on published posts","duration":0.18999999999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle scheduling future posts","status":"passed","title":"should handle scheduling future posts","duration":0.21280000000001564,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle rescheduling posts","status":"passed","title":"should handle rescheduling posts","duration":0.20229999999997972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Schedule Management Workflows"],"fullName":"Post State Transitions Schedule Management Workflows should handle canceling scheduled posts (back to draft)","status":"passed","title":"should handle canceling scheduled posts (back to draft)","duration":0.223700000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with invalid scheduling state","status":"passed","title":"should handle posts with invalid scheduling state","duration":0.17989999999997508,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with past scheduled dates","status":"passed","title":"should handle posts with past scheduled dates","duration":0.191599999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle posts with inconsistent published state","status":"passed","title":"should handle posts with inconsistent published state","duration":0.8645000000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","Edge Cases and Error States"],"fullName":"Post State Transitions Edge Cases and Error States should handle empty content in state transitions","status":"passed","title":"should handle empty content in state transitions","duration":0.25159999999999627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle boundary conditions for scheduling","status":"passed","title":"should handle boundary conditions for scheduling","duration":0.15499999999997272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post State Transitions","State Transition Timing"],"fullName":"Post State Transitions State Transition Timing should handle multiple rapid state changes","status":"passed","title":"should handle multiple rapid state changes","duration":0.28050000000001774,"failureMessages":[],"meta":{}}],"startTime":1751775262312,"endTime":1751775262321.2805,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.stateTransitions.test.ts"},{"assertionResults":[{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept valid content within character limits","status":"passed","title":"should accept valid content within character limits","duration":3.090000000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject empty content","status":"passed","title":"should reject empty content","duration":0.7152999999999565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content that is only whitespace","status":"passed","title":"should reject content that is only whitespace","duration":0.5079000000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should reject content exceeding 5000 characters","status":"passed","title":"should reject content exceeding 5000 characters","duration":0.38680000000005066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should accept content exactly at 5000 character limit","status":"passed","title":"should accept content exactly at 5000 character limit","duration":0.3791999999999689,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Validation"],"fullName":"Post Creation Validation Content Validation should trim whitespace from content","status":"passed","title":"should trim whitespace from content","duration":0.287399999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept valid content warning","status":"passed","title":"should accept valid content warning","duration":0.2458000000000311,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept empty string as content warning","status":"passed","title":"should accept empty string as content warning","duration":0.2126999999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept missing content warning field","status":"passed","title":"should accept missing content warning field","duration":0.3949000000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should reject content warning exceeding 200 characters","status":"passed","title":"should reject content warning exceeding 200 characters","duration":0.6794999999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should accept content warning exactly at 200 character limit","status":"passed","title":"should accept content warning exactly at 200 character limit","duration":0.21120000000001937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Content Warning Validation"],"fullName":"Post Creation Validation Content Warning Validation should trim whitespace from content warning","status":"passed","title":"should trim whitespace from content warning","duration":0.18250000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept scheduled post with future date","status":"passed","title":"should accept scheduled post with future date","duration":1.4162000000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post without scheduledFor date","status":"passed","title":"should reject scheduled post without scheduledFor date","duration":0.42159999999995534,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with past date","status":"passed","title":"should reject scheduled post with past date","duration":0.38769999999999527,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should reject scheduled post with invalid date format","status":"passed","title":"should reject scheduled post with invalid date format","duration":0.26080000000001746,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Scheduled Post Validation"],"fullName":"Post Creation Validation Scheduled Post Validation should accept non-scheduled post with scheduledFor date","status":"passed","title":"should accept non-scheduled post with scheduledFor date","duration":0.22469999999998436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isPublished to true","status":"passed","title":"should default isPublished to true","duration":0.17269999999996344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should accept explicit isPublished false for drafts","status":"passed","title":"should accept explicit isPublished false for drafts","duration":0.17369999999999663,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Publishing Status Validation"],"fullName":"Post Creation Validation Publishing Status Validation should default isScheduled to false","status":"passed","title":"should default isScheduled to false","duration":0.1641999999999939,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept draft scheduled post","status":"passed","title":"should accept draft scheduled post","duration":0.25430000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should accept maximum length content with maximum length warning","status":"passed","title":"should accept maximum length content with maximum length warning","duration":0.20050000000003365,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Creation Validation","Complex Validation Scenarios"],"fullName":"Post Creation Validation Complex Validation Scenarios should handle null scheduledFor appropriately","status":"passed","title":"should handle null scheduledFor appropriately","duration":0.19390000000004193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should create Post instance with valid data","status":"passed","title":"should create Post instance with valid data","duration":0.23500000000001364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should handle optional fields correctly","status":"passed","title":"should handle optional fields correctly","duration":0.13980000000003656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Post Model Construction"],"fullName":"Post Model Construction should convert undefined optional fields to null","status":"passed","title":"should convert undefined optional fields to null","duration":0.17849999999998545,"failureMessages":[],"meta":{}}],"startTime":1751775268711,"endTime":1751775268724.235,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/Post.validation.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with all provided data","status":"passed","title":"should create user with all provided data","duration":2.310799999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should create user with minimal required data","status":"passed","title":"should create user with minimal required data","duration":0.3816999999999666,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle displayName defaulting to username when not provided","status":"passed","title":"should handle displayName defaulting to username when not provided","duration":0.1523000000000252,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should use provided displayName over username when both exist","status":"passed","title":"should use provided displayName over username when both exist","duration":0.17070000000001073,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle empty string values properly","status":"passed","title":"should handle empty string values properly","duration":0.21699999999998454,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle null values properly","status":"passed","title":"should handle null values properly","duration":0.2984000000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","User Constructor"],"fullName":"User Model - Class Constructor and Methods User Constructor should handle undefined values properly","status":"passed","title":"should handle undefined values properly","duration":0.25610000000000355,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile data excluding sensitive information","status":"passed","title":"should return public profile data excluding sensitive information","duration":1.956200000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should return public profile with default values","status":"passed","title":"should return public profile with default values","duration":0.4753999999999792,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPublicProfile Method"],"fullName":"User Model - Class Constructor and Methods getPublicProfile Method should handle null values in public profile","status":"passed","title":"should handle null values in public profile","duration":0.21530000000001337,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile data including all information","status":"passed","title":"should return private profile data including all information","duration":1.3935000000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should return private profile with default values","status":"passed","title":"should return private profile with default values","duration":0.24830000000002883,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","getPrivateProfile Method"],"fullName":"User Model - Class Constructor and Methods getPrivateProfile Method should include all fields from public profile","status":"passed","title":"should include all fields from public profile","duration":0.3813999999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateRegistration static method","status":"passed","title":"should have validateRegistration static method","duration":1.579499999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateLogin static method","status":"passed","title":"should have validateLogin static method","duration":0.31450000000000955,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Static Validation Methods"],"fullName":"User Model - Class Constructor and Methods Static Validation Methods should have validateProfileUpdate static method","status":"passed","title":"should have validateProfileUpdate static method","duration":0.4430999999999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle data object with extra properties","status":"passed","title":"should handle data object with extra properties","duration":0.307200000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":0.15950000000003683,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Class Constructor and Methods","Edge Cases and Error Handling"],"fullName":"User Model - Class Constructor and Methods Edge Cases and Error Handling should handle different verification tiers","status":"passed","title":"should handle different verification tiers","duration":0.13240000000001828,"failureMessages":[],"meta":{}}],"startTime":1751775268338,"endTime":1751775268351.1323,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.class.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.login.test.ts"},{"assertionResults":[{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with all optional fields provided","status":"passed","title":"should validate update with all optional fields provided","duration":3.540300000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only displayName","status":"passed","title":"should validate update with only displayName","duration":0.6313000000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only bio","status":"passed","title":"should validate update with only bio","duration":0.36099999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate update with only website","status":"passed","title":"should validate update with only website","duration":0.36930000000000973,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should validate empty update (no fields provided)","status":"passed","title":"should validate empty update (no fields provided)","duration":0.2563999999999851,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept displayName at maximum length (50 characters)","status":"passed","title":"should accept displayName at maximum length (50 characters)","duration":0.32789999999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept bio at maximum length (500 characters)","status":"passed","title":"should accept bio at maximum length (500 characters)","duration":0.20839999999998327,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Profile Update Data"],"fullName":"User Model - Profile Update Validation Valid Profile Update Data should accept empty string for website (to clear website)","status":"passed","title":"should accept empty string for website (to clear website)","duration":0.543200000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept https websites","status":"passed","title":"should accept https websites","duration":0.5262000000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept http websites","status":"passed","title":"should accept http websites","duration":0.32200000000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with paths","status":"passed","title":"should accept websites with paths","duration":0.20330000000001291,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with query parameters","status":"passed","title":"should accept websites with query parameters","duration":0.16990000000004102,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with ports","status":"passed","title":"should accept websites with ports","duration":0.160000000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Valid Website URLs"],"fullName":"User Model - Profile Update Validation Valid Website URLs should accept websites with subdomains","status":"passed","title":"should accept websites with subdomains","duration":0.1552000000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject empty displayName when provided","status":"passed","title":"should reject empty displayName when provided","duration":0.5013999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with only spaces","status":"passed","title":"should reject displayName with only spaces","duration":0.20909999999997808,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName longer than 50 characters","status":"passed","title":"should reject displayName longer than 50 characters","duration":0.22119999999995343,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with null value","status":"passed","title":"should reject displayName with null value","duration":0.47589999999996735,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid DisplayName Validation"],"fullName":"User Model - Profile Update Validation Invalid DisplayName Validation should reject displayName with non-string value","status":"passed","title":"should reject displayName with non-string value","duration":0.22930000000002337,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio longer than 500 characters","status":"passed","title":"should reject bio longer than 500 characters","duration":0.250500000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should accept empty bio","status":"passed","title":"should accept empty bio","duration":0.14660000000003492,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with null value","status":"passed","title":"should reject bio with null value","duration":0.3724000000000274,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Bio Validation"],"fullName":"User Model - Profile Update Validation Invalid Bio Validation should reject bio with non-string value","status":"passed","title":"should reject bio with non-string value","duration":0.5328000000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject invalid website URL format","status":"passed","title":"should reject invalid website URL format","duration":0.668200000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website without protocol","status":"passed","title":"should reject website without protocol","duration":0.3199000000000183,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with invalid protocol","status":"passed","title":"should reject website with invalid protocol","duration":0.22800000000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with only protocol","status":"passed","title":"should reject website with only protocol","duration":0.23320000000001073,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with spaces","status":"passed","title":"should reject website with spaces","duration":0.38040000000000873,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with null value","status":"passed","title":"should reject website with null value","duration":0.3725000000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Invalid Website Validation"],"fullName":"User Model - Profile Update Validation Invalid Website Validation should reject website with non-string value","status":"passed","title":"should reject website with non-string value","duration":0.24139999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should return multiple validation errors for multiple invalid fields","status":"passed","title":"should return multiple validation errors for multiple invalid fields","duration":1.1075999999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Multiple Validation Errors"],"fullName":"User Model - Profile Update Validation Multiple Validation Errors should handle combination of valid and invalid fields","status":"passed","title":"should handle combination of valid and invalid fields","duration":0.2948000000000093,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Extra Fields Handling"],"fullName":"User Model - Profile Update Validation Extra Fields Handling should ignore fields not in profile update schema","status":"passed","title":"should ignore fields not in profile update schema","duration":1.0020000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle bio with special characters and unicode","status":"passed","title":"should handle bio with special characters and unicode","duration":0.17910000000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with unicode characters","status":"passed","title":"should handle displayName with unicode characters","duration":0.15670000000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle newlines in bio","status":"passed","title":"should handle newlines in bio","duration":0.14359999999999218,"failureMessages":[],"meta":{}},{"ancestorTitles":["User Model - Profile Update Validation","Edge Cases"],"fullName":"User Model - Profile Update Validation Edge Cases should handle displayName with numbers and symbols","status":"passed","title":"should handle displayName with numbers and symbols","duration":0.14339999999998554,"failureMessages":[],"meta":{}}],"startTime":1751775269067,"endTime":1751775269085.1792,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.profileUpdate.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/models/User.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with local user ID","status":"passed","title":"should create follow relationship with local user ID","duration":3.2746999999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should create follow relationship with ActivityPub actor ID","status":"passed","title":"should create follow relationship with ActivityPub actor ID","duration":0.6419999999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","create()"],"fullName":"FollowRepository Unit Tests create() should handle Prisma creation errors","status":"passed","title":"should handle Prisma creation errors","duration":1.586400000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by local user IDs","status":"passed","title":"should find follow relationship by local user IDs","duration":0.5689000000000419,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should find follow relationship by ActivityPub actor ID","status":"passed","title":"should find follow relationship by ActivityPub actor ID","duration":0.38349999999996953,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests findByFollowerAndFollowed() should return null when follow relationship not found","status":"passed","title":"should return null when follow relationship not found","duration":0.26130000000000564,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should delete existing follow relationship","status":"passed","title":"should delete existing follow relationship","duration":0.6888000000000147,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","deleteByFollowerAndFollowed()"],"fullName":"FollowRepository Unit Tests deleteByFollowerAndFollowed() should return null when trying to delete non-existent follow relationship","status":"passed","title":"should return null when trying to delete non-existent follow relationship","duration":0.4510999999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should get followers with default pagination","status":"passed","title":"should get followers with default pagination","duration":0.9823999999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findFollowersByUserId()"],"fullName":"FollowRepository Unit Tests findFollowersByUserId() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.730600000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","getFollowStats()"],"fullName":"FollowRepository Unit Tests getFollowStats() should calculate follower and following counts","status":"passed","title":"should calculate follower and following counts","duration":0.47939999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return true when follow relationship exists","status":"passed","title":"should return true when follow relationship exists","duration":0.20179999999999154,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow relationship does not exist","status":"passed","title":"should return false when follow relationship does not exist","duration":0.1582000000000221,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","isFollowing()"],"fullName":"FollowRepository Unit Tests isFollowing() should return false when follow is not accepted","status":"passed","title":"should return false when follow is not accepted","duration":0.15800000000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should return follow status map for multiple users","status":"passed","title":"should return follow status map for multiple users","duration":0.47640000000001237,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","bulkCheckFollowing()"],"fullName":"FollowRepository Unit Tests bulkCheckFollowing() should handle empty user ID array","status":"passed","title":"should handle empty user ID array","duration":0.1834999999999809,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should get recent followers with default limit","status":"passed","title":"should get recent followers with default limit","duration":0.3645999999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowRepository Unit Tests","findRecentFollowers()"],"fullName":"FollowRepository Unit Tests findRecentFollowers() should handle custom limit","status":"passed","title":"should handle custom limit","duration":0.2861000000000331,"failureMessages":[],"meta":{}}],"startTime":1751775259421,"endTime":1751775259435.3645,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/FollowRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a basic post with minimal data","status":"passed","title":"should create a basic post with minimal data","duration":4.969699999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with content warning","status":"passed","title":"should create a post with content warning","duration":2.1439000000000306,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":0.5069000000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should create a post with media attachments","status":"passed","title":"should create a post with media attachments","duration":0.44180000000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should include author information in response","status":"passed","title":"should include author information in response","duration":0.9805999999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Successful Post Creation"],"fullName":"PostRepository - Post Creation Successful Post Creation should handle different author verification states","status":"passed","title":"should handle different author verification states","duration":0.44259999999997035,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with maximum content length","status":"passed","title":"should handle posts with maximum content length","duration":0.7830999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with special characters","status":"passed","title":"should handle posts with special characters","duration":0.3475999999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle posts with newlines and formatting","status":"passed","title":"should handle posts with newlines and formatting","duration":0.5545999999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Post Creation with Edge Cases"],"fullName":"PostRepository - Post Creation Post Creation with Edge Cases should handle null optional fields correctly","status":"passed","title":"should handle null optional fields correctly","duration":0.39390000000003056,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should pass correct include parameters to Prisma","status":"passed","title":"should pass correct include parameters to Prisma","duration":0.5978999999999814,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Database Integration"],"fullName":"PostRepository - Post Creation Database Integration should handle Prisma create response correctly","status":"passed","title":"should handle Prisma create response correctly","duration":0.4463000000000079,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate database connection errors","status":"passed","title":"should propagate database connection errors","duration":1.37439999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate unique constraint violations","status":"passed","title":"should propagate unique constraint violations","duration":0.420599999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should propagate foreign key constraint violations","status":"passed","title":"should propagate foreign key constraint violations","duration":0.4031999999999698,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Error Handling"],"fullName":"PostRepository - Post Creation Error Handling should handle invalid data type errors","status":"passed","title":"should handle invalid data type errors","duration":0.39699999999999136,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should call database create method exactly once","status":"passed","title":"should call database create method exactly once","duration":0.29069999999995844,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should not make additional database calls after creation","status":"passed","title":"should not make additional database calls after creation","duration":0.42910000000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Performance and Optimization"],"fullName":"PostRepository - Post Creation Performance and Optimization should handle concurrent post creation calls","status":"passed","title":"should handle concurrent post creation calls","duration":0.46999999999997044,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should preserve exact content without modification","status":"passed","title":"should preserve exact content without modification","duration":0.5780000000000314,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle date objects correctly","status":"passed","title":"should handle date objects correctly","duration":0.3161000000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository - Post Creation","Data Validation and Sanitization"],"fullName":"PostRepository - Post Creation Data Validation and Sanitization should handle boolean values correctly","status":"passed","title":"should handle boolean values correctly","duration":1.0606000000000222,"failureMessages":[],"meta":{}}],"startTime":1751775261948,"endTime":1751775261968.0605,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.create.test.ts"},{"assertionResults":[{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a published post with default values","status":"passed","title":"should create a published post with default values","duration":4.842800000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a draft post when isPublished is false","status":"passed","title":"should create a draft post when isPublished is false","duration":3.143599999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should create a scheduled post","status":"passed","title":"should create a scheduled post","duration":2.0033000000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","create()"],"fullName":"PostRepository create() should handle content warning and activity ID","status":"passed","title":"should handle content warning and activity ID","duration":0.6134000000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should find post by ID with full relations","status":"passed","title":"should find post by ID with full relations","duration":0.9483000000000175,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findById()"],"fullName":"PostRepository findById() should return null if post not found","status":"passed","title":"should return null if post not found","duration":0.3048999999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should find posts by author with default pagination","status":"passed","title":"should find posts by author with default pagination","duration":0.635599999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should apply publishing status filter","status":"passed","title":"should apply publishing status filter","duration":0.6587999999999852,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByAuthor()"],"fullName":"PostRepository findByAuthor() should handle custom pagination and ordering","status":"passed","title":"should handle custom pagination and ordering","duration":0.9155000000000086,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should find published posts with default options","status":"passed","title":"should find published posts with default options","duration":0.8435999999999808,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by author ID","status":"passed","title":"should filter by author ID","duration":0.6789999999999736,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by content warning presence","status":"passed","title":"should filter by content warning presence","duration":0.850400000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findPublished()"],"fullName":"PostRepository findPublished() should filter by date range","status":"passed","title":"should filter by date range","duration":0.5690999999999917,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findReadyToPublish()"],"fullName":"PostRepository findReadyToPublish() should find expired scheduled posts","status":"passed","title":"should find expired scheduled posts","duration":0.7349999999999568,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should find future scheduled posts","status":"passed","title":"should find future scheduled posts","duration":0.7954000000000292,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findScheduled()"],"fullName":"PostRepository findScheduled() should filter by author","status":"passed","title":"should filter by author","duration":0.5339999999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should update post content and set updatedAt","status":"passed","title":"should update post content and set updatedAt","duration":0.7823000000000206,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should set publishedAt when transitioning to published","status":"passed","title":"should set publishedAt when transitioning to published","duration":0.7121999999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","update()"],"fullName":"PostRepository update() should not set publishedAt if already published","status":"passed","title":"should not set publishedAt if already published","duration":0.5591000000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","delete()"],"fullName":"PostRepository delete() should delete post and return deleted post with media info","status":"passed","title":"should delete post and return deleted post with media info","duration":0.7327000000000226,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return true if post exists and belongs to author","status":"passed","title":"should return true if post exists and belongs to author","duration":0.5013999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","existsByIdAndAuthor()"],"fullName":"PostRepository existsByIdAndAuthor() should return false if post does not exist or belongs to different author","status":"passed","title":"should return false if post does not exist or belongs to different author","duration":0.18980000000004793,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","getAuthorStats()"],"fullName":"PostRepository getAuthorStats() should return comprehensive post statistics for author","status":"passed","title":"should return comprehensive post statistics for author","duration":0.6829999999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","findByActivityId()"],"fullName":"PostRepository findByActivityId() should find post by ActivityPub activity ID","status":"passed","title":"should find post by ActivityPub activity ID","duration":0.3576999999999657,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should batch publish expired scheduled posts","status":"passed","title":"should batch publish expired scheduled posts","duration":0.574799999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should return empty array if no expired posts","status":"passed","title":"should return empty array if no expired posts","duration":0.3131999999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["PostRepository","publishExpiredScheduled()"],"fullName":"PostRepository publishExpiredScheduled() should use default limit of 50","status":"passed","title":"should use default limit of 50","duration":0.2658000000000129,"failureMessages":[],"meta":{}}],"startTime":1751775258491,"endTime":1751775258518.3132,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/repositories/PostRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should successfully login user with valid credentials","status":"failed","title":"should successfully login user with valid credentials","duration":15018.9386,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Successful Authentication"],"fullName":"Authentication Routes - User Login POST /auth/login - Successful Authentication should handle user with different data successfully","status":"failed","title":"should handle user with different data successfully","duration":15003.694200000002,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for non-existent user","status":"failed","title":"should return 401 for non-existent user","duration":15019.167899999997,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Authentication Failures"],"fullName":"Authentication Routes - User Login POST /auth/login - Authentication Failures should return 401 for incorrect password","status":"failed","title":"should return 401 for incorrect password","duration":15028.7713,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for invalid email format","status":"pending","title":"should return 400 for invalid email format","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing password","status":"pending","title":"should return 400 for missing password","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for missing email","status":"pending","title":"should return 400 for missing email","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Input Validation"],"fullName":"Authentication Routes - User Login POST /auth/login - Input Validation should return 400 for empty request body","status":"pending","title":"should return 400 for empty request body","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle database connection errors gracefully","status":"pending","title":"should handle database connection errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should handle AuthService errors gracefully","status":"pending","title":"should handle AuthService errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Database Errors"],"fullName":"Authentication Routes - User Login POST /auth/login - Database Errors should return 500 for token generation errors","status":"pending","title":"should return 500 for token generation errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle case-sensitive email matching","status":"pending","title":"should handle case-sensitive email matching","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle very long email addresses","status":"pending","title":"should handle very long email addresses","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Edge Cases"],"fullName":"Authentication Routes - User Login POST /auth/login - Edge Cases should handle user with null optional fields","status":"pending","title":"should handle user with null optional fields","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should require JSON content type","status":"pending","title":"should require JSON content type","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","POST /auth/login - Content-Type Handling"],"fullName":"Authentication Routes - User Login POST /auth/login - Content-Type Handling should handle malformed JSON gracefully","status":"pending","title":"should handle malformed JSON gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should not reveal whether email exists in error messages","status":"pending","title":"should not reveal whether email exists in error messages","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Login","Security and Rate Limiting Tests"],"fullName":"Authentication Routes - User Login Security and Rate Limiting Tests should handle concurrent login attempts","status":"pending","title":"should handle concurrent login attempts","failureMessages":[],"meta":{}}],"startTime":1751775260409,"endTime":1751775320481,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authLogin.test.ts"},{"assertionResults":[{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should successfully register a new user with valid data","status":"failed","title":"should successfully register a new user with valid data","duration":15018.8089,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Valid Registration"],"fullName":"Authentication Routes - User Registration POST /auth/register - Valid Registration should register user with minimal required data (no bio or displayName)","status":"failed","title":"should register user with minimal required data (no bio or displayName)","duration":15016.851299999998,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when username already exists","status":"failed","title":"should reject registration when username already exists","duration":15027.052599999999,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Duplicate User Conflicts"],"fullName":"Authentication Routes - User Registration POST /auth/register - Duplicate User Conflicts should reject registration when email already exists","status":"pending","title":"should reject registration when email already exists","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle database connection errors gracefully","status":"pending","title":"should handle database connection errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle password hashing errors","status":"pending","title":"should handle password hashing errors","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Server Error Handling"],"fullName":"Authentication Routes - User Registration POST /auth/register - Server Error Handling should handle user creation errors in database","status":"pending","title":"should handle user creation errors in database","failureMessages":[],"meta":{}},{"ancestorTitles":["Authentication Routes - User Registration","POST /auth/register - Input Validation Errors"],"fullName":"Authentication Routes - User Registration POST /auth/register - Input Validation Errors should reject registration with invalid data","status":"pending","title":"should reject registration with invalid data","failureMessages":[],"meta":{}}],"startTime":1751775275313,"endTime":1751775320378.0525,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/authRegistration.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user with valid authentication","status":"passed","title":"should successfully follow a user with valid authentication","duration":25.30510000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully follow a user as external ActivityPub actor","status":"passed","title":"should successfully follow a user as external ActivityPub actor","duration":19.636800000000108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Successful Follow Operations"],"fullName":"Follow Requests End-to-End Tests Successful Follow Operations should successfully unfollow a user","status":"passed","title":"should successfully unfollow a user","duration":7.893199999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should allow follow without authentication if actorId provided","status":"passed","title":"should allow follow without authentication if actorId provided","duration":4.901899999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject follow without authentication and without actorId","status":"passed","title":"should reject follow without authentication and without actorId","duration":5.803299999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should require authentication for unfollow operations","status":"passed","title":"should require authentication for unfollow operations","duration":5.9068999999999505,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Authentication Scenarios"],"fullName":"Follow Requests End-to-End Tests Authentication Scenarios should reject invalid authentication tokens","status":"passed","title":"should reject invalid authentication tokens","duration":7.156600000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 404 when target user not found","status":"passed","title":"should return 404 when target user not found","duration":4.805299999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when already following user","status":"passed","title":"should return 409 when already following user","duration":6.000499999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 409 when trying to follow yourself","status":"passed","title":"should return 409 when trying to follow yourself","duration":4.255899999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should return 403 when user has blocked the follower","status":"passed","title":"should return 403 when user has blocked the follower","duration":4.184600000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Error Scenarios"],"fullName":"Follow Requests End-to-End Tests Error Scenarios should handle malformed username parameters","status":"passed","title":"should handle malformed username parameters","duration":3.379299999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass username parameter correctly to controller","status":"passed","title":"should pass username parameter correctly to controller","duration":3.501800000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should pass request body correctly to controller","status":"passed","title":"should pass request body correctly to controller","duration":5.198099999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Parameter Handling"],"fullName":"Follow Requests End-to-End Tests Parameter Handling should preserve user information from authentication middleware","status":"passed","title":"should preserve user information from authentication middleware","duration":3.8944999999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to followers endpoint","status":"passed","title":"should handle GET requests to followers endpoint","duration":4.351199999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to following endpoint","status":"passed","title":"should handle GET requests to following endpoint","duration":3.306600000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","HTTP Methods and Endpoints"],"fullName":"Follow Requests End-to-End Tests HTTP Methods and Endpoints should handle GET requests to stats endpoint","status":"passed","title":"should handle GET requests to stats endpoint","duration":3.4067999999999756,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle very long usernames","status":"passed","title":"should handle very long usernames","duration":3.115599999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle special characters in usernames","status":"passed","title":"should handle special characters in usernames","duration":3.8881999999999834,"failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Requests End-to-End Tests","Edge Cases"],"fullName":"Follow Requests End-to-End Tests Edge Cases should handle concurrent follow requests gracefully","status":"passed","title":"should handle concurrent follow requests gracefully","duration":6.913699999999949,"failureMessages":[],"meta":{}}],"startTime":1751775259695,"endTime":1751775259835.9138,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/follow.requests.e2e.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/routes/users.router.test.ts"},{"assertionResults":[{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with default expiration","status":"passed","title":"should create AuthService with default expiration","duration":2.8152000000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Constructor"],"fullName":"AuthService Constructor should create AuthService with custom expiration","status":"passed","title":"should create AuthService with custom expiration","duration":0.5341000000000236,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should hash a password successfully","status":"passed","title":"should hash a password successfully","duration":225.65429999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should produce different hashes for the same password","status":"passed","title":"should produce different hashes for the same password","duration":445.43499999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle different password lengths","status":"passed","title":"should handle different password lengths","duration":446.22659999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle passwords with special characters","status":"passed","title":"should handle passwords with special characters","duration":223.73710000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should handle unicode characters in passwords","status":"passed","title":"should handle unicode characters in passwords","duration":224.2858000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":1.6265999999998257,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","hashPassword"],"fullName":"AuthService Password Hashing hashPassword should throw error for undefined password","status":"passed","title":"should throw error for undefined password","duration":0.6158000000000357,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should verify correct password","status":"passed","title":"should verify correct password","duration":443.6862000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject incorrect password","status":"passed","title":"should reject incorrect password","duration":457.17650000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should reject password with different case","status":"passed","title":"should reject password with different case","duration":463.2841000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle empty string password verification","status":"passed","title":"should handle empty string password verification","duration":446.6174000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should handle special characters in verification","status":"passed","title":"should handle special characters in verification","duration":446.34249999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for invalid hash format","status":"passed","title":"should throw error for invalid hash format","duration":0.469199999999546,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null hash","status":"passed","title":"should throw error for null hash","duration":0.5146999999997206,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Password Hashing","verifyPassword"],"fullName":"AuthService Password Hashing verifyPassword should throw error for null password","status":"passed","title":"should throw error for null password","duration":223.95090000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate a valid JWT token","status":"passed","title":"should generate a valid JWT token","duration":3.7559999999994034,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should generate different tokens for different users","status":"passed","title":"should generate different tokens for different users","duration":2.1240000000007058,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","generateToken"],"fullName":"AuthService JWT Token Management generateToken should include user data in token payload","status":"passed","title":"should include user data in token payload","duration":2.579099999999926,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should verify a valid token","status":"passed","title":"should verify a valid token","duration":1.8014000000002852,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for invalid token","status":"passed","title":"should throw error for invalid token","duration":0.45430000000033033,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for empty token","status":"passed","title":"should throw error for empty token","duration":0.36999999999989086,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","verifyToken"],"fullName":"AuthService JWT Token Management verifyToken should throw error for null token","status":"passed","title":"should throw error for null token","duration":0.6414000000004307,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should extract token from Bearer header","status":"passed","title":"should extract token from Bearer header","duration":0.34059999999954016,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for invalid header format","status":"passed","title":"should throw error for invalid header format","duration":0.40430000000014843,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for undefined header","status":"passed","title":"should throw error for undefined header","duration":0.4146999999993568,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","JWT Token Management","extractTokenFromHeader"],"fullName":"AuthService JWT Token Management extractTokenFromHeader should throw error for empty header","status":"passed","title":"should throw error for empty header","duration":0.34729999999944994,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should validate correct registration data","status":"passed","title":"should validate correct registration data","duration":1.9169999999994616,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.8586999999997715,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateRegistrationData"],"fullName":"AuthService Data Validation validateRegistrationData should reject short password","status":"passed","title":"should reject short password","duration":0.5024999999995998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should validate correct login data","status":"passed","title":"should validate correct login data","duration":0.6023999999997613,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject invalid email","status":"passed","title":"should reject invalid email","duration":0.35649999999986903,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Data Validation","validateLoginData"],"fullName":"AuthService Data Validation validateLoginData should reject missing password","status":"passed","title":"should reject missing password","duration":0.6075000000000728,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full password hash and verify cycle","status":"passed","title":"should complete full password hash and verify cycle","duration":742.4315999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should complete full token generation and verification cycle","status":"passed","title":"should complete full token generation and verification cycle","duration":1.998700000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["AuthService","Integration Tests"],"fullName":"AuthService Integration Tests should work with different JWT expiration times","status":"passed","title":"should work with different JWT expiration times","duration":4.624200000000201,"failureMessages":[],"meta":{}}],"startTime":1751775262734,"endTime":1751775267555.6243,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/AuthService.test.ts"},{"assertionResults":[{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should successfully create follow relationship","status":"passed","title":"should successfully create follow relationship","duration":7.459600000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should create ActivityPub federated follow relationship","status":"passed","title":"should create ActivityPub federated follow relationship","duration":1.7829000000000406,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject self-follow attempts","status":"passed","title":"should reject self-follow attempts","duration":1.2993999999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user not found","status":"passed","title":"should reject follow when user not found","duration":0.6864000000000487,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when user is inactive","status":"passed","title":"should reject follow when user is inactive","duration":1.076599999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject follow when already following","status":"passed","title":"should reject follow when already following","duration":0.922800000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should reject invalid ActivityPub actor ID","status":"passed","title":"should reject invalid ActivityPub actor ID","duration":1.2338999999999487,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","followUser()"],"fullName":"FollowService Unit Tests followUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":1.1996000000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should successfully remove follow relationship","status":"passed","title":"should successfully remove follow relationship","duration":1.452099999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should reject unfollow when not following","status":"passed","title":"should reject unfollow when not following","duration":0.870900000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","unfollowUser()"],"fullName":"FollowService Unit Tests unfollowUser() should handle validation errors for invalid input","status":"passed","title":"should handle validation errors for invalid input","duration":0.6607999999999947,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should successfully get followers with default pagination","status":"passed","title":"should successfully get followers with default pagination","duration":1.0603999999999587,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle custom pagination options","status":"passed","title":"should handle custom pagination options","duration":1.5287999999999329,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject when user not found","status":"passed","title":"should reject when user not found","duration":0.7009000000000469,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should handle invalid pagination options","status":"passed","title":"should handle invalid pagination options","duration":0.7899999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowers()"],"fullName":"FollowService Unit Tests getFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.6967999999999392,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should successfully get follow statistics","status":"passed","title":"should successfully get follow statistics","duration":0.7883999999999105,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject when user not found","status":"passed","title":"should reject when user not found","duration":1.05600000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getFollowStats()"],"fullName":"FollowService Unit Tests getFollowStats() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.33819999999991524,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when following","status":"passed","title":"should successfully check follow status when following","duration":0.4074999999999136,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should successfully check follow status when not following","status":"passed","title":"should successfully check follow status when not following","duration":0.27120000000002165,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","checkFollowStatus()"],"fullName":"FollowService Unit Tests checkFollowStatus() should reject invalid parameters","status":"passed","title":"should reject invalid parameters","duration":0.27129999999999654,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should successfully perform bulk follow check","status":"passed","title":"should successfully perform bulk follow check","duration":0.43029999999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject when too many users requested","status":"passed","title":"should reject when too many users requested","duration":0.3168000000000575,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid follower ID","status":"passed","title":"should reject invalid follower ID","duration":0.3125999999999749,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject non-array user IDs","status":"passed","title":"should reject non-array user IDs","duration":0.3261999999999716,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","bulkCheckFollowing()"],"fullName":"FollowService Unit Tests bulkCheckFollowing() should reject invalid user IDs in array","status":"passed","title":"should reject invalid user IDs in array","duration":0.3242999999999938,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should successfully get recent followers with default limit","status":"passed","title":"should successfully get recent followers with default limit","duration":0.45820000000003347,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should handle custom limit within bounds","status":"passed","title":"should handle custom limit within bounds","duration":0.32190000000002783,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to maximum of 50","status":"passed","title":"should constrain limit to maximum of 50","duration":0.32979999999997744,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should constrain limit to minimum of 1","status":"passed","title":"should constrain limit to minimum of 1","duration":0.3167999999999438,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","getRecentFollowers()"],"fullName":"FollowService Unit Tests getRecentFollowers() should reject invalid user ID","status":"passed","title":"should reject invalid user ID","duration":0.5404999999999518,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in followUser","status":"passed","title":"should handle repository errors in followUser","duration":1.181699999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["FollowService Unit Tests","Error Handling"],"fullName":"FollowService Unit Tests Error Handling should handle repository errors in getFollowStats","status":"passed","title":"should handle repository errors in getFollowStats","duration":0.45150000000001,"failureMessages":[],"meta":{}}],"startTime":1751775257968,"endTime":1751775258003.4514,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/__tests__/services/FollowService.test.ts"},{"assertionResults":[{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create user report successfully","status":"passed","title":"should create user report successfully","duration":6.393900000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create post report successfully","status":"passed","title":"should create post report successfully","duration":1.5751999999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Valid Report Creation"],"fullName":"ReportController createReport Valid Report Creation should create anonymous report (no auth)","status":"passed","title":"should create anonymous report (no auth)","duration":0.7857000000000198,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with neither user nor post ID","status":"passed","title":"should reject report with neither user nor post ID","duration":0.6659000000000219,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report with both user and post ID","status":"passed","title":"should reject report with both user and post ID","duration":0.5265999999999735,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent user","status":"passed","title":"should reject report of non-existent user","duration":0.6126999999999612,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject report of non-existent post","status":"passed","title":"should reject report of non-existent post","duration":0.512299999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting user","status":"passed","title":"should reject self-reporting user","duration":0.497099999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Invalid Report Creation"],"fullName":"ReportController createReport Invalid Report Creation should reject self-reporting post","status":"passed","title":"should reject self-reporting post","duration":0.665300000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","createReport","Error Handling"],"fullName":"ReportController createReport Error Handling should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully","duration":5.004799999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should return paginated reports","status":"passed","title":"should return paginated reports","duration":0.8048000000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReports"],"fullName":"ReportController getReports should handle filter parameters","status":"passed","title":"should handle filter parameters","duration":0.39740000000000464,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should update report status successfully","status":"passed","title":"should update report status successfully","duration":0.6716999999999871,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","updateReportStatus"],"fullName":"ReportController updateReportStatus should reject invalid status","status":"passed","title":"should reject invalid status","duration":0.3643999999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["ReportController","getReportById"],"fullName":"ReportController getReportById should return specific report","status":"passed","title":"should return specific report","duration":0.4253999999999678,"failureMessages":[],"meta":{}}],"startTime":1751775267920,"endTime":1751775267941.4253,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/controllers/__tests__/ReportController.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/globalError.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/pathTraversalFix.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/rawUrlTest.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/realisticSecurityTests.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/middleware/__tests__/staticFileSecurityMiddleware.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/auth.rateLimit.test.ts"},{"assertionResults":[{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should allow uploads within the limit (20 per hour)","status":"passed","title":"should allow uploads within the limit (20 per hour)","duration":1329.8335000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should block 21st upload with rate limit error","status":"failed","title":"should block 21st upload with rate limit error","duration":1319.7281,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:144:37\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11\n    at withEnv (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:90:5)"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should include rate limit headers in response","status":"failed","title":"should include rate limit headers in response","duration":4.852200000000266,"failureMessages":["AssertionError: expected '0' to be '19' // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:165:55\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should track rate limits by user ID when authenticated","status":"failed","title":"should track rate limits by user ID when authenticated","duration":1394.8917999999994,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:182:36\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle multiple files in single request within rate limit","status":"failed","title":"should handle multiple files in single request within rate limit","duration":6.181599999999889,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:198:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle different file types within rate limit","status":"failed","title":"should handle different file types within rate limit","duration":16.063500000000204,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:219:33\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:218:17\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","POST /media/upload Rate Limiting"],"fullName":"Media Upload Rate Limiting POST /media/upload Rate Limiting should handle large files within rate limit","status":"failed","title":"should handle large files within rate limit","duration":7.138400000000729,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:235:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Upload Request Validation with Rate Limiting"],"fullName":"Media Upload Rate Limiting Upload Request Validation with Rate Limiting should apply rate limiting before file validation","status":"passed","title":"should apply rate limiting before file validation","duration":1367.8396999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Upload Request Validation with Rate Limiting"],"fullName":"Media Upload Rate Limiting Upload Request Validation with Rate Limiting should not count failed uploads against rate limit","status":"failed","title":"should not count failed uploads against rate limit","duration":7.6458999999995285,"failureMessages":["AssertionError: expected 429 to be 400 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:265:38\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Non-Rate-Limited Media Operations"],"fullName":"Media Upload Rate Limiting Non-Rate-Limited Media Operations should not apply rate limiting to GET /media/info/:fileId","status":"passed","title":"should not apply rate limiting to GET /media/info/:fileId","duration":80.05479999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Non-Rate-Limited Media Operations"],"fullName":"Media Upload Rate Limiting Non-Rate-Limited Media Operations should not apply rate limiting to DELETE /media/:fileId","status":"passed","title":"should not apply rate limiting to DELETE /media/:fileId","duration":55.725499999999556,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Rate Limit Error Response Format"],"fullName":"Media Upload Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"passed","title":"should return consistent error format when rate limited","duration":1357.4170999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should handle rapid concurrent upload attempts","status":"failed","title":"should handle rapid concurrent upload attempts","duration":12.80789999999979,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:352:33\n    at Array.forEach (<anonymous>)\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:351:17\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should handle uploads with metadata within rate limit","status":"failed","title":"should handle uploads with metadata within rate limit","duration":4.523799999999937,"failureMessages":["AssertionError: expected 429 to be 201 // Object.is equality\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:373:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Media Upload Rate Limiting","Edge Cases and Error Scenarios"],"fullName":"Media Upload Rate Limiting Edge Cases and Error Scenarios should reset rate limit after time window","status":"failed","title":"should reset rate limit after time window","duration":3.347899999999754,"failureMessages":["AssertionError: expected 3594 to be greater than 1751775274\n    at C:\\Users\\Et Al\\Documents\\GitHub\\ParaSocial\\backend\\src\\routes\\__tests__\\media.rateLimit.test.ts:392:25\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}}],"startTime":1751775267801,"endTime":1751775274770.348,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/media.rateLimit.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUnit.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/mediaUpload.test.ts"},{"assertionResults":[{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should allow post creation within the limit (10 per hour)","status":"failed","title":"should allow post creation within the limit (10 per hour)","duration":15019.9221,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should block 11th post creation with rate limit error","status":"failed","title":"should block 11th post creation with rate limit error","duration":15016.884800000002,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should include rate limit headers in response","status":"failed","title":"should include rate limit headers in response","duration":15009.1866,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should track rate limits by user ID when authenticated","status":"pending","title":"should track rate limits by user ID when authenticated","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","POST /posts Rate Limiting (Post Creation)"],"fullName":"Posts Routes Rate Limiting POST /posts Rate Limiting (Post Creation) should allow different post content without affecting rate limit","status":"pending","title":"should allow different post content without affecting rate limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to GET /posts (reading posts)","status":"pending","title":"should not apply rate limiting to GET /posts (reading posts)","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to GET /posts/:id (reading individual posts)","status":"pending","title":"should not apply rate limiting to GET /posts/:id (reading individual posts)","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Non-Rate-Limited Post Operations"],"fullName":"Posts Routes Rate Limiting Non-Rate-Limited Post Operations should not apply rate limiting to DELETE /posts/:id (deleting posts)","status":"pending","title":"should not apply rate limiting to DELETE /posts/:id (deleting posts)","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Rate Limit Error Response Format"],"fullName":"Posts Routes Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"pending","title":"should return consistent error format when rate limited","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Edge Cases"],"fullName":"Posts Routes Rate Limiting Edge Cases should handle posts with maximum content length","status":"pending","title":"should handle posts with maximum content length","failureMessages":[],"meta":{}},{"ancestorTitles":["Posts Routes Rate Limiting","Edge Cases"],"fullName":"Posts Routes Rate Limiting Edge Cases should handle rapid consecutive post creation within limit","status":"pending","title":"should handle rapid consecutive post creation within limit","failureMessages":[],"meta":{}}],"startTime":1751775269611,"endTime":1751775314658.1865,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/posts.rateLimit.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/rateLimitSuite.test.ts"},{"assertionResults":[],"startTime":1751775257064,"endTime":1751775257064,"status":"passed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/staticFileServingSecurity.test.ts"},{"assertionResults":[{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should allow follow operations within the limit (20 per hour)","status":"failed","title":"should allow follow operations within the limit (20 per hour)","duration":15010.9135,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should block 21st follow operation with rate limit error","status":"failed","title":"should block 21st follow operation with rate limit error","duration":15015.3787,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should include rate limit headers in response","status":"failed","title":"should include rate limit headers in response","duration":15018.8573,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","POST /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting POST /users/:username/follow Rate Limiting should track rate limits by user ID when authenticated","status":"failed","title":"should track rate limits by user ID when authenticated","duration":15020.469799999999,"failureMessages":["Error: Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Et%20Al/Documents/GitHub/parasocial/backend/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:594:17)\n    at processTimers (node:internal/timers:529:7)"],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","DELETE /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting DELETE /users/:username/follow Rate Limiting should allow unfollow operations within the limit","status":"pending","title":"should allow unfollow operations within the limit","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","DELETE /users/:username/follow Rate Limiting"],"fullName":"Follow Operations Rate Limiting DELETE /users/:username/follow Rate Limiting should block 21st unfollow operation with rate limit error","status":"pending","title":"should block 21st unfollow operation with rate limit error","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Shared Rate Limiting Between Follow and Unfollow"],"fullName":"Follow Operations Rate Limiting Shared Rate Limiting Between Follow and Unfollow should share rate limit between follow and unfollow operations","status":"pending","title":"should share rate limit between follow and unfollow operations","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Shared Rate Limiting Between Follow and Unfollow"],"fullName":"Follow Operations Rate Limiting Shared Rate Limiting Between Follow and Unfollow should handle alternating follow/unfollow operations","status":"pending","title":"should handle alternating follow/unfollow operations","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Non-Rate-Limited User Operations"],"fullName":"Follow Operations Rate Limiting Non-Rate-Limited User Operations should not apply rate limiting to GET /users/:username (profile views)","status":"pending","title":"should not apply rate limiting to GET /users/:username (profile views)","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Non-Rate-Limited User Operations"],"fullName":"Follow Operations Rate Limiting Non-Rate-Limited User Operations should not apply rate limiting to follower/following lists","status":"pending","title":"should not apply rate limiting to follower/following lists","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Non-Rate-Limited User Operations"],"fullName":"Follow Operations Rate Limiting Non-Rate-Limited User Operations should not apply rate limiting to block/unblock operations","status":"pending","title":"should not apply rate limiting to block/unblock operations","failureMessages":[],"meta":{}},{"ancestorTitles":["Follow Operations Rate Limiting","Rate Limit Error Response Format"],"fullName":"Follow Operations Rate Limiting Rate Limit Error Response Format should return consistent error format when rate limited","status":"pending","title":"should return consistent error format when rate limited","failureMessages":[],"meta":{}}],"startTime":1751775260002,"endTime":1751775320071,"status":"failed","message":"","name":"C:/Users/Et Al/Documents/GitHub/ParaSocial/backend/src/routes/__tests__/users.follow.rateLimit.test.ts"}]}